Adapter android.widget.AdapterView.getAdapter()
Adapter android.widget.ListView.getAdapter()
AlertDialog$Builder android.app.AlertDialog$Builder.setAdapter(ListAdapter,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setCancelable(boolean)
AlertDialog$Builder android.app.AlertDialog$Builder.setIcon(Drawable)
AlertDialog$Builder android.app.AlertDialog$Builder.setIcon(int)
AlertDialog$Builder android.app.AlertDialog$Builder.setItems(CharSequence[],DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setItems(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setMessage(CharSequence)
AlertDialog$Builder android.app.AlertDialog$Builder.setMessage(int)
AlertDialog$Builder android.app.AlertDialog$Builder.setMultiChoiceItems(CharSequence[],boolean[],DialogInterface$OnMultiChoiceClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setMultiChoiceItems(Cursor,String,String,DialogInterface$OnMultiChoiceClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setMultiChoiceItems(int,boolean[],DialogInterface$OnMultiChoiceClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setNegativeButton(CharSequence,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setNegativeButton(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setPositiveButton(CharSequence,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setPositiveButton(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setTitle(CharSequence)
AlertDialog$Builder android.app.AlertDialog$Builder.setTitle(int)
AlertDialog$Builder android.app.AlertDialog$Builder.setView(View)
AlertDialog$Builder android.app.AlertDialog$Builder.setView(View,int,int,int,int)
Appendable java.lang.StringBuffer.append(CharSequence)
Appendable java.lang.StringBuffer.append(CharSequence,int,int)
Appendable java.lang.StringBuffer.append(char)
Appendable java.lang.StringBuilder.append(CharSequence)
Appendable java.lang.StringBuilder.append(CharSequence,int,int)
Appendable java.lang.StringBuilder.append(char)
Bitmap android.graphics.Bitmap.copy(Bitmap$Config,boolean)
Bitmap android.graphics.Bitmap.createBitmap(int,int,Bitmap$Config)
Bitmap android.graphics.Bitmap.createBitmap(int,int,Bitmap$Config,boolean)
Bitmap android.graphics.Bitmap.createBitmap(int[],int,int,Bitmap$Config)
Bitmap android.graphics.Bitmap.createBitmap(int[],int,int,int,int,Bitmap$Config)
Bitmap android.graphics.BitmapFactory.decodeByteArray(byte[],int,int,BitmapFactory$Options)
Bitmap android.graphics.BitmapFactory.decodeFile(String,BitmapFactory$Options)
Bitmap android.graphics.BitmapFactory.decodeStream(InputStream,Rect,BitmapFactory$Options)
Bitmap android.provider.Contacts$People.loadContactPhoto(Context,Uri,int,BitmapFactory$Options)
Bitmap android.provider.MediaStore$Images$Thumbnails.getThumbnail(ContentResolver,long,int,BitmapFactory$Options)
Bitmap android.provider.MediaStore$Images$Thumbnails.getThumbnail(ContentResolver,long,long,int,BitmapFactory$Options)
Bitmap$Config android.graphics.Bitmap.getConfig()
CharSequence android.widget.EditText.getText()
Class java.lang.Object.getClass()
ContextMenu$ContextMenuInfo android.view.MenuItem.getMenuInfo()
Enum java.lang.Enum.valueOf(Class,String)
KeyEvent$DispatcherState android.view.View.getKeyDispatcherState()
LayoutInflater android.view.LayoutInflater.'from'(Context)
LayoutInflater$Factory android.view.LayoutInflater.getFactory()
Loader android.app.LoaderManager.initLoader(int,Bundle,LoaderManager$LoaderCallbacks)
MenuItem android.view.MenuItem.setOnActionExpandListener(MenuItem$OnActionExpandListener)
MenuItem android.view.MenuItem.setOnMenuItemClickListener(MenuItem$OnMenuItemClickListener)
NetworkInfo$DetailedState android.net.NetworkInfo.getDetailedState()
Notification$Builder android.app.Notification$Builder.setAutoCancel(boolean)
Notification$Builder android.app.Notification$Builder.setContent(RemoteViews)
Notification$Builder android.app.Notification$Builder.setContentInfo(CharSequence)
Notification$Builder android.app.Notification$Builder.setContentIntent(PendingIntent)
Notification$Builder android.app.Notification$Builder.setContentText(CharSequence)
Notification$Builder android.app.Notification$Builder.setContentTitle(CharSequence)
Notification$Builder android.app.Notification$Builder.setDefaults(int)
Notification$Builder android.app.Notification$Builder.setDeleteIntent(PendingIntent)
Notification$Builder android.app.Notification$Builder.setFullScreenIntent(PendingIntent,boolean)
Notification$Builder android.app.Notification$Builder.setLargeIcon(Bitmap)
Notification$Builder android.app.Notification$Builder.setLights(int,int,int)
Notification$Builder android.app.Notification$Builder.setNumber(int)
Notification$Builder android.app.Notification$Builder.setOngoing(boolean)
Notification$Builder android.app.Notification$Builder.setOnlyAlertOnce(boolean)
Notification$Builder android.app.Notification$Builder.setProgress(int,int,boolean)
Notification$Builder android.app.Notification$Builder.setSmallIcon(int)
Notification$Builder android.app.Notification$Builder.setSmallIcon(int,int)
Notification$Builder android.app.Notification$Builder.setSound(Uri)
Notification$Builder android.app.Notification$Builder.setSound(Uri,int)
Notification$Builder android.app.Notification$Builder.setTicker(CharSequence)
Notification$Builder android.app.Notification$Builder.setTicker(CharSequence,RemoteViews)
Notification$Builder android.app.Notification$Builder.setVibrate(long[])
Notification$Builder android.app.Notification$Builder.setWhen(long)
Object org.apache.http.client.HttpClient.execute(HttpHost,HttpRequest,ResponseHandler)
Object org.apache.http.client.HttpClient.execute(HttpHost,HttpRequest,ResponseHandler,HttpContext)
Object org.apache.http.client.HttpClient.execute(HttpUriRequest,ResponseHandler)
Object org.apache.http.client.HttpClient.execute(HttpUriRequest,ResponseHandler,HttpContext)
Object[] android.os.Parcel.createTypedArray(Parcelable$Creator)
Object[] java.util.Arrays.copyOf(Object[],int,Class)
Object[] java.util.List.toArray(Object[])
Object[] java.util.Set.toArray(Object[])
Parcelable android.content.Intent.getParcelableExtra(String)
Parcelable android.os.Bundle.getParcelable(String)
Parcelable android.os.Parcel.readParcelable(ClassLoader)
PowerManager$WakeLock android.os.PowerManager.newWakeLock(int,String)
ProgressDialog android.app.ProgressDialog.show(Context,CharSequence,CharSequence,boolean,boolean,DialogInterface$OnCancelListener)
SQLiteDatabase android.database.sqlite.SQLiteDatabase.openDatabase(String,SQLiteDatabase$CursorFactory,int)
SQLiteDatabase android.database.sqlite.SQLiteDatabase.openDatabase(String,SQLiteDatabase$CursorFactory,int,DatabaseErrorHandler)
SQLiteDatabase android.database.sqlite.SQLiteDatabase.openDatabase(String,SQLiteDatabase$CursorFactory,int,DatabaseErrorHandler,short)
SharedPreferences$Editor android.content.SharedPreferences$Editor.clear()
SharedPreferences$Editor android.content.SharedPreferences$Editor.putBoolean(String,boolean)
SharedPreferences$Editor android.content.SharedPreferences$Editor.putInt(String,int)
SharedPreferences$Editor android.content.SharedPreferences$Editor.putLong(String,long)
SharedPreferences$Editor android.content.SharedPreferences$Editor.putString(String,String)
SharedPreferences$Editor android.content.SharedPreferences$Editor.remove(String)
SharedPreferences$Editor android.content.SharedPreferences.edit()
Spanned android.text.Html.fromHtml(String,Html$ImageGetter,Html$TagHandler)
SubMenu android.view.Menu.addSubMenu(CharSequence)
SubMenu android.view.Menu.addSubMenu(int)
SubMenu android.view.Menu.addSubMenu(int,int,int,CharSequence)
TabHost$TabSpec android.widget.TabHost$TabSpec.setContent(Intent)
TabHost$TabSpec android.widget.TabHost$TabSpec.setContent(TabHost$TabContentFactory)
TabHost$TabSpec android.widget.TabHost$TabSpec.setContent(int)
TabHost$TabSpec android.widget.TabHost$TabSpec.setIndicator(CharSequence)
TabHost$TabSpec android.widget.TabHost$TabSpec.setIndicator(CharSequence,Drawable)
TabHost$TabSpec android.widget.TabHost$TabSpec.setIndicator(View)
TabHost$TabSpec android.widget.TabHost.newTabSpec(String)
Uri$Builder android.net.Uri$Builder.authority(String)
Uri$Builder android.net.Uri$Builder.authority(Uri$Part)
Uri$Builder android.net.Uri$Builder.encodedPath(String)
Uri$Builder android.net.Uri$Builder.scheme(String)
ViewGroup$LayoutParams android.view.View.getLayoutParams()
WifiManager$MulticastLock android.net.wifi.WifiManager.createMulticastLock(String)
WifiManager$WifiLock android.net.wifi.WifiManager.createWifiLock(String)
WifiManager$WifiLock android.net.wifi.WifiManager.createWifiLock(int,String)
WindowManager$LayoutParams android.view.Window.getAttributes()
boolean android.graphics.Bitmap.compress(Bitmap$CompressFormat,int,OutputStream)
boolean android.graphics.Canvas.clipRect(Rect,Region$Op)
boolean android.graphics.Canvas.clipRect(RectF,Region$Op)
boolean android.graphics.Canvas.clipRect(float,float,float,float,Region$Op)
boolean android.graphics.drawable.Drawable.setState(int[])
boolean android.view.KeyEvent.dispatch(KeyEvent$Callback)
boolean android.view.KeyEvent.dispatch(KeyEvent$Callback,KeyEvent$DispatcherState,Object)
boolean android.view.ViewGroup.checkLayoutParams(ViewGroup$LayoutParams)
boolean android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener(AccessibilityManager$AccessibilityStateChangeListener)
boolean android.view.accessibility.AccessibilityManager.removeAccessibilityStateChangeListener(AccessibilityManager$AccessibilityStateChangeListener)
boolean java.net.InetAddress.isReachable(NetworkInterface,int,int)
char java.lang.StringBuilder.charAt(int)
int android.media.AudioManager.abandonAudioFocus(AudioManager$OnAudioFocusChangeListener)
int android.media.AudioManager.requestAudioFocus(AudioManager$OnAudioFocusChangeListener,int,int)
int android.media.FaceDetector.findFaces(Bitmap,FaceDetector$Face[])
int java.lang.Integer.compareTo(Object)
int java.lang.String.compareTo(Object)
int java.lang.StringBuffer.length()
int java.lang.StringBuilder.length()
void android.app.Activity.onCreateContextMenu(ContextMenu,View,ContextMenu$ContextMenuInfo)
void android.app.Dialog.<init>(Context,boolean,DialogInterface$OnCancelListener)
void android.app.Dialog.setContentView(View,ViewGroup$LayoutParams)
void android.app.Dialog.setOnCancelListener(DialogInterface$OnCancelListener)
void android.app.Dialog.setOnDismissListener(DialogInterface$OnDismissListener)
void android.content.ContentValues.<init>(HashMap,ContentValues$1)
void android.content.IntentFilter.<init>(Parcel,IntentFilter$1)
void android.content.SharedPreferences.registerOnSharedPreferenceChangeListener(SharedPreferences$OnSharedPreferenceChangeListener)
void android.content.SharedPreferences.unregisterOnSharedPreferenceChangeListener(SharedPreferences$OnSharedPreferenceChangeListener)
void android.database.DataSetObservable.registerObserver(Object)
void android.database.sqlite.SQLiteOpenHelper.<init>(Context,String,SQLiteDatabase$CursorFactory,int)
void android.database.sqlite.SQLiteOpenHelper.<init>(Context,String,SQLiteDatabase$CursorFactory,int,DatabaseErrorHandler)
void android.graphics.Paint.setStyle(Paint$Style)
void android.graphics.Paint.setTextAlign(Paint$Align)
void android.graphics.PorterDuffColorFilter.<init>(int,PorterDuff$Mode)
void android.graphics.drawable.BitmapDrawable.<init>(BitmapDrawable$BitmapState,Resources)
void android.graphics.drawable.BitmapDrawable.<init>(BitmapDrawable$BitmapState,Resources,BitmapDrawable$1)
void android.graphics.drawable.LevelListDrawable.<init>(LevelListDrawable$LevelListState,Resources)
void android.graphics.drawable.LevelListDrawable.<init>(LevelListDrawable$LevelListState,Resources,LevelListDrawable$1)
void android.media.MediaPlayer.setOnCompletionListener(MediaPlayer$OnCompletionListener)
void android.os.AsyncTask.onCancelled(Object)
void android.os.AsyncTask.onPostExecute(Object)
void android.os.Handler.<init>(Handler$Callback)
void android.os.Handler.<init>(Looper,Handler$Callback)
void android.os.Parcel.writeTypedArray(Parcelable[],int)
void android.preference.Preference.setOnPreferenceClickListener(Preference$OnPreferenceClickListener)
void android.util.Pair.<init>(Object,Object)
void android.view.GestureDetector.<init>(Context,GestureDetector$OnGestureListener)
void android.view.GestureDetector.<init>(Context,GestureDetector$OnGestureListener,Handler)
void android.view.GestureDetector.<init>(Context,GestureDetector$OnGestureListener,Handler,boolean)
void android.view.GestureDetector.<init>(GestureDetector$OnGestureListener)
void android.view.GestureDetector.<init>(GestureDetector$OnGestureListener,Handler)
void android.view.GestureDetector.setOnDoubleTapListener(GestureDetector$OnDoubleTapListener)
void android.view.LayoutInflater.setFactory(LayoutInflater$Factory)
void android.view.View.setAccessibilityDelegate(View$AccessibilityDelegate)
void android.view.View.setLayoutParams(ViewGroup$LayoutParams)
void android.view.View.setOnCreateContextMenuListener(View$OnCreateContextMenuListener)
void android.view.View.setOnFocusChangeListener(View$OnFocusChangeListener)
void android.view.View.setTag(Object)
void android.view.View.setTag(int,Object)
void android.view.ViewGroup$LayoutParams.<init>(ViewGroup$LayoutParams)
void android.view.ViewGroup$MarginLayoutParams.<init>(ViewGroup$LayoutParams)
void android.view.ViewGroup$MarginLayoutParams.<init>(ViewGroup$MarginLayoutParams)
void android.view.ViewGroup.addView(View,ViewGroup$LayoutParams)
void android.view.ViewGroup.addView(View,int,ViewGroup$LayoutParams)
void android.view.animation.Animation.setAnimationListener(Animation$AnimationListener)
void android.widget.AbsListView$LayoutParams.<init>(ViewGroup$LayoutParams)
void android.widget.ArrayAdapter.addAll(Object[])
void android.widget.AutoCompleteTextView.setAdapter(ListAdapter)
void android.widget.EditText.setText(CharSequence,TextView$BufferType)
void android.widget.FrameLayout$LayoutParams.<init>(ViewGroup$LayoutParams)
void android.widget.FrameLayout$LayoutParams.<init>(ViewGroup$MarginLayoutParams)
void android.widget.LinearLayout$LayoutParams.<init>(ViewGroup$LayoutParams)
void android.widget.LinearLayout$LayoutParams.<init>(ViewGroup$MarginLayoutParams)
void android.widget.ListView.setAdapter(Adapter)
void android.widget.SearchView.setOnCloseListener(SearchView$OnCloseListener)
void android.widget.SearchView.setOnQueryTextListener(SearchView$OnQueryTextListener)
void android.widget.SimpleCursorAdapter.setViewBinder(SimpleCursorAdapter$ViewBinder)
void android.widget.Spinner.setAdapter(Adapter)
void android.widget.TabHost.addTab(TabHost$TabSpec)
void android.widget.TabHost.setOnTabChangedListener(TabHost$OnTabChangeListener)
void android.widget.TextView.setEllipsize(TextUtils$TruncateAt)
void android.widget.TextView.setText(CharSequence,TextView$BufferType)
void android.widget.TextView.setText(CharSequence,TextView$BufferType,boolean,int)
void android.widget.TextView.setText(int,TextView$BufferType)
void java.io.InputStreamReader.<init>(InputStream,String)
void java.io.OutputStreamWriter.<init>(OutputStream,String)
void java.lang.StringBuilder.setCharAt(int,char)
void java.util.Collections.sort(List,Comparator)
void org.apache.http.client.methods.HttpGet.<init>(String)
void org.apache.http.client.methods.HttpGet.<init>(URI)
void org.apache.http.client.methods.HttpPost.<init>(String)
void org.apache.http.client.methods.HttpPost.<init>(URI)
void org.apache.http.entity.StringEntity.<init>(String)
void org.apache.http.entity.StringEntity.<init>(String,Charset)
void org.apache.http.entity.StringEntity.<init>(String,ContentType)
void org.apache.http.entity.StringEntity.<init>(String,String)
void org.apache.http.impl.client.DefaultHttpClient.<init>(ClientConnectionManager,HttpParams)
void org.apache.http.impl.client.DefaultHttpClient.<init>(HttpParams)
