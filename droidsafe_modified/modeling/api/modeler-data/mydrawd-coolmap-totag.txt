#"void DroidSafeMain.__callStaticInits__ ()", "@DSModeled()", "1" 
#"void android.app.ActivityManagerProxy.handleApplicationStrictModeViolation (IBinder, int, ViolationInfo)", "@DSModeled()", "1" 
"String android.opengl.GLErrorWrapper.glGetString (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.<init> (GL, int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glClearColor (float, float, float, float)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glClearDepthf (float)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glDisable (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glDisableClientState (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glDrawElements (int, int, int, Buffer)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glEnableClientState (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glFrontFace (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glFrustumf (float, float, float, float, float, float)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glMatrixMode (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glRotatef (float, float, float, float)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glScalef (float, float, float)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glShadeModel (int)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glVertexPointer (int, int, int, Buffer)", "@DSModeled()", "1" 
"void android.opengl.GLErrorWrapper.glViewport (int, int, int, int)", "@DSModeled()", "1" 
"void android.opengl.GLException.<init> (int)", "@DSModeled()", "1" 
"void android.opengl.GLException.<init> (int, String)", "@DSModeled()", "1" 
"EGLConfig android.opengl.GLSurfaceView$ComponentSizeChooser.chooseConfig (EGL10, EGLDisplay, EGLConfig[])", "@DSModeled()", "1" 
"EGLContext android.opengl.GLSurfaceView$DefaultContextFactory.createContext (EGL10, EGLDisplay, EGLConfig)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$DefaultContextFactory.destroyContext (EGL10, EGLDisplay, EGLContext)", "@DSModeled()", "1" 
"EGLSurface android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory.createWindowSurface (EGL10, EGLDisplay, EGLConfig, Object)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory.destroySurface (EGL10, EGLDisplay, EGLSurface)", "@DSModeled()", "1" 
"boolean android.opengl.GLSurfaceView$EglHelper.swap ()", "@DSModeled()", "1" 
"GL android.opengl.GLSurfaceView$EglHelper.createSurface (SurfaceHolder)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$EglHelper.destroySurface ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$EglHelper.finish ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$EglHelper.purgeBuffers ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$EglHelper.start ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThread.onPause ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThread.onResume ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThread.requestReleaseEglContextLocked ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThread.run ()", "@DSModeled()", "1" 
"boolean android.opengl.GLSurfaceView$GLThreadManager.shouldTerminateEGLWhenPausing ()", "@DSModeled()", "1" 
"boolean android.opengl.GLSurfaceView$GLThreadManager.tryAcquireEglContextLocked (GLThread)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThreadManager.checkGLDriver (GL10)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThreadManager.releaseEglContextLocked (GLThread)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$GLThreadManager.threadExiting (GLThread)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$LogWriter.flush ()", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView$LogWriter.write (char[], int, int)", "@DSModeled()", "1" 
"void android.opengl.GLSurfaceView.<init> (Context)", "@DSModeled()", "1" 
"void android.view.WindowImpl.setContentView (View)", "@DSModeled()", "1" 
"void com.android.internal.app.ActionBarImpl.setShowHideAnimationEnabled (boolean)", "@DSModeled()", "1" 
"EGLContext com.google.android.gles_jni.EGLImpl.eglCreateContext (EGLDisplay, EGLConfig, EGLContext, int[])", "@DSModeled()", "1" 
"String com.google.android.gles_jni.GLImpl.glGetString (int)", "@DSModeled()", "1" 
"void com.google.android.gles_jni.GLImpl.glColorPointer (int, int, int, Buffer)", "@DSModeled()", "1" 
"void com.google.android.gles_jni.GLImpl.glVertexPointer (int, int, int, Buffer)", "@DSModeled()", "1" 
"void droidsafe.runtime.DroidSafeAndroidRuntime.modelService (Service)", "@DSModeled()", "1" 
"void java.lang.TwoEnumerationsInOne.<init> (Enumeration, Enumeration)", "@DSModeled()", "1" 
"void java.math.RoundingMode.<init> (String, int, int)", "@DSModeled()", "1" 
"IntBuffer java.nio.BaseByteBuffer.asIntBuffer ()", "@DSModeled()", "1" 
"void java.nio.DirectByteBuffer.<init> (MemoryBlock, int, int)", "@DSModeled()", "1" 
"void java.nio.FloatToByteBufferAdapter.<init> (ByteBuffer)", "@DSModeled()", "1" 
"void java.nio.ReadWriteDirectByteBuffer.put (float[], int, int)", "@DSModeled()", "1" 
"void com.invincea.draw.Cube.<init> ()", "@DSModeled()", "1" 
"boolean com.invincea.draw.MyGLActivity.onKeyDown (int, KeyEvent)", "@DSModeled()", "1" 
"void com.invincea.draw.Triangle.<init> ()", "@DSModeled()", "1" 
"void com.invincea.draw.Square.<init> ()", "@DSModeled()", "1" 
"void com.invincea.draw.Pyramid.<init> ()", "@DSModeled()", "1" 

"void DroidSafeMain.__callStaticInits__ ()", "@DSModeled()", "1" 
"boolean android.app.Activity.onContextItemSelected (MenuItem)", "@DSModeled()", "1" 
"boolean android.app.Activity.onCreateOptionsMenu (Menu)", "@DSModeled()", "1" 
"void android.app.Activity.onOptionsMenuClosed (Menu)", "@DSModeled()", "1" 
"void android.app.Activity.onPostCreate (Bundle)", "@DSModeled()", "1" 
"void android.app.Activity.onPrepareDialog (int, Dialog, Bundle)", "@DSModeled()", "1" 
"void android.app.Activity.onStart ()", "@DSModeled()", "1" 
"void android.app.ActivityManagerProxy.handleApplicationStrictModeViolation (IBinder, int, ViolationInfo)", "@DSModeled()", "1" 
"FileInputStream android.content.ContextWrapper.openFileInput (String)", "@DSModeled()", "1" 
"void android.location.Location.<init> (String)", "@DSModeled()", "1" 
"AsyncTask android.os.AsyncTask.execute (Object[])", "@DSModeled()", "1" 
"AsyncTask android.os.AsyncTask.executeOnExecutor (Executor, Object[])", "@DSModeled()", "1" 
"void android.os.AsyncTask.<init> ()", "@DSModeled()", "1" 
"void android.view.WindowImpl.setVolumeControlStream (int)", "@DSModeled()", "1" 
"void com.android.internal.view.menu.MenuBuilder.<init> (Context)", "@DSModeled()", "1" 
"void com.android.internal.view.menu.SubMenuBuilder.<init> (Context, MenuBuilder, MenuItemImpl)", "@DSModeled()", "1" 
"void java.lang.TwoEnumerationsInOne.<init> (Enumeration, Enumeration)", "@DSModeled()", "1" 
"void java.math.RoundingMode.<init> (String, int, int)", "@DSModeled()", "1" 
"String libcore.icu.NativeDecimalFormat.getNegativePrefix ()", "@DSModeled()", "1" 
"void com.google.android.maps.Overlay.<init> ()", "@DSModeled()", "1" 
"String com.google.android.maps.GeoPoint.toString ()", "@DSModeled()", "1" 
"int com.google.android.maps.GeoPoint.hashCode ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.<init> (Context, AttributeSet)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.<init> (Context, AttributeSet, int)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onSizeChanged (int, int, int, int)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onDetachedFromWindow ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.computeScroll ()", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView.isOpaque ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onDraw (Canvas)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onMeasure (int, int)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onWindowFocusChanged (boolean)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onFocusChanged (boolean, int, Rect)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView.onKeyDown (int, KeyEvent)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView.onKeyUp (int, KeyEvent)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView.onTrackballEvent (MotionEvent)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView.onTouchEvent (MotionEvent)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onVisibilityChanged (View, int)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView.onLayout (boolean, int, int, int, int)", "@DSModeled()", "1" 
"LayoutParams com.google.android.maps.MapView.generateLayoutParams (AttributeSet)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView.checkLayoutParams (LayoutParams)", "@DSModeled()", "1" 
"LayoutParams com.google.android.maps.MapView.generateLayoutParams (LayoutParams)", "@DSModeled()", "1" 
"LayoutParams com.google.android.maps.MapView.generateDefaultLayoutParams ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$LayoutParams.<init> (Context, AttributeSet)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$LayoutParams.<init> (LayoutParams)", "@DSModeled()", "1" 
"String com.google.android.maps.MapView$LayoutParams.debug (String)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapController.onKey (View, int, KeyEvent)", "@DSModeled()", "1" 
"void com.google.android.maps.GestureDetector$SimpleOnGestureListener.<init> ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapActivity.onCreate (Bundle)", "@DSModeled()", "1" 
"void com.google.android.maps.MapActivity.onNewIntent (Intent)", "@DSModeled()", "1" 
"void com.google.android.maps.MapActivity.onResume ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapActivity.onPause ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapActivity.onDestroy ()", "@DSModeled()", "1" 
"void com.google.android.maps.GestureDetector$GestureHandler.handleMessage (Message)", "@DSModeled()", "1" 
"void com.google.android.maps.MapActivity$1.handleMessage (Message)", "@DSModeled()", "1" 
"void com.google.android.maps.NetworkConnectivityListener.<init> ()", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView$2.onScaleBegin (ScaleGestureDetector)", "@DSModeled()", "1" 
"boolean com.google.android.maps.MapView$2.onScale (ScaleGestureDetector)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$2.onScaleEnd (ScaleGestureDetector)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$3.run ()", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$4.onClick (View)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$5.onClick (View)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$6.onVisibilityChanged (boolean)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$6.onZoom (boolean)", "@DSModeled()", "1" 
"void com.google.android.maps.MapView$Repainter$1.run ()", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay$1.handleMessage (Message)", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay.onSensorChanged (int, float[])", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay.onLocationChanged (Location)", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay.onStatusChanged (String, int, Bundle)", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay.onProviderEnabled (String)", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay.onProviderDisabled (String)", "@DSModeled()", "1" 
"void com.google.android.maps.MyLocationOverlay.onAccuracyChanged (int, int)", "@DSModeled()", "1" 
"void com.google.android.maps.NetworkConnectivityListener$ConnectivityBroadcastReceiver.onReceive (Context, Intent)", "@DSModeled()", "1" 
"void com.google.android.maps.TrackballGestureDetector$1.run ()", "@DSModeled()", "1" 
"int com.android.future.usb.UsbAccessory.hashCode ()", "@DSModeled()", "1" 
"String com.android.future.usb.UsbAccessory.toString ()", "@DSModeled()", "1" 


#Ultra coolmap specific

