A2dpService com.android.bluetooth.a2dp.A2dpService.getA2dpService()
ASN1Boolean com.android.org.bouncycastle.asn1.DERBoolean.getInstance(Object)
ASN1Boolean com.android.org.bouncycastle.asn1.DERBoolean.getInstance(boolean)
ASN1Encodable com.android.org.bouncycastle.asn1.ASN1EncodableVector.get(int)
ASN1Encodable com.android.org.bouncycastle.asn1.ASN1Sequence.getObjectAt(int)
ASN1Encodable com.android.org.bouncycastle.asn1.ASN1Set.getObjectAt(int)
ASN1Encodable com.android.org.bouncycastle.asn1.ASN1StreamParser.readObject()
ASN1Encodable com.android.org.bouncycastle.asn1.ASN1TaggedObject.getObjectParser(int,boolean)
ASN1Encodable com.android.org.bouncycastle.asn1.BERTaggedObjectParser.getObjectParser(int,boolean)
ASN1Encodable com.android.org.bouncycastle.asn1.LazyEncodedSequence.getObjectAt(int)
ASN1Encodable com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue.getValue()
ASN1Encodable com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier.getParameters()
ASN1EncodableVector com.android.org.bouncycastle.asn1.ASN1InputStream.buildEncodableVector()
ASN1Encodable[] com.android.org.bouncycastle.asn1.ASN1Sequence.toArray()
ASN1Encodable[] com.android.org.bouncycastle.asn1.ASN1Set.toArray()
ASN1Enumerated com.android.org.bouncycastle.asn1.DEREnumerated.getInstance(Object)
ASN1GeneralizedTime com.android.org.bouncycastle.asn1.DERGeneralizedTime.getInstance(ASN1TaggedObject,boolean)
ASN1GeneralizedTime com.android.org.bouncycastle.asn1.DERGeneralizedTime.getInstance(Object)
ASN1Integer com.android.org.bouncycastle.asn1.DERExternal.getIndirectReference()
ASN1Integer com.android.org.bouncycastle.asn1.DERInteger.getInstance(ASN1TaggedObject,boolean)
ASN1Integer com.android.org.bouncycastle.asn1.DERInteger.getInstance(Object)
ASN1Null com.android.org.bouncycastle.asn1.ASN1Null.getInstance(Object)
ASN1ObjectIdentifier com.android.org.bouncycastle.asn1.DERExternal.getDirectReference()
ASN1ObjectIdentifier com.android.org.bouncycastle.asn1.DERObjectIdentifier.getInstance(ASN1TaggedObject,boolean)
ASN1ObjectIdentifier com.android.org.bouncycastle.asn1.DERObjectIdentifier.getInstance(Object)
ASN1ObjectIdentifier com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue.getType()
ASN1ObjectIdentifier com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier.getAlgorithm()
ASN1ObjectIdentifier com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier.getObjectId()
ASN1ObjectIdentifier[] com.android.org.bouncycastle.asn1.x500.X500Name.getAttributeTypes()
ASN1OctetString com.android.org.bouncycastle.asn1.ASN1OctetString.getInstance(ASN1TaggedObject,boolean)
ASN1OctetString com.android.org.bouncycastle.asn1.ASN1OctetString.getInstance(Object)
ASN1OctetStringParser com.android.org.bouncycastle.asn1.ASN1OctetString.parser()
ASN1OutputStream com.android.org.bouncycastle.asn1.ASN1OutputStream.getDERSubStream()
ASN1OutputStream com.android.org.bouncycastle.asn1.ASN1OutputStream.getDLSubStream()
ASN1OutputStream com.android.org.bouncycastle.asn1.DEROutputStream.getDERSubStream()
ASN1OutputStream com.android.org.bouncycastle.asn1.DEROutputStream.getDLSubStream()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1InputStream.buildObject(int,int,int)
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Object.toASN1Object()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1OctetString.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1OctetString.toDERObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1OctetString.toDLObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Primitive.toASN1Primitive()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Primitive.toDERObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Primitive.toDLObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Sequence$1.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Sequence.toDERObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Sequence.toDLObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Set$1.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Set.toDERObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1Set.toDLObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1StreamParser.readTaggedObject(boolean,int)
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1TaggedObject.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1TaggedObject.getObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1TaggedObject.toDERObject()
ASN1Primitive com.android.org.bouncycastle.asn1.ASN1TaggedObject.toDLObject()
ASN1Primitive com.android.org.bouncycastle.asn1.BERApplicationSpecificParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.BEROctetStringParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.BERSequenceParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.BERSetParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.BERTaggedObjectParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.DERApplicationSpecific.getObject()
ASN1Primitive com.android.org.bouncycastle.asn1.DERApplicationSpecific.getObject(int)
ASN1Primitive com.android.org.bouncycastle.asn1.DERExternal.getDataValueDescriptor()
ASN1Primitive com.android.org.bouncycastle.asn1.DERExternal.getExternalContent()
ASN1Primitive com.android.org.bouncycastle.asn1.DERExternalParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.DEROctetStringParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.DERSequenceParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.DERSetParser.getLoadedObject()
ASN1Primitive com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getPublicKey()
ASN1Primitive com.android.org.bouncycastle.asn1.x509.X509DefaultEntryConverter.getConvertedValue(ASN1ObjectIdentifier,String)
ASN1Primitive com.android.org.bouncycastle.asn1.x509.X509NameEntryConverter.convertHexEncoded(String,int)
ASN1Sequence com.android.org.bouncycastle.asn1.ASN1Sequence.getInstance(ASN1TaggedObject,boolean)
ASN1Sequence com.android.org.bouncycastle.asn1.ASN1Sequence.getInstance(Object)
ASN1SequenceParser com.android.org.bouncycastle.asn1.ASN1Sequence.parser()
ASN1Set com.android.org.bouncycastle.asn1.ASN1Set.getInstance(ASN1TaggedObject,boolean)
ASN1Set com.android.org.bouncycastle.asn1.ASN1Set.getInstance(Object)
ASN1SetParser com.android.org.bouncycastle.asn1.ASN1Set.parser()
ASN1TaggedObject com.android.org.bouncycastle.asn1.ASN1TaggedObject.getInstance(ASN1TaggedObject,boolean)
ASN1TaggedObject com.android.org.bouncycastle.asn1.ASN1TaggedObject.getInstance(Object)
ASN1UTCTime com.android.org.bouncycastle.asn1.DERUTCTime.getInstance(ASN1TaggedObject,boolean)
ASN1UTCTime com.android.org.bouncycastle.asn1.DERUTCTime.getInstance(Object)
AbstractGalleryActivity com.android.gallery3d.ui.WakeLockHoldingProgressListener.getActivity()
AbstractMediaHeaderBox com.coremedia.iso.boxes.MediaInformationBox.getMediaHeaderBox()
AbstractMediaHeaderBox com.googlecode.mp4parser.authoring.Mp4TrackImpl.getMediaHeaderBox()
AbstractMultimap$WrappedCollection com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
AccessibilityEvent android.accessibilityservice.UiTestAutomationBridge.getLastAccessibilityEvent()
AccessibilityEvent com.android.inputmethod.accessibility.AccessibilityEntityProvider.createAccessibilityEvent(Key,int)
AccessibilityInteractionClient android.view.accessibility.AccessibilityInteractionClient.getInstanceForThread(long)
AccessibilityIterators$CharacterTextSegmentIterator android.view.AccessibilityIterators$CharacterTextSegmentIterator.getInstance(Locale)
AccessibilityIterators$LineTextSegmentIterator android.widget.AccessibilityIterators$LineTextSegmentIterator.getInstance()
AccessibilityIterators$PageTextSegmentIterator android.widget.AccessibilityIterators$PageTextSegmentIterator.getInstance()
AccessibilityIterators$ParagraphTextSegmentIterator android.view.AccessibilityIterators$ParagraphTextSegmentIterator.getInstance()
AccessibilityIterators$TextSegmentIterator android.view.View.getIteratorForGranularity(int)
AccessibilityIterators$TextSegmentIterator android.widget.TextView.getIteratorForGranularity(int)
AccessibilityIterators$WordTextSegmentIterator android.view.AccessibilityIterators$WordTextSegmentIterator.getInstance(Locale)
AccessibilityNodeInfo android.accessibilityservice.AccessibilityService.getRootInActiveWindow()
AccessibilityNodeInfo android.accessibilityservice.UiTestAutomationBridge.getRootAccessibilityNodeInfoInActiveWindow()
AccessibilityNodeInfo android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1.createAccessibilityNodeInfo(int)
AccessibilityNodeInfo android.view.ViewRootImpl.getAccessibilityFocusedVirtualView()
AccessibilityNodeInfo android.view.accessibility.AccessibilityInteractionClient.getRootInActiveWindow(int)
AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeInfo.getLabelFor()
AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeInfo.getLabeledBy()
AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeInfoCache.get(long)
AccessibilityNodeInfo android.widget.NumberPicker$AccessibilityNodeProviderImpl.createAccessibilityNodeInfo(int)
AccessibilityNodeInfo com.android.uiautomator.core.QueryController.getAccessibilityRootNode()
AccessibilityNodeInfo com.android.uiautomator.core.QueryController.getRootNode()
AccessibilityNodeProvider android.support.v4.view.AccessibilityDelegateCompatJellyBean$1.getAccessibilityNodeProvider(View)
AccessibilityNodeProvider android.view.View$AccessibilityDelegate.getAccessibilityNodeProvider(View)
AccessibilityNodeProvider android.view.View.getAccessibilityNodeProvider()
AccessibilityNodeProvider android.widget.NumberPicker.getAccessibilityNodeProvider()
AccessibilityNodeProviderCompat android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl.getAccessibilityNodeProvider(Object,View)
AccessibilityNodeProviderCompat android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl.getAccessibilityNodeProvider(Object,View)
AccessibilityNodeProviderCompat android.support.v4.view.AccessibilityDelegateCompat.getAccessibilityNodeProvider(View)
AccessibilityNodeProviderCompat com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy.getAccessibilityNodeProvider(View)
AccessibilityServiceInfo android.accessibilityservice.AccessibilityService.getServiceInfo()
AccessibilityServiceInfo android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.getServiceInfo()
AccessibilityServiceInfo com.android.server.accessibility.AccessibilityManagerService$Service.getServiceInfo()
AccessibilityUtils com.android.inputmethod.accessibility.AccessibilityUtils.getInstance()
AccessibleKeyboardViewProxy com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy.getInstance()
Account com.android.email.activity.MessageListFragment.getAccount()
Account com.android.email.activity.setup.SetupData.getAccount()
Account com.android.emailcommon.provider.Account.restoreAccountWithId(Context,long)
Account com.android.emailcommon.utility.Utility.findExistingAccount(Context,long,String,String)
Account com.android.exchange.ExchangeService$AccountList.getById(long)
Account com.android.exchange.ExchangeService.getAccountById(long)
Account com.android.providers.contacts.ContactsProvider2.getDefaultAccount()
AccountAndUser[] android.accounts.AccountManagerService.getAllAccounts()
AccountAndUser[] android.accounts.AccountManagerService.getRunningAccounts()
AccountAndUser[] android.content.SyncManager.access$2800()
AccountAuthenticatorResponse com.android.email.activity.setup.SetupData.getAccountAuthenticatorResponse()
AccountCheckSettingsFragment$ErrorDialog com.android.email.activity.setup.AccountCheckSettingsFragment$ErrorDialog.newInstance(Context,AccountCheckSettingsFragment,MessagingException)
AccountCheckSettingsFragment$SecurityRequiredDialog com.android.email.activity.setup.AccountCheckSettingsFragment$SecurityRequiredDialog.newInstance(AccountCheckSettingsFragment,String)
AccountManager$Future2Task android.accounts.AccountManager$Future2Task.start()
AccountManagerFuture android.accounts.AccountManager.addAccount(String,String,String[],Bundle,Activity,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.confirmCredentials(Account,Bundle,Activity,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.confirmCredentialsAsUser(Account,Bundle,Activity,AccountManagerCallback,Handler,UserHandle)
AccountManagerFuture android.accounts.AccountManager.editProperties(String,Activity,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.getAccountsByTypeAndFeatures(String,String[],AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.getAuthToken(Account,String,Bundle,Activity,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.getAuthToken(Account,String,Bundle,boolean,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.getAuthToken(Account,String,boolean,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.getAuthTokenByFeatures(String,String,String[],Activity,Bundle,Bundle,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.getAuthTokenLabel(String,String,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.hasFeatures(Account,String[],AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.removeAccount(Account,AccountManagerCallback,Handler)
AccountManagerFuture android.accounts.AccountManager.updateCredentials(Account,String,Bundle,Activity,AccountManagerCallback,Handler)
AccountManagerFuture android.test.IsolatedContext$MockAccountManager.getAccountsByTypeAndFeatures(String,String[],AccountManagerCallback,Handler)
AccountManagerFuture android.test.IsolatedContext$MockAccountManager.getAuthToken(Account,String,Bundle,Activity,AccountManagerCallback,Handler)
AccountManagerFuture android.test.IsolatedContext$MockAccountManager.getAuthToken(Account,String,boolean,AccountManagerCallback,Handler)
AccountManagerService android.accounts.AccountManagerService.getSingleton()
AccountManagerService$UserAccounts android.accounts.AccountManagerService.getUserAccounts(int)
AccountSecurity$PasswordExpirationDialog com.android.email.activity.setup.AccountSecurity$PasswordExpirationDialog.newInstance(String,boolean)
AccountSecurity$SecurityNeededDialog com.android.email.activity.setup.AccountSecurity$SecurityNeededDialog.newInstance(String)
AccountSettings$LoginWarningDialog com.android.email.activity.setup.AccountSettings$LoginWarningDialog.newInstance(String)
AccountSettings$UnsavedChangesDialogFragment com.android.email.activity.setup.AccountSettings$UnsavedChangesDialogFragment.newInstanceForHeader(int)
AccountSettingsFragment$DeleteAccountFragment com.android.email.activity.setup.AccountSettingsFragment$DeleteAccountFragment.newInstance(Account,Fragment)
AccountSettingsUtils$Provider com.android.email.VendorPolicyLoader.findProviderForDomain(String)
AccountSetupBasics$NoteDialogFragment com.android.email.activity.setup.AccountSetupBasics$NoteDialogFragment.newInstance(String)
AccountType com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter.getItem(int)
AccountType com.android.contacts.model.AccountTypeManager.getAccountType(String,String)
AccountType com.android.contacts.model.AccountTypeManager.getAccountTypeForAccount(AccountWithDataSet)
AccountType com.android.contacts.model.AccountTypeManagerImpl.getAccountType(AccountTypeWithDataSet)
AccountType com.android.contacts.model.RawContact.getAccountType()
AccountType com.android.contacts.model.RawContactDelta.getAccountType(AccountTypeManager)
AccountType com.android.contacts.model.RawContactDelta.getRawContactAccountType(Context)
AccountType com.android.contacts.model.dataitem.DataItem.getAccountType()
AccountType$EditType com.android.contacts.editor.EventFieldEditorView.getType()
AccountType$EditType com.android.contacts.editor.LabeledEditorView.getType()
AccountType$EditType com.android.contacts.model.RawContactModifier.getBestValidType(RawContactDelta,DataKind,boolean,int)
AccountType$EditType com.android.contacts.model.RawContactModifier.getCurrentType(RawContactDelta$ValuesDelta,DataKind)
AccountType$EditType com.android.contacts.model.RawContactModifier.getType(DataKind,int)
AccountTypeManager com.android.contacts.model.AccountTypeManager.createAccountTypeManager(Context)
AccountTypeManager com.android.contacts.model.AccountTypeManager.getInstance(Context)
AccountTypeManager com.android.contacts.model.RawContact.getAccountTypeManager()
AccountTypeManager com.android.contacts.model.dataitem.DataItem.getAccountTypeManager()
AccountTypeWithDataSet com.android.contacts.model.account.AccountType.getAccountTypeAndDataSet()
AccountTypeWithDataSet com.android.contacts.model.account.AccountTypeWithDataSet.get(String,String)
AccountTypeWithDataSet com.android.contacts.model.account.AccountWithDataSet.getAccountTypeWithDataSet()
AccountWithDataSet com.android.contacts.editor.ContactEditorUtils.getCreatedAccount(int,Intent)
AccountWithDataSet com.android.contacts.editor.ContactEditorUtils.getDefaultAccount()
AccountWithDataSet com.android.contacts.util.AccountsListAdapter.getItem(int)
AccountWithDataSet com.android.providers.contacts.AccountWithDataSet.get(String,String,String)
Account[] android.accounts.AccountManager.getAccountsByTypeAsUser(String,UserHandle)
Account[] android.accounts.AccountManagerService.getAccounts(String)
Account[] android.accounts.AccountManagerService.getAccounts(int)
Account[] android.accounts.AccountManagerService.getAccountsAsUser(String,int)
Account[] android.accounts.AccountManagerService.getAccountsFromCacheLocked(AccountManagerService$UserAccounts,String)
Account[] android.accounts.IAccountManager$Stub$Proxy.getAccountsAsUser(String,int)
ActionBar$Tab com.android.internal.app.ActionBarImpl$TabImpl.setContentDescription(int)
ActionBar$Tab com.android.internal.app.ActionBarImpl$TabImpl.setCustomView(int)
ActionBar$Tab com.android.internal.app.ActionBarImpl$TabImpl.setIcon(int)
ActionBar$Tab com.android.internal.app.ActionBarImpl$TabImpl.setText(int)
ActionBar$Tab com.android.internal.app.ActionBarImpl.getSelectedTab()
ActionBar$Tab com.android.internal.app.ActionBarImpl.getTabAt(int)
ActionBar$Tab com.android.internal.widget.ScrollingTabContainerView$TabView.getTab()
ActionBar$TabListener com.android.internal.app.ActionBarImpl$TabImpl.getCallback()
ActionBarPolicy com.android.internal.view.ActionBarPolicy.get(Context)
ActionMode android.app.Activity.startActionMode(ActionMode$Callback)
ActionMode android.view.ViewGroup.startActionModeForChild(View,ActionMode$Callback)
ActionMode$Callback android.widget.TextView.getCustomSelectionActionModeCallback()
Activity android.test.InstrumentationTestCase.launchActivity(String,Class,Bundle)
Activity android.test.InstrumentationTestCase.launchActivityWithIntent(String,Class,Intent)
Activity com.android.browser.BaseUi.getActivity()
Activity com.android.browser.Controller.getActivity()
Activity com.android.browser.PreloadController.getActivity()
Activity com.android.contacts.voicemail.VoicemailPlaybackFragment$ActivityReference.get()
Activity com.android.phone.PhoneGlobals.getPUKEntryActivity()
ActivityInfo android.content.pm.IPackageManager$Stub$Proxy.getActivityInfo(ComponentName,int,int)
ActivityInfo android.content.pm.IPackageManager$Stub$Proxy.getReceiverInfo(ComponentName,int,int)
ActivityInfo com.android.server.am.ActivityManagerService.getActivityInfoForUser(ActivityInfo,int)
ActivityInfo com.android.server.am.ActivityStack.resolveActivity(Intent,String,int,String,ParcelFileDescriptor,int)
ActivityInfo com.android.server.pm.PackageManagerService.getActivityInfo(ComponentName,int,int)
ActivityInfo com.android.server.pm.PackageManagerService.getReceiverInfo(ComponentName,int,int)
ActivityManager$TaskThumbnails android.app.ActivityManager.getTaskThumbnails(int)
ActivityManager$TaskThumbnails android.app.ActivityManagerProxy.getTaskThumbnails(int)
ActivityManager$TaskThumbnails com.android.server.am.ActivityManagerService.getTaskThumbnails(int)
ActivityManager$TaskThumbnails com.android.server.am.ActivityStack.getTaskThumbnailsLocked(TaskRecord)
ActivityRecord com.android.server.am.ActivityStack.removeTaskActivitiesLocked(int,int,boolean)
ActivityState com.android.gallery3d.app.StateManager.getTopState()
ActivityThread$ApplicationThread android.app.ActivityThread.getApplicationThread()
Adapter android.widget.AbsSpinner.getAdapter()
Adapter android.widget.ExpandableListView.getAdapter()
Adapter android.widget.GridView.getAdapter()
Adapter android.widget.ListView.getAdapter()
AdapterService com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getService()
AdapterService com.android.bluetooth.btservice.AdapterService.getAdapterService()
AdapterView$OnItemClickListener android.widget.AdapterView.getOnItemClickListener()
AdapterView$OnItemClickListener android.widget.AutoCompleteTextView.getItemClickListener()
AdapterView$OnItemClickListener android.widget.AutoCompleteTextView.getOnItemClickListener()
AdapterView$OnItemLongClickListener android.widget.AdapterView.getOnItemLongClickListener()
AdapterView$OnItemSelectedListener android.widget.AdapterView.getOnItemSelectedListener()
AdapterView$OnItemSelectedListener android.widget.AutoCompleteTextView.getItemSelectedListener()
AdapterView$OnItemSelectedListener android.widget.AutoCompleteTextView.getOnItemSelectedListener()
Address com.android.gallery3d.util.ReverseGeocoder.lookupAddress(double,double,boolean)
Address org.apache.james.mime4j.field.address.AddressList.get(int)
AgendaAdapter$ViewHolder com.android.calendar.agenda.AgendaListView.getSelectedViewHolder()
AgendaAdapter$ViewHolder com.android.calendar.agenda.AgendaWindowAdapter.getSelectedViewHolder()
AgendaWindowAdapter$DayAdapterInfo com.android.calendar.agenda.AgendaWindowAdapter.getAdapterInfoByPosition(int)
AgendaWindowAdapter$EventInfo com.android.calendar.agenda.AgendaListView.getFirstVisibleEvent()
AgendaWindowAdapter$EventInfo com.android.calendar.agenda.AgendaWindowAdapter.getEventByPosition(int)
AgendaWindowAdapter$EventInfo com.android.calendar.agenda.AgendaWindowAdapter.getEventByPosition(int,boolean)
Alarm com.android.deskclock.Alarms.getAlarm(ContentResolver,int)
Alarm$DaysOfWeek com.android.deskclock.RepeatPreference.getDaysOfWeek()
AlarmTimePickerDialogFragment com.android.deskclock.AlarmTimePickerDialogFragment.newInstance(Alarm)
AlbumEntry com.google.android.picasasync.PicasaDatabaseHelper.getAlbumEntry(String,String)
AlbumSetSlidingWindow$AlbumSetEntry com.android.gallery3d.ui.AlbumSetSlidingWindow.get(int)
AlbumSlidingWindow$AlbumEntry com.android.gallery3d.ui.AlbumSlidingWindow.get(int)
AlertDialog com.android.videoeditor.AlertDialogs.createAlert(Context,String,int,String,String,DialogInterface$OnClickListener,String,DialogInterface$OnClickListener,DialogInterface$OnCancelListener,boolean)
AlertDialog com.android.videoeditor.AlertDialogs.createEditDialog(Context,String,String,String,DialogInterface$OnClickListener,String,DialogInterface$OnClickListener,DialogInterface$OnCancelListener,int,int,String)
AlertDialog$Builder android.app.AlertDialog$Builder.setIconAttribute(int)
AlertDialog$Builder android.app.AlertDialog$Builder.setItems(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setMessage(int)
AlertDialog$Builder android.app.AlertDialog$Builder.setMultiChoiceItems(int,boolean[],DialogInterface$OnMultiChoiceClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setNegativeButton(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setNeutralButton(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setPositiveButton(int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setSingleChoiceItems(int,int,DialogInterface$OnClickListener)
AlertDialog$Builder android.app.AlertDialog$Builder.setTitle(int)
AlertService$NotificationWrapper com.android.calendar.alerts.AlertReceiver.makeDigestNotification(Context,ArrayList,String,boolean)
AlgorithmIdentifier com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier.getInstance(ASN1TaggedObject,boolean)
AlgorithmIdentifier com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier.getInstance(Object)
AlgorithmIdentifier com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getAlgorithm()
AlgorithmIdentifier com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getAlgorithmId()
AlgorithmIdentifier com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest.getKeyAlgorithm()
AlgorithmIdentifier com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest.getSigningAlgorithm()
AlgorithmParameterSpec android.content.pm.ContainerEncryptionParams.getEncryptionSpec()
AlgorithmParameterSpec android.content.pm.ContainerEncryptionParams.getMacSpec()
AlgorithmParameterSpec java.security.AlgorithmParameters.getParameterSpec(Class)
AliasOptions com.adobe.xmp.impl.XMPSchemaRegistryImpl$1.getAliasForm()
AliasOptions com.adobe.xmp.options.AliasOptions.setArrayAltText(boolean)
AliasOptions com.adobe.xmp.options.AliasOptions.setArrayOrdered(boolean)
Allocation android.renderscript.Allocation.createCubemapFromBitmap(RenderScript,Bitmap,Allocation$MipmapControl,int)
Allocation android.renderscript.Allocation.createCubemapFromCubeFaces(RenderScript,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Bitmap,Allocation$MipmapControl,int)
Allocation android.renderscript.Allocation.createFromBitmapResource(RenderScript,Resources,int,Allocation$MipmapControl,int)
Allocation android.renderscript.ProgramVertexFixedFunction$Constants.getAllocation()
Allocation android.renderscript.Script$FieldBase.getAllocation()
AnalyticsHelper com.google.android.apps.lightcycle.util.AnalyticsHelper.getInstance(Context)
AndroidSpellCheckerService$SuggestionsGatherer$Result com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$SuggestionsGatherer.getResults(int,Locale)
AndroidWordLevelSpellCheckerSession$SuggestionsParams com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession$SuggestionsCache.getSuggestionsFromCache(String,String)
Animation com.android.internal.policy.impl.PhoneWindowManager.createForceHideEnterAnimation(boolean)
Animation$AnimationListener android.view.ViewGroup.getLayoutAnimationListener()
Animator android.animation.AnimatorSet.setDuration(long)
Animator android.animation.ObjectAnimator.setDuration(long)
Animator android.animation.ValueAnimator.setDuration(long)
Animator com.android.internal.widget.SizeAdaptiveLayout.getTransitionAnimation()
Animator com.android.launcher2.Workspace.getChangeStateAnimation(Workspace$State,boolean)
Animator com.android.launcher2.Workspace.getChangeStateAnimation(Workspace$State,boolean,int)
Animator com.android.systemui.statusbar.phone.PhoneStatusBar.interpolator(TimeInterpolator,Animator)
Animator com.android.systemui.statusbar.phone.PhoneStatusBar.setVisibilityWhenDone(Animator,View,int)
Animator com.android.systemui.statusbar.phone.PhoneStatusBar.startDelay(int,Animator)
AnimatorSet$Builder android.animation.AnimatorSet$Builder.after(Animator)
AnimatorSet$Builder android.animation.AnimatorSet$Builder.after(long)
AnimatorSet$Builder android.animation.AnimatorSet$Builder.before(Animator)
AnimatorSet$Builder android.animation.AnimatorSet$Builder.with(Animator)
Annotation java.lang.Class.getAnnotation(Class)
Annotation java.lang.Package.getAnnotation(Class)
Annotation java.lang.reflect.AccessibleObject.getAnnotation(Class)
Annotation java.lang.reflect.Constructor.getAnnotation(Class)
Annotation java.lang.reflect.Field.getAnnotation(Class)
Annotation java.lang.reflect.Method.getAnnotation(Class)
AppBindRecord com.android.server.am.ServiceRecord.retrieveAppBindingLocked(Intent,ProcessRecord)
AppInterface$CommandType com.android.internal.telephony.cat.CatCmdMessage.getCmdType()
AppInterface$CommandType com.android.internal.telephony.cat.CommandParams.getCommandType()
AppWidgetHostView android.appwidget.AppWidgetHost.createView(Context,int,AppWidgetProviderInfo)
AppWidgetHostView android.appwidget.AppWidgetHost.onCreateView(Context,int,AppWidgetProviderInfo)
AppWidgetHostView com.android.launcher2.LauncherAppWidgetHost.onCreateView(Context,int,AppWidgetProviderInfo)
AppWidgetHostView$ParcelableSparseArray android.appwidget.AppWidgetHostView$ParcelableSparseArray$1.createFromParcel(Parcel)
AppWidgetProviderInfo com.android.server.AppWidgetService.getAppWidgetInfo(int)
AppWidgetProviderInfo com.android.server.AppWidgetServiceImpl.getAppWidgetInfo(int)
ApplicationInfo android.content.pm.IPackageManager$Stub$Proxy.getApplicationInfo(String,int,int)
ApplicationInfo com.android.inputmethod.latin.TargetApplicationGetter.doInBackground(String[])
ApplicationInfo com.android.inputmethod.latin.TargetApplicationGetter.getCachedApplicationInfo(String)
ApplicationInfo com.android.server.am.ActivityManagerService.getAppInfoForUser(ApplicationInfo,int)
ApplicationInfo com.android.server.pm.PackageManagerService.getApplicationInfo(String,int,int)
AppsCustomizePagedView$ContentType com.android.launcher2.AppsCustomizeTabHost.getContentTypeForTabTag(String)
ArrayAdapter com.android.gallery3d.filtershow.imageshow.ImageShow.getImageStateAdapter()
ArrayList android.gesture.Gesture.getStrokes()
ArrayList android.gesture.GestureLibrary.getGestures(String)
ArrayList android.gesture.GestureLibrary.recognize(Gesture)
ArrayList android.gesture.GestureStore.getGestures(String)
ArrayList android.gesture.GestureStore.recognize(Gesture)
ArrayList android.gesture.Learner.getInstances()
ArrayList android.os.Parcel.createTypedArrayList(Parcelable$Creator)
ArrayList android.preference.PreferenceActivity.access$100(PreferenceActivity)
ArrayList android.server.search.Searchables.getGlobalSearchActivities()
ArrayList android.server.search.Searchables.getSearchablesInGlobalSearchList()
ArrayList android.server.search.Searchables.getSearchablesList()
ArrayList android.service.wallpaper.WallpaperService.access$300(WallpaperService)
ArrayList android.telephony.gsm.SmsManager.divideMessage(String)
ArrayList android.telephony.gsm.SmsManager.getAllMessagesFromSim()
ArrayList android.util.TimeUtils.getTimeZones(String)
ArrayList android.util.TimeUtils.getTimeZonesWithUniqueOffsets(String)
ArrayList android.view.ViewGroup.access$400(ViewGroup)
ArrayList android.webkit.ViewManager.access$300(ViewManager)
ArrayList android.webkit.WebViewDatabaseClassic.getFormData(String,String)
ArrayList com.android.bluetooth.pbap.BluetoothPbapVcardManager.getContactNamesByNumber(String)
ArrayList com.android.bluetooth.pbap.BluetoothPbapVcardManager.getPhonebookNameList(int)
ArrayList com.android.bluetooth.pbap.BluetoothPbapVcardManager.loadCallHistoryList(int)
ArrayList com.android.contacts.list.CustomContactListFilterActivity$AccountSet.buildDiff()
ArrayList com.android.contacts.model.Contact.getContentValues()
ArrayList com.android.contacts.model.RawContactDelta.getContentValues()
ArrayList com.android.contacts.model.RawContactDelta.getMimeEntries(String)
ArrayList com.android.contacts.model.RawContactDeltaList.buildDiff()
ArrayList com.android.contacts.model.RawContactModifier.getValidTypes(RawContactDelta,DataKind)
ArrayList com.android.contacts.model.RawContactModifier.getValidTypes(RawContactDelta,DataKind,AccountType$EditType)
ArrayList com.android.contacts.model.account.AccountType.getSortedDataKinds()
ArrayList com.android.email.activity.RecentMailboxManager.getMostRecent(long,boolean)
ArrayList com.android.email.service.MailService.getPopImapAccountList(Context)
ArrayList com.android.exchange.adapter.PingParser.getSyncList()
ArrayList com.android.gallery3d.app.StitchingProgressManager.access$100(StitchingProgressManager)
ArrayList com.android.gallery3d.data.Cluster.getItems()
ArrayList com.android.gallery3d.data.ClusterAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.ClusterAlbum.getMediaItemFromPath(ArrayList,int,int,DataManager)
ArrayList com.android.gallery3d.data.ClusterAlbum.getMediaItems()
ArrayList com.android.gallery3d.data.ComboAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.FaceClustering.getCluster(int)
ArrayList com.android.gallery3d.data.FilterDeleteSet.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.FilterEmptyPromptSet.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.FilterTypeSet.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.LocalAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.LocalMergeAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.LocationClustering.getCluster(int)
ArrayList com.android.gallery3d.data.MediaSet.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.MtpDevice.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.SecureAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.SingleItemAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.data.SizeClustering.getCluster(int)
ArrayList com.android.gallery3d.data.TagClustering.getCluster(int)
ArrayList com.android.gallery3d.data.TimeClustering.getCluster(int)
ArrayList com.android.gallery3d.picasasource.BasePicasaAlbum.getMediaItem(int,int)
ArrayList com.android.gallery3d.ui.SelectionManager.getSelected(boolean)
ArrayList com.android.inputmethod.latin.BinaryDictionary.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.BinaryDictionary.getSuggestionsWithSessionId(WordComposer,CharSequence,ProximityInfo,int)
ArrayList com.android.inputmethod.latin.BinaryDictionaryGetter.getDictionaryFiles(Locale,Context)
ArrayList com.android.inputmethod.latin.Dictionary.getSuggestionsWithSessionId(WordComposer,CharSequence,ProximityInfo,int)
ArrayList com.android.inputmethod.latin.DictionaryCollection.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.ExpandableBinaryDictionary.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.ExpandableDictionary.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.ExpandableDictionary.getWordsInner(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.SuggestedWords.getFromApplicationSpecifiedCompletions(CompletionInfo[])
ArrayList com.android.inputmethod.latin.SuggestedWords.getTypedWordAndPreviousSuggestions(CharSequence,SuggestedWords)
ArrayList com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.UserHistoryDictionary.getWordsInner(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.inputmethod.latin.spellcheck.DictionaryPool$1.getSuggestions(WordComposer,CharSequence,ProximityInfo)
ArrayList com.android.internal.telephony.cdma.RuimSmsInterfaceManager.access$300(RuimSmsInterfaceManager,ArrayList)
ArrayList com.android.internal.telephony.cdma.SmsMessage.getSmsCbProgramData()
ArrayList com.android.internal.telephony.gsm.SimSmsInterfaceManager.access$300(SimSmsInterfaceManager,ArrayList)
ArrayList com.android.launcher2.Folder.getItemsInReadingOrder()
ArrayList com.android.launcher2.Folder.getItemsInReadingOrder(boolean)
ArrayList com.android.launcher2.LauncherModel.getItemsInLocalCoordinates(Context)
ArrayList com.android.launcher2.LauncherModel.getWorkspaceShortcutItemInfosWithIntent(Intent)
ArrayList com.android.launcher2.LauncherViewPropertyAnimator.getListeners()
ArrayList com.android.launcher2.Workspace.getAllShortcutAndWidgetContainers()
ArrayList com.android.launcher2.Workspace.getWorkspaceAndHotseatCellLayouts()
ArrayList com.android.mms.model.LayoutModel.getRegions()
ArrayList com.android.nfc.RegisteredComponentCache.getComponents()
ArrayList com.android.providers.contacts.HanziToPinyin.get(String)
ArrayList com.android.server.NativeDaemonConnector.doCommand(String)
ArrayList com.android.server.ServiceWatcher.getSignatureSets(Context,List)
ArrayList com.android.server.am.ActivityManagerService.collectProcesses(PrintWriter,int,String[])
ArrayList com.android.server.am.ActivityStack.processStoppingActivitiesLocked(boolean)
ArrayList com.android.server.pm.Settings.getListOfIncompleteInstallPackagesLPr()
ArrayList com.android.systemui.recent.RecentTasksLoader.getLoadedTasks()
ArrayList com.android.systemui.statusbar.phone.Ticker.access$200(Ticker)
ArrayList com.android.vcard.VCardEntry.constructInsertOperations(ContentResolver,ArrayList)
ArrayList com.android.vcard.VCardEntryCommitter.getCreatedUris()
ArrayList com.android.videoeditor.service.VideoEditorProject.getUniqueAspectRatiosList()
ArrayList com.google.android.gms.common.internal.GmsClient.access$100(GmsClient)
ArrayList com.google.android.gms.common.internal.GmsClient.access$200(GmsClient)
ArrayList com.google.android.mms.ContentType.getAudioTypes()
ArrayList com.google.android.mms.ContentType.getImageTypes()
ArrayList com.google.android.mms.ContentType.getSupportedTypes()
ArrayList com.google.android.mms.ContentType.getVideoTypes()
ArrayList com.google.android.picasasync.PicasaSyncHelper.getUsers()
ArrayList org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser.getParamNames()
ArrayList org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser.getParamValues()
AsyncDialog com.android.mms.ui.ComposeMessageActivity.getAsyncDialog()
AsyncQueryService com.android.calendar.AbstractCalendarActivity.getAsyncQueryService()
AsyncTask com.android.phone.CallLogAsync.getLastOutgoingCall(CallLogAsync$GetLastOutgoingCallArgs)
AsyncTask$Status android.os.AsyncTask.getStatus()
AsyncTaskExecutor com.android.contacts.util.AsyncTaskExecutors.createAsyncTaskExecutor()
AsyncTaskExecutor com.android.contacts.util.AsyncTaskExecutors.createThreadPoolExecutor()
AttachmentInfoDialog com.android.email.activity.AttachmentInfoDialog.newInstance(Context,int)
Attr com.android.mms.dom.ElementImpl.getAttributeNode(String)
Attr com.android.mms.dom.ElementImpl.getAttributeNodeNS(String,String)
AttributeCache$Entry com.android.server.AttributeCache.get(int,String,int,int[])
AttributeTypeAndValue com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue.getInstance(Object)
AttributeTypeAndValue com.android.org.bouncycastle.asn1.x500.RDN.getFirst()
AttributeTypeAndValue[] com.android.org.bouncycastle.asn1.x500.RDN.getTypesAndValues()
AttributedCharacterIterator java.text.AttributedString.getIterator(AttributedCharacterIterator$Attribute[])
AttributedCharacterIterator java.text.AttributedString.getIterator(AttributedCharacterIterator$Attribute[],int,int)
AudioEffect$Descriptor android.media.audiofx.AudioEffect.getDescriptor()
AudioManager com.android.internal.policy.impl.PhoneFallbackEventHandler.getAudioManager()
AudioModel com.android.mms.model.SlideModel.getAudio()
AudioRoutesInfo android.media.IAudioService$Stub$Proxy.startWatchingRoutes(IAudioRoutesObserver)
AudioTrack android.media.videoeditor.VideoEditorImpl.getAudioTrack(String)
AudioTrackLinearLayout com.android.videoeditor.VideoEditorActivity.getAudioTrackLayout()
AuthScheme org.apache.http.auth.AuthSchemeRegistry.getAuthScheme(String,HttpParams)
Authenticator$RequestorType java.net.Authenticator.getRequestorType()
AuthenticatorDescription android.accounts.AccountAuthenticatorCache.parseServiceAttributes(Resources,String,AttributeSet)
AuthenticatorDescription[] android.accounts.AccountManagerService.getAuthenticatorTypes()
AutoCompleteTextView$Validator android.widget.AutoCompleteTextView.getValidator()
AutoFillProfileDatabase com.android.browser.AutoFillProfileDatabase.getInstance(Context)
BackupManagerService$RestorePolicy com.android.server.BackupManagerService$PerformFullRestoreTask.readAppManifest(BackupManagerService$FileMetadata,InputStream)
BaseRawContactEditorView com.android.contacts.editor.ContactEditorFragment.getRawContactEditorView(long)
BaseStatusBar$H com.android.systemui.statusbar.BaseStatusBar.createHandler()
BaseUi com.android.browser.TitleBar.getUi()
BasicHttpEntity org.apache.http.impl.entity.EntityDeserializer.doDeserialize(SessionInputBuffer,HttpMessage)
BassBoost$Settings android.media.audiofx.BassBoost.getProperties()
BatteryStats$Timer com.android.internal.os.BatteryStatsImpl$Uid$Sensor.getSensorTime()
BatteryStats$Timer com.android.internal.os.BatteryStatsImpl$Uid$Wakelock.getWakeTime(int)
BatteryStats$Uid$Pid com.android.internal.os.BatteryStatsImpl$Uid.getPidStatsLocked(int)
BatteryStats$Uid$Proc$ExcessivePower com.android.internal.os.BatteryStatsImpl$Uid$Proc.getExcessivePower(int)
BatteryStatsImpl com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv.getBatteryStats()
BatteryStatsImpl com.android.internal.os.BatteryStatsImpl$Uid$Pkg.getBatteryStats()
BatteryStatsImpl com.android.internal.os.BatteryStatsImpl$Uid$Proc.getBatteryStats()
BatteryStatsImpl com.android.internal.os.BatteryStatsImpl$Uid.getBatteryStats()
BatteryStatsImpl com.android.server.am.BatteryStatsService.getActiveStatistics()
BatteryStatsImpl$SamplingTimer com.android.internal.os.BatteryStatsImpl.getKernelWakelockTimerLocked(String)
BatteryStatsImpl$StopwatchTimer com.android.internal.os.BatteryStatsImpl$Uid.getSensorTimerLocked(int,boolean)
BatteryStatsImpl$StopwatchTimer com.android.internal.os.BatteryStatsImpl$Uid.getWakeTimerLocked(String,int)
BatteryStatsImpl$Uid com.android.internal.os.BatteryStatsImpl.getUidStatsLocked(int)
BatteryStatsImpl$Uid$Pkg com.android.internal.os.BatteryStatsImpl$Uid.getPackageStatsLocked(String)
BatteryStatsImpl$Uid$Pkg com.android.internal.os.BatteryStatsImpl.getPackageStatsLocked(int,String)
BatteryStatsImpl$Uid$Pkg$Serv com.android.internal.os.BatteryStatsImpl$Uid.getServiceStatsLocked(String,String)
BatteryStatsImpl$Uid$Pkg$Serv com.android.internal.os.BatteryStatsImpl.getServiceStatsLocked(int,String,String)
BatteryStatsImpl$Uid$Proc com.android.internal.os.BatteryStatsImpl$Uid.getProcessStatsLocked(String)
BatteryStatsImpl$Uid$Proc com.android.internal.os.BatteryStatsImpl.getProcessStatsLocked(String,int)
BatteryStatsImpl$Uid$Proc com.android.internal.os.BatteryStatsImpl.getProcessStatsLocked(int,String)
BigInteger com.android.org.bouncycastle.asn1.DEREnumerated.getValue()
BigInteger com.android.org.bouncycastle.asn1.DERInteger.getPositiveValue()
BigInteger com.android.org.bouncycastle.asn1.DERInteger.getValue()
BigInteger java.security.spec.ECFieldF2m.getReductionPolynomial()
BigInteger java.security.spec.ECFieldFp.getP()
BigInteger java.security.spec.ECParameterSpec.getOrder()
BigInteger java.security.spec.ECPoint.getAffineX()
BigInteger java.security.spec.ECPoint.getAffineY()
BigInteger java.security.spec.EllipticCurve.getA()
BigInteger java.security.spec.EllipticCurve.getB()
BigInteger org.apache.harmony.security.x509.AuthorityKeyIdentifier.getAuthorityCertSerialNumber()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams.getG()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams.getP()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams.getQ()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams.getX()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams.getY()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getX()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getCrtCoefficient()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getPrimeExponentP()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getPrimeExponentQ()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getPrimeP()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getPrimeQ()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getPublicExponent()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getModulus()
BigInteger org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getPrivateExponent()
BinaryHprof$Tag dalvik.system.profiler.BinaryHprof$Tag.get(byte)
Binder com.android.server.am.UriPermissionOwner.getExternalTokenLocked()
Bitmap android.app.ActivityManager.getTaskTopThumbnail(int)
Bitmap android.app.ActivityManagerProxy.getTaskTopThumbnail(int)
Bitmap android.app.ActivityOptions.getThumbnail()
Bitmap android.app.WallpaperManager.generateBitmap(Context,Bitmap,int,int)
Bitmap android.filterfw.core.GLFrame.getBitmap()
Bitmap android.filterfw.core.NativeFrame.getBitmap()
Bitmap android.filterfw.core.SerializedFrame.getBitmap()
Bitmap android.filterfw.core.SimpleFrame.getBitmap()
Bitmap android.filterfw.core.VertexFrame.getBitmap()
Bitmap android.gesture.Gesture.toBitmap(int,int,int,int)
Bitmap android.gesture.Gesture.toBitmap(int,int,int,int,int)
Bitmap android.graphics.Bitmap.createBitmap(DisplayMetrics,int,int,Bitmap$Config)
Bitmap android.graphics.Bitmap.createBitmap(DisplayMetrics,int[],int,int,Bitmap$Config)
Bitmap android.graphics.Bitmap.createBitmap(int,int,Bitmap$Config)
Bitmap android.graphics.Bitmap.createBitmap(int[],int,int,Bitmap$Config)
Bitmap android.graphics.Bitmap.createBitmap(int[],int,int,int,int,Bitmap$Config)
Bitmap android.media.videoeditor.MediaArtistNativeHelper.getPixels(String,int,int,long,int)
Bitmap android.media.videoeditor.MediaImageItem.getThumbnail(int,int,long)
Bitmap android.media.videoeditor.MediaVideoItem.getThumbnail(int,int,long)
Bitmap android.media.videoeditor.OverlayFrame.getBitmap()
Bitmap android.os.IUserManager$Stub$Proxy.getUserIcon(int)
Bitmap android.os.UserManager.getUserIcon(int)
Bitmap android.provider.MediaStore$Images$Thumbnails.getThumbnail(ContentResolver,long,int,BitmapFactory$Options)
Bitmap android.provider.MediaStore$Images$Thumbnails.getThumbnail(ContentResolver,long,long,int,BitmapFactory$Options)
Bitmap android.provider.MediaStore$InternalThumbnails.getThumbnail(ContentResolver,long,long,int,BitmapFactory$Options,Uri,boolean)
Bitmap android.provider.MediaStore$Video$Thumbnails.getThumbnail(ContentResolver,long,int,BitmapFactory$Options)
Bitmap android.provider.MediaStore$Video$Thumbnails.getThumbnail(ContentResolver,long,long,int,BitmapFactory$Options)
Bitmap android.view.IWindowManager$Stub$Proxy.screenshotApplications(IBinder,int,int,int)
Bitmap android.view.PointerIcon.getBitmap()
Bitmap android.view.TextureView.getBitmap()
Bitmap android.view.TextureView.getBitmap(Bitmap)
Bitmap android.view.TextureView.getBitmap(int,int)
Bitmap android.view.View.createSnapshot(Bitmap$Config,int,boolean)
Bitmap android.view.ViewGroup.createSnapshot(Bitmap$Config,int,boolean)
Bitmap android.webkit.WebHistoryItemClassic.getFavicon()
Bitmap android.webkit.WebViewClassic.getFavicon()
Bitmap android.widget.RemoteViews$BitmapCache.getBitmapForId(int)
Bitmap com.android.browser.BaseUi.getDefaultVideoPoster()
Bitmap com.android.browser.BookmarkUtils.createIcon(Context,Bitmap,Bitmap,BookmarkUtils$BookmarkIconType)
Bitmap com.android.browser.BrowserBookmarksPage.getBitmap(Cursor,int)
Bitmap com.android.browser.BrowserBookmarksPage.getBitmap(Cursor,int,Bitmap)
Bitmap com.android.browser.BrowserSnapshotPage.getBitmap(Cursor,int)
Bitmap com.android.browser.Controller.createScreenshot(WebView,int,int)
Bitmap com.android.browser.Controller.getDefaultVideoPoster()
Bitmap com.android.browser.PreloadController.getDefaultVideoPoster()
Bitmap com.android.browser.SnapshotTab.getScreenshot()
Bitmap com.android.browser.Tab$3.getDefaultVideoPoster()
Bitmap com.android.browser.Tab.getFavicon()
Bitmap com.android.browser.Tab.getScreenshot()
Bitmap com.android.browser.preferences.WebsiteSettingsFragment$Site.getIcon()
Bitmap com.android.camera.Thumbnail.createVideoThumbnailBitmap(FileDescriptor,int)
Bitmap com.android.camera.Thumbnail.createVideoThumbnailBitmap(String,int)
Bitmap com.android.gallery3d.app.PhotoDataAdapter.getTile(int,int,int,int,int,BitmapPool)
Bitmap com.android.gallery3d.data.BitmapPool.getBitmap()
Bitmap com.android.gallery3d.data.BitmapPool.getBitmap(int,int)
Bitmap com.android.gallery3d.data.LocalVideo$LocalVideoRequest.onDecodeOriginal(ThreadPool$JobContext,int)
Bitmap com.android.gallery3d.filtershow.cache.DirectPresetCache.get(ImagePreset)
Bitmap com.android.gallery3d.filtershow.cache.ImageLoader.getImageForPreset(ImageShow,ImagePreset,boolean)
Bitmap com.android.gallery3d.filtershow.cache.ImageLoader.getOriginalBitmapLarge()
Bitmap com.android.gallery3d.filtershow.cache.ImageLoader.getScaleOneImageForPreset(ImageShow,ImagePreset,Rect,boolean)
Bitmap com.android.gallery3d.filtershow.cache.ImageLoader.rotateToPortrait(Bitmap,int)
Bitmap com.android.gallery3d.filtershow.cache.ZoomCache.getImage(ImagePreset,Rect)
Bitmap com.android.gallery3d.filtershow.filters.ImageFilterGeometry.apply(Bitmap,float,boolean)
Bitmap com.android.gallery3d.filtershow.filters.ImageFilterRS.apply(Bitmap,float,boolean)
Bitmap com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet.apply(Bitmap,float,boolean)
Bitmap com.android.gallery3d.filtershow.imageshow.ImageShow.getFilteredImage()
Bitmap com.android.gallery3d.filtershow.imageshow.ImageShow.getFiltersOnlyImage()
Bitmap com.android.gallery3d.filtershow.imageshow.ImageShow.getGeometryOnlyImage()
Bitmap com.android.gallery3d.filtershow.imageshow.ImageSlave.getFilteredImage()
Bitmap com.android.gallery3d.gadget.LocalPhotoSource.getImage(int)
Bitmap com.android.gallery3d.gadget.MediaSetSource.getImage(int)
Bitmap com.android.gallery3d.gadget.WidgetService$EmptySource.getImage(int)
Bitmap com.android.gallery3d.gadget.WidgetUtils.createWidgetBitmap(Bitmap,int)
Bitmap com.android.gallery3d.ui.AlbumLabelMaker$LazyLoadedBitmap.get()
Bitmap com.android.gallery3d.ui.BitmapLoader.getBitmap()
Bitmap com.android.gallery3d.ui.BitmapTexture.getBitmap()
Bitmap com.android.gallery3d.ui.BitmapTileProvider.getTile(int,int,int,int,int,BitmapPool)
Bitmap com.android.gallery3d.ui.CanvasTexture.onGetBitmap()
Bitmap com.android.gallery3d.ui.TileImageViewAdapter.getTile(int,int,int,int,int,BitmapPool)
Bitmap com.android.launcher2.BubbleTextView.getPressedOrFocusedBackground()
Bitmap com.android.launcher2.FastBitmapDrawable.getBitmap()
Bitmap com.android.launcher2.IconCache.getIcon(ComponentName,ResolveInfo,HashMap)
Bitmap com.android.launcher2.IconCache.getIcon(Intent)
Bitmap com.android.launcher2.LauncherModel.getFallbackIcon()
Bitmap com.android.launcher2.LauncherModel.getIconFromCursor(Cursor,int,Context)
Bitmap com.android.launcher2.ShortcutInfo.getIcon(IconCache)
Bitmap com.android.launcher2.Utilities.createIconBitmap(Bitmap,Context)
Bitmap com.android.launcher2.Utilities.createIconBitmap(Drawable,Context)
Bitmap com.android.launcher2.Utilities.resampleIconBitmap(Bitmap,Context)
Bitmap com.android.launcher2.Workspace.createDragBitmap(View,Canvas,int)
Bitmap com.android.launcher2.Workspace.createWidgetBitmap(ItemInfo,View)
Bitmap com.android.mms.model.ImageModel.getBitmap(int,int)
Bitmap com.android.mms.util.ThumbnailManager.access$200()
Bitmap com.android.mms.util.ThumbnailManager.access$300()
Bitmap com.android.nfc.SendUi.createScreenshot()
Bitmap com.android.providers.contacts.PhotoProcessor.getDisplayPhoto()
Bitmap com.android.providers.contacts.PhotoProcessor.getNormalizedBitmap(Bitmap,int,boolean)
Bitmap com.android.server.am.ActivityManagerService.getTaskTopThumbnail(int)
Bitmap com.android.server.am.ActivityStack.getTaskTopThumbnailLocked(TaskRecord)
Bitmap com.android.server.pm.UserManagerService.getUserIcon(int)
Bitmap com.android.server.wm.WindowManagerService.screenshotApplications(IBinder,int,int,int)
Bitmap com.android.systemui.recent.RecentTasksLoader.getDefaultIcon()
Bitmap com.android.systemui.recent.RecentTasksLoader.getDefaultThumbnail()
Bitmap com.android.systemui.recent.TaskDescription.getThumbnail()
Bitmap com.android.videoeditor.LoadPreviewBitmapTask.doInBackground(Void[])
Bitmap com.android.videoeditor.OverlaysAdapter.loadImage(Object)
Bitmap com.android.videoeditor.util.ImageUtils.buildOverlayBitmap(Context,Bitmap,int,String,String,int,int)
Bitmap com.android.videoeditor.util.ImageUtils.scaleImage(String,int,int,int)
Bitmap com.android.videoeditor.widgets.ImageViewTouchBase.getImageBitmap()
Bitmap com.android.videoeditor.widgets.ThumbnailCache.get(ThumbnailKey)
Bitmap com.google.android.apps.lightcycle.panorama.MessageDisplay.access$100(MessageDisplay,String,int,Typeface,float[])
Bitmap$Config android.graphics.Bitmap.getConfig()
BitmapDrawable com.android.internal.widget.DrawableHolder.getDrawable()
BitmapPool com.android.gallery3d.data.MediaItem.getMicroThumbPool()
BitmapPool com.android.gallery3d.data.MediaItem.getThumbPool()
BitmapRegionDecoder com.android.gallery3d.data.LocalImage$LocalLargeImageRequest.run(ThreadPool$JobContext)
Bitmap[] android.media.videoeditor.MediaItem.getThumbnailList(int,int,long,long,int)
BlobCache com.android.gallery3d.picasasource.PicasaSource.getFaceCache(Context)
BlobCache com.android.gallery3d.util.CacheManager.getCache(Context,String,int,int,int)
BlobCache com.android.mms.util.CacheManager.getCache(Context,String,int,int,int)
BlockGuard$Policy dalvik.system.BlockGuard.getThreadPolicy()
BluetoothDevice android.bluetooth.BluetoothAdapter.getRemoteDevice(byte[])
BluetoothDevice android.bluetooth.BluetoothPbap.getClient()
BluetoothDevice android.bluetooth.IBluetoothPbap$Stub$Proxy.getClient()
BluetoothDevice com.android.bluetooth.btservice.ProfileService.getDevice(byte[])
BluetoothDevice com.android.bluetooth.btservice.RemoteDevices.getDevice(byte[])
BluetoothDevice com.android.bluetooth.pbap.BluetoothPbapService$2.getClient()
BluetoothDevice[] android.bluetooth.IBluetooth$Stub$Proxy.getBondedDevices()
BluetoothDevice[] com.android.bluetooth.btservice.AdapterProperties.getBondedDevices()
BluetoothDevice[] com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getBondedDevices()
BluetoothDevice[] com.android.bluetooth.btservice.AdapterService.getBondedDevices()
BluetoothOppManager com.android.bluetooth.opp.BluetoothOppManager.getInstance(Context)
BluetoothOppPreference com.android.bluetooth.opp.BluetoothOppPreference.getInstance(Context)
BluetoothOppReceiveFileInfo com.android.bluetooth.opp.BluetoothOppReceiveFileInfo.generateFileInfo(Context,int)
BluetoothOppSendFileInfo com.android.bluetooth.opp.BluetoothOppSendFileInfo.generateFileInfo(Context,Uri,String)
BluetoothOppSendFileInfo com.android.bluetooth.opp.BluetoothOppUtility.getSendFileInfo(Uri)
BluetoothOppShareInfo com.android.bluetooth.opp.BluetoothOppBatch.getPendingShare()
BluetoothTetheringDataTracker android.bluetooth.BluetoothTetheringDataTracker.getInstance()
Body com.android.emailcommon.internet.MimeBodyPart.getBody()
Body com.android.emailcommon.internet.MimeMessage.getBody()
BodyPart com.android.emailcommon.mail.Multipart.getBodyPart(int)
Boolean com.adobe.xmp.impl.XMPMetaImpl.getPropertyBoolean(String,String)
Boolean com.android.gallery3d.filtershow.FilterShowActivity$LoadBitmapTask.doInBackground(Uri[])
Boolean com.android.musicfx.ControlPanelEffect.getParameterBoolean(Context,String,int,ControlPanelEffect$Key)
Box com.coremedia.iso.AbstractBoxParser.parseBox(ReadableByteChannel,ContainerBox)
Box com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getMediaHeaderBox()
BreadCrumbView com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getBreadCrumbView(int)
BreadCrumbView com.android.browser.view.BookmarkExpandableView.getBreadCrumbs(int)
BreadCrumbView$Crumb com.android.browser.BreadCrumbView.getTopCrumb()
BroadcastReceiver$PendingResult android.content.BroadcastReceiver.getPendingResult()
BroadcastReceiver$PendingResult android.content.BroadcastReceiver.goAsync()
BroadcastRecord com.android.server.am.BroadcastQueue.getMatchingOrderedReceiver(IBinder)
BrowserBookmarksAdapter com.android.browser.view.BookmarkExpandableView.getChildAdapter(int)
BrowserBookmarksAdapterItem com.android.browser.BrowserBookmarksAdapter.getLoadingObject()
BrowserBookmarksAdapterItem com.android.browser.BrowserBookmarksAdapter.getRowObject(Cursor,BrowserBookmarksAdapterItem)
BrowserSettings com.android.browser.BrowserSettings.getInstance()
BrowserSettings com.android.browser.Controller.getSettings()
BstBalancePolicy com.google.common.collect.BstMutationRule.getBalancePolicy()
BstModificationResult$ModificationType com.google.common.collect.BstModificationResult.getType()
BstModifier com.google.common.collect.BstMutationRule.getModifier()
BstNode com.google.common.collect.BstCountBasedBalancePolicies$1.balance(BstNodeFactory,BstNode,BstNode,BstNode)
BstNode com.google.common.collect.BstCountBasedBalancePolicies$1.combine(BstNodeFactory,BstNode,BstNode)
BstNode com.google.common.collect.BstCountBasedBalancePolicies$2.balance(BstNodeFactory,BstNode,BstNode,BstNode)
BstNode com.google.common.collect.BstCountBasedBalancePolicies$2.combine(BstNodeFactory,BstNode,BstNode)
BstNode com.google.common.collect.BstCountBasedBalancePolicies$3.balance(BstNodeFactory,BstNode,BstNode,BstNode)
BstNode com.google.common.collect.BstModificationResult.getChangedTarget()
BstNode com.google.common.collect.BstModificationResult.getOriginalTarget()
BstNode com.google.common.collect.BstMutationResult.getChangedRoot()
BstNode com.google.common.collect.BstMutationResult.getOriginalRoot()
BstNode com.google.common.collect.BstMutationResult.getOriginalTarget()
BstNode com.google.common.collect.BstNode.getChild(BstSide)
BstNode com.google.common.collect.BstNodeFactory.createLeaf(BstNode)
BstNode com.google.common.collect.BstOperations.insertMax(BstNode,BstNode,BstNodeFactory,BstBalancePolicy)
BstNode com.google.common.collect.BstOperations.insertMin(BstNode,BstNode,BstNodeFactory,BstBalancePolicy)
BstNode com.google.common.collect.BstPath.getTip()
BstNodeFactory com.google.common.collect.BstMutationRule.getNodeFactory()
BstPath com.google.common.collect.BstPath.getPrefix()
Builder org.apache.james.mime4j.field.address.Builder.getInstance()
BulkCursorDescriptor android.database.CursorToBulkCursorAdaptor.getBulkCursorDescriptor()
Bundle android.accounts.AbstractAccountAuthenticator.getAccountRemovalAllowed(AccountAuthenticatorResponse,Account)
Bundle android.appwidget.AppWidgetManager.getAppWidgetOptions(int)
Bundle android.service.textservice.SpellCheckerService$InternalISpellCheckerSession.getBundle()
Bundle android.service.textservice.SpellCheckerService$Session.getBundle()
Bundle android.speech.tts.SynthesisRequest.getParams()
Bundle com.android.browser.Controller.createSaveState()
Bundle com.android.contacts.list.ProfileAndContactsLoader$1.getExtras()
Bundle com.android.deskclock.AlarmClock$AlarmItemAdapter.getPreviousDaysOfWeekMap()
Bundle com.android.email.VendorPolicyLoader.getPolicy(String,Bundle)
Bundle com.android.email.activity.MessageViewFragmentBase$ContactStatusLoaderCallbacks.createArguments(String)
Bundle com.android.email.activity.setup.AccountServerBaseFragment.getSettingsModeArgs()
Bundle com.android.email.activity.setup.AccountSettingsFragment.buildArguments(long,String)
Bundle com.android.email.mail.Store.autoDiscover(Context,String,String)
Bundle com.android.email.mail.store.ServiceStore.autoDiscover(Context,String,String)
Bundle com.android.email.mail.store.ServiceStore.checkSettings()
Bundle com.android.email.service.AccountService$1.getConfigurationData(String)
Bundle com.android.email.service.EasAuthenticatorService$EasAuthenticator.addAccount(AccountAuthenticatorResponse,String,String,String[],Bundle)
Bundle com.android.email.service.EasAuthenticatorService$EasAuthenticator.getAuthToken(AccountAuthenticatorResponse,Account,String,Bundle)
Bundle com.android.email.service.EasTestAuthenticatorService$EasAuthenticator.addAccount(AccountAuthenticatorResponse,String,String,String[],Bundle)
Bundle com.android.email.service.EasTestAuthenticatorService$EasAuthenticator.getAuthToken(AccountAuthenticatorResponse,Account,String,Bundle)
Bundle com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator.addAccount(AccountAuthenticatorResponse,String,String,String[],Bundle)
Bundle com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator.getAuthToken(AccountAuthenticatorResponse,Account,String,Bundle)
Bundle com.android.emailcommon.service.AccountServiceProxy.getConfigurationData(String)
Bundle com.android.emailcommon.service.EmailServiceProxy.validate(HostAuth)
Bundle com.android.emailcommon.service.IAccountService$Stub$Proxy.getConfigurationData(String)
Bundle com.android.emailcommon.service.IEmailService$Stub$Proxy.autoDiscover(String,String)
Bundle com.android.emailcommon.service.IEmailService$Stub$Proxy.validate(HostAuth)
Bundle com.android.exchange.AbstractSyncService.validate(Class,HostAuth,Context)
Bundle com.android.exchange.EasSyncService.tryAutodiscover(String,String)
Bundle com.android.exchange.EasSyncService.validateAccount(HostAuth,Context)
Bundle com.android.gallery3d.app.ActivityState.getData()
Bundle com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.getAppWidgetOptions(int)
Bundle com.android.launcher2.AppsCustomizePagedView.getDefaultOptionsForWidget(Launcher,PendingAddWidgetInfo)
Bundle com.android.nfc.NfcService$NfcAdapterExtrasService.open(String,IBinder)
Bundle com.android.phone.PhoneInterfaceManager.getCellLocation()
Bundle com.android.providers.contacts.FastScrollingIndexCache.buildExtraBundle(String[],int[])
Bundle com.android.providers.contacts.FastScrollingIndexCache.get(Uri,String,String[],String,String)
Bundle com.android.server.AppWidgetService.getAppWidgetOptions(int)
Bundle com.android.server.AppWidgetServiceImpl.getAppWidgetOptions(int)
Bundle com.android.server.am.CoreSettingsObserver.getCoreSettingsLocked()
Bundle com.android.server.wm.Session.sendWallpaperCommand(IBinder,String,int,int,int,Bundle,boolean)
Bundle com.android.server.wm.WindowManagerService.sendWindowWallpaperCommandLocked(WindowState,String,int,int,int,Bundle,boolean)
Bundle com.android.uiautomator.testrunner.UiAutomatorTestCase.getParams()
Bundle com.android.videoeditor.service.MovieOverlay.buildUserAttributes(int,String,String)
Bundle[] com.android.nfc.dhimpl.NativeNfcTag.getTechExtras()
ByteArrayBuilder$Chunk android.webkit.ByteArrayBuilder.getFirstChunk()
ByteArrayInputStream com.google.common.io.ByteStreams$1.getInput()
ByteBuffer android.filterfw.core.GLFrame.getData()
ByteBuffer android.filterfw.core.NativeFrame.getData()
ByteBuffer android.filterfw.core.SerializedFrame.getData()
ByteBuffer android.filterfw.core.SimpleFrame.getData()
ByteBuffer android.filterfw.core.VertexFrame.getData()
ByteBuffer com.coremedia.iso.boxes.mdat.MediaDataBox.getContent(long,int)
ByteBuffer com.coremedia.iso.boxes.mdat.MediaDataBox.getHeader()
ByteOrder com.android.gallery3d.exif.CountedDataInputStream.getByteOrder()
ByteOrder com.android.gallery3d.exif.ExifData.getByteOrder()
ByteOrder com.android.gallery3d.exif.ExifParser.getByteOrder()
BytesBufferPool com.android.gallery3d.data.MediaItem.getBytesBufferPool()
BytesBufferPool$BytesBuffer com.android.gallery3d.data.BytesBufferPool.get()
CacheManager$CacheResult android.webkit.CacheManager.getCacheFile(String,Map)
CacheManager$CacheResult android.webkit.CacheManager.getCacheFile(String,long,Map)
Calendar com.adobe.xmp.impl.XMPDateTimeImpl.getCalendar()
Calendar com.adobe.xmp.impl.XMPMetaImpl.getPropertyCalendar(String,String)
Calendar com.android.deskclock.Alarms.calculateAlarm(int,int,Alarm$DaysOfWeek)
CalendarAlarmManager com.android.providers.calendar.CalendarProvider2.getOrCreateCalendarAlarmManager()
CalendarController com.android.calendar.CalendarController.getInstance(Context)
CalendarDatabaseHelper com.android.providers.calendar.CalendarDatabaseHelper.getInstance(Context)
CalendarProvider2 com.android.providers.calendar.CalendarProvider2.getInstance()
CalendarUtilities$TimeZoneDate com.android.exchange.utility.CalendarUtilities.getTimeZoneDateFromSystemTime(byte[],int)
Call com.android.internal.telephony.CallManager.getActiveFgCall()
Call com.android.internal.telephony.CallManager.getFirstActiveBgCall()
Call com.android.internal.telephony.CallManager.getFirstActiveRingingCall()
Call com.android.internal.telephony.cdma.CDMAPhone.getBackgroundCall()
Call com.android.internal.telephony.cdma.CDMAPhone.getForegroundCall()
Call com.android.internal.telephony.cdma.CDMAPhone.getRingingCall()
Call com.android.internal.telephony.cdma.CdmaConnection.getCall()
Call com.android.internal.telephony.gsm.GSMPhone.getBackgroundCall()
Call com.android.internal.telephony.gsm.GSMPhone.getForegroundCall()
Call com.android.internal.telephony.gsm.GSMPhone.getRingingCall()
Call com.android.internal.telephony.gsm.GsmConnection.getCall()
Call com.android.internal.telephony.sip.SipPhone$SipConnection.getCall()
Call$State com.android.internal.telephony.Call.getState()
Call$State com.android.internal.telephony.CallManager.getActiveFgCallState()
Call$State com.android.internal.telephony.Connection.getState()
Call$State com.android.internal.telephony.cdma.CdmaCall.getState()
Call$State com.android.internal.telephony.cdma.CdmaConnection.getState()
Call$State com.android.internal.telephony.gsm.GsmConnection.getState()
Call$State com.android.internal.telephony.sip.SipPhone$SipConnection.getState()
Call$State com.android.phone.CallNotifier.getPreviousCdmaCallState()
CallLogAdapter com.android.contacts.calllog.CallLogFragment.getAdapter()
CallLogListItemViews com.android.contacts.calllog.CallLogListItemViews.createForTest(Context)
CallManager com.android.internal.telephony.CallManager.getInstance()
CallbackProxy$UploadFile android.webkit.CallbackProxy$UploadFileMessageData.getUploadFile()
CallerInfo com.android.phone.PhoneUtils.getCallerInfo(Context,Connection)
CallerInfoAsyncQuery com.android.internal.telephony.CallerInfoAsyncQuery.startQuery(int,Context,String,CallerInfoAsyncQuery$OnQueryCompleteListener,Object)
CallerInfoCache$CacheEntry com.android.phone.CallerInfoCache.getCacheEntry(String)
Camera com.android.camera.CameraManager$CameraProxy.getCamera()
Camera$CameraInfo[] com.android.camera.CameraHolder.getCameraInfo()
Camera$Parameters android.filterpacks.videosrc.CameraSource.getCameraParameters()
Camera$Parameters android.hardware.Camera.getEmptyParameters()
Camera$Parameters android.hardware.Camera.getParameters()
Camera$Parameters com.android.camera.CameraManager$CameraProxy.getParameters()
Camera$Parameters com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.getParameters()
Camera$PreviewCallback com.google.android.apps.lightcycle.panorama.LightCycleView.getPreviewCallback()
Camera$Size android.hardware.Camera$Parameters.getJpegThumbnailSize()
Camera$Size android.hardware.Camera$Parameters.getPictureSize()
Camera$Size android.hardware.Camera$Parameters.getPreferredPreviewSizeForVideo()
Camera$Size android.hardware.Camera$Parameters.getPreviewSize()
Camera$Size com.android.camera.Util.getOptimalPreviewSize(Activity,List,double)
Camera$Size com.android.camera.Util.getOptimalVideoSnapshotPictureSize(List,double)
CameraApiProxy$CameraProxy com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.getCamera()
CameraApiProxy$CameraProxy com.google.android.apps.lightcycle.camera.TextureCameraPreview.getCamera()
CameraManager$CameraProxy com.android.camera.CameraManager.cameraOpen(int)
CameraPreference com.android.camera.PreferenceGroup.get(int)
CameraPreview com.google.android.apps.lightcycle.panorama.LightCycleView.getCameraPreview()
CameraScreenNail com.android.camera.CameraActivity.getCameraScreenNail()
CameraUtility com.google.android.apps.lightcycle.LightCycleApp.getCameraUtility()
CatCmdMessage$BrowserSettings com.android.internal.telephony.cat.CatCmdMessage.getBrowserSettings()
CatCmdMessage$CallSettings com.android.internal.telephony.cat.CatCmdMessage.getCallSettings()
CatService com.android.internal.telephony.cat.CatService.getInstance(CommandsInterface,Context,UiccCard)
CdmaPhoneCallState$PhoneCallState com.android.phone.CdmaPhoneCallState.getCurrentCallState()
CdmaPhoneCallState$PhoneCallState com.android.phone.CdmaPhoneCallState.getPreviousCallState()
CdmaSubscriptionSourceManager com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager.getInstance(Context,CommandsInterface,Handler,int,Object)
CellIdentityCdma android.telephony.CellIdentityCdma.copy()
CellIdentityCdma android.telephony.CellInfoCdma.getCellIdentity()
CellIdentityGsm android.telephony.CellIdentityGsm.copy()
CellIdentityGsm android.telephony.CellInfoGsm.getCellIdentity()
CellIdentityLte android.telephony.CellIdentityLte.copy()
CellIdentityLte android.telephony.CellInfoLte.getCellIdentity()
CellInfo android.telephony.CellInfo$1.createFromParcel(Parcel)
CellInfoCdma android.telephony.CellInfoCdma$1.createFromParcel(Parcel)
CellInfoGsm android.telephony.CellInfoGsm$1.createFromParcel(Parcel)
CellInfoLte android.telephony.CellInfoLte$1.createFromParcel(Parcel)
CellLayout com.android.launcher2.Hotseat.getLayout()
CellLayout com.android.launcher2.Launcher.getCellLayout(long,int)
CellLayout com.android.launcher2.Workspace.getCurrentDropLayout()
CellLayout com.android.launcher2.Workspace.getParentCellLayoutForView(View)
CellLayout$CellInfo com.android.launcher2.CellLayout.getTag()
CellLocation com.android.internal.telephony.sip.SipPhone.getCellLocation()
CellSignalStrengthCdma android.telephony.CellInfoCdma.getCellSignalStrength()
CellSignalStrengthGsm android.telephony.CellInfoGsm.getCellSignalStrength()
CellSignalStrengthLte android.telephony.CellInfoLte.getCellSignalStrength()
CertPath java.security.cert.CertPathValidatorException.getCertPath()
CertPathValidator java.security.cert.CertPathValidator.getInstance(String)
CertPathValidator java.security.cert.CertPathValidator.getInstance(String,Provider)
CertPathValidator java.security.cert.CertPathValidator.getInstance(String,String)
CertSelector java.security.cert.PKIXParameters.getTargetCertConstraints()
CertStore java.security.cert.CertStore.getInstance(String,CertStoreParameters)
CertStore java.security.cert.CertStore.getInstance(String,CertStoreParameters,Provider)
CertStore java.security.cert.CertStore.getInstance(String,CertStoreParameters,String)
CertStoreParameters java.security.cert.CertStore.getCertStoreParameters()
Certificate[] java.security.CodeSource.getCertificates()
CharMatcher com.google.common.base.CharMatcher.precomputed()
CharMatcher com.google.common.base.CharMatcher.precomputedInternal()
CharSequence android.content.pm.LabeledIntent.getNonLocalizedLabel()
CharSequence android.media.MediaRouter$RouteCategory.getName()
CharSequence android.media.MediaRouter$RouteCategory.getName(Context)
CharSequence android.media.MediaRouter$RouteCategory.getName(Resources)
CharSequence android.media.MediaRouter$RouteGroup.getName(Resources)
CharSequence android.media.MediaRouter$RouteInfo.getName()
CharSequence android.media.MediaRouter$RouteInfo.getName(Context)
CharSequence android.media.MediaRouter$RouteInfo.getName(Resources)
CharSequence android.media.MediaRouter$RouteInfo.getStatus()
CharSequence android.view.View.getIterableTextForAccessibility()
CharSequence android.widget.AutoCompleteTextView.getCompletionHint()
CharSequence android.widget.SearchView.getQueryHint()
CharSequence android.widget.TextView.getIterableTextForAccessibility()
CharSequence com.android.browser.BrowserBookmarksAdapter.getTitle(Cursor)
CharSequence com.android.browser.search.DefaultSearchEngine.getLabel()
CharSequence com.android.browser.search.OpenSearchSearchEngine.getLabel()
CharSequence com.android.calendar.ExpandableTextView.getText()
CharSequence com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.getLabelForType(String)
CharSequence com.android.contacts.calllog.CallTypeHelper.getCallTypeText(int)
CharSequence com.android.contacts.calllog.PhoneNumberHelper.getDisplayNumber(CharSequence,CharSequence)
CharSequence com.android.contacts.detail.ContactDetailDisplayUtils.getDisplayName(Context,Contact)
CharSequence com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry.getLabel()
CharSequence com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry.getLabel()
CharSequence com.android.contacts.list.ContactsRequest.getActivityTitle()
CharSequence com.android.contacts.list.CustomContactListFilterActivity$GroupDelta.getTitle(Context)
CharSequence com.android.contacts.model.account.AccountType.getDisplayLabel(Context)
CharSequence com.android.contacts.model.account.AccountType.getInviteContactActionLabel(Context)
CharSequence com.android.contacts.model.account.AccountType.getResourceText(Context,String,int,String)
CharSequence com.android.contacts.model.account.AccountType.getViewGroupLabel(Context)
CharSequence com.android.contacts.model.account.BaseAccountType$CommonInflater.getTypeLabel(Resources,Integer,CharSequence)
CharSequence com.android.contacts.model.account.BaseAccountType$CommonInflater.inflateUsing(Context,ContentValues)
CharSequence com.android.contacts.preference.DisplayOrderPreference.getSummary()
CharSequence com.android.contacts.preference.SortOrderPreference.getSummary()
CharSequence com.android.contacts.quickcontact.DataAction.getBody()
CharSequence com.android.contacts.quickcontact.DataAction.getSubtitle()
CharSequence com.android.contacts.quickcontact.ResolveCache.getDescription(Action)
CharSequence com.android.contacts.util.ContactBadgeUtil.getSocialDate(StreamItemEntry,Context)
CharSequence com.android.contacts.util.StreamItemEntry.getDecodedComments()
CharSequence com.android.contacts.util.StreamItemEntry.getDecodedText()
CharSequence com.android.deskclock.DigitalClock$AmPm.getAmPmText()
CharSequence com.android.ex.chips.RecipientChip.getOriginalText()
CharSequence com.android.ex.chips.RecipientChip.getValue()
CharSequence com.android.inputmethod.compat.SuggestionSpanUtils.getTextWithAutoCorrectionIndicatorUnderline(Context,CharSequence)
CharSequence com.android.inputmethod.compat.SuggestionSpanUtils.getTextWithSuggestionSpan(Context,CharSequence,SuggestedWords,boolean)
CharSequence com.android.inputmethod.latin.RichInputConnection.getNthPreviousWord(String,int)
CharSequence com.android.inputmethod.latin.RichInputConnection.getTextAfterCursor(int,int)
CharSequence com.android.inputmethod.latin.RichInputConnection.getTextBeforeCursor(int,int)
CharSequence com.android.inputmethod.latin.RichInputConnection.getWordBeforeCursorIfAtEndOfWord(SettingsValues)
CharSequence com.android.inputmethod.latin.WordComposer.getAutoCorrectionOrNull()
CharSequence com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams.getAddToDictionaryWord()
CharSequence com.android.internal.policy.impl.keyguard.KeyguardMessageArea.getCurrentMessage()
CharSequence com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getTelephonyPlmn()
CharSequence com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getTelephonySpn()
CharSequence com.android.internal.view.menu.MenuItemImpl.getTitleForItemView(MenuView$ItemView)
CharSequence com.android.mms.data.WorkingMessage.getSubject()
CharSequence com.android.mms.data.WorkingMessage.getText()
CharSequence com.android.mms.ui.MessageItem.getCachedFormattedMessage()
CharSequence com.android.phone.EditPhoneNumberPreference.getSummaryOn()
CharSequence com.android.phone.PhoneUtils.getProviderLabel(Context,Intent)
CharSequence com.android.systemui.recent.TaskDescription.getLabel()
CharSequence com.android.systemui.statusbar.phone.Ticker$Segment.getText()
CharSequence[] android.content.res.AssetManager.getResourceTextArray(int)
CharSequence[] com.android.camera.ListPreference.getEntries()
CharSequence[] com.android.camera.ListPreference.getEntryValues()
CharSequence[][] com.android.calendar.TimezoneAdapter.getAllTimezones()
CharSequence[][] com.android.deskclock.SettingsActivity.getAllTimezones()
Character com.google.common.collect.Lists$CharSequenceAsList.get(int)
Character com.google.common.collect.Lists$StringAsImmutableList$1.get(int)
Character com.google.common.collect.Lists$StringAsImmutableList.get(int)
CharacterStyle android.text.style.MetricAffectingSpan$Passthrough.getUnderlying()
CharacterStyle android.text.style.MetricAffectingSpan.getUnderlying()
Choreographer android.view.Choreographer.getInstance()
Chronometer$OnChronometerTickListener android.widget.Chronometer.getOnChronometerTickListener()
ChunkOffsetBox com.coremedia.iso.boxes.SampleTableBox.getChunkOffsetBox()
Class android.filterfw.core.FrameFormat.getObjectClass()
Class com.android.email.mail.Sender.getSettingActivityClass()
Class com.android.email.mail.Store.getSettingActivityClass()
Class com.android.email.mail.store.ExchangeStore.getSettingActivityClass()
Class com.android.inputmethod.compat.CompatUtils.getClass(String)
Class com.android.videoeditor.service.MovieOverlay.getAttributeType(String)
Class com.android.videoeditor.service.MovieTransition.getTypeClass()
ClassLoader java.lang.ClassLoader.access$000()
ClassLoader java.security.ProtectionDomain.getClassLoader()
Class[] com.android.bluetooth.btservice.Config.getSupportedProfiles()
ClientConnectionManager com.google.android.picasastore.HttpUtils.getConnectionManager()
ClientConnectionRequest org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.requestConnection(HttpRoute,Object)
ClientTransaction com.android.server.sip.SipHelper.sendInvite(SipProfile,SipProfile,String,String,ReferredByHeader,String)
ClientTransaction com.android.server.sip.SipHelper.sendOptions(SipProfile,SipProfile,String)
ClientTransaction com.android.server.sip.SipHelper.sendRegister(SipProfile,String,int)
ClientTransaction com.android.server.sip.SipHelper.sendReinvite(Dialog,String)
ClipData android.content.Intent.getClipData()
ClipData com.android.server.ClipboardService.getPrimaryClip(String)
ClipData$Item android.content.ClipData.getItemAt(int)
ClipDescription com.android.server.ClipboardService.getPrimaryClipDescription()
Clock com.android.providers.contacts.util.Clock.getInstance()
CloseGuard$Reporter dalvik.system.CloseGuard.getReporter()
CodeSigner[] java.security.CodeSource.getCodeSigners()
CodeSource java.security.ProtectionDomain.getCodeSource()
CoderResult com.beetstra.jutf7.UTF7StyleCharsetDecoder.decodeLoop(ByteBuffer,CharBuffer)
CoderResult com.beetstra.jutf7.UTF7StyleCharsetEncoder.encodeLoop(CharBuffer,ByteBuffer)
Collection android.content.SyncQueue.getOperations()
Collection android.content.pm.RegisteredServicesCache.getAllServices(int)
Collection android.filterfw.core.Filter.getInputPorts()
Collection android.filterfw.core.Filter.getOutputPorts()
Collection android.net.wifi.p2p.WifiP2pGroupList.getGroupList()
Collection android.webkit.WebStorageClassic.getOriginsSync()
Collection com.android.email.Controller.getResultCallbacksForTest()
Collection com.android.email.RefreshManager.getListenersForTest()
Collection com.android.email.mail.store.ImapStore.getConnectionPoolForTest()
Collection com.android.providers.downloads.DownloadInfo.getHeaders()
Collection com.android.server.am.ActiveServices$ServiceMap.getAllServices(int)
Collection com.android.vcard.VCardProperty.getParameters(String)
Collection com.google.common.collect.AbstractListMultimap.createCollection()
Collection com.google.common.collect.AbstractListMultimap.get(Object)
Collection com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
Collection com.google.common.collect.AbstractMultimap.createCollection(Object)
Collection com.google.common.collect.AbstractMultimap.createEntries()
Collection com.google.common.collect.AbstractMultimap.entries()
Collection com.google.common.collect.AbstractMultimap.get(Object)
Collection com.google.common.collect.AbstractSetMultimap.createCollection()
Collection com.google.common.collect.AbstractSetMultimap.get(Object)
Collection com.google.common.collect.AbstractSortedSetMultimap.createCollection()
Collection com.google.common.collect.AbstractSortedSetMultimap.get(Object)
Collection com.google.common.collect.ArrayListMultimap.createCollection()
Collection com.google.common.collect.ForwardingMap.values()
Collection com.google.common.collect.ForwardingMultimap.entries()
Collection com.google.common.collect.ForwardingMultimap.get(Object)
Collection com.google.common.collect.ForwardingMultimap.removeAll(Object)
Collection com.google.common.collect.ImmutableMap.values()
Collection com.google.common.collect.Multimaps$CustomListMultimap.createCollection()
Collection com.google.common.collect.Multimaps$CustomSetMultimap.createCollection()
Collection com.google.common.collect.Multimaps$CustomSortedSetMultimap.createCollection()
Collection com.google.common.collect.Multimaps$FilteredMultimap.get(Object)
Collection com.google.common.collect.Multimaps$MapMultimap.get(Object)
Collection com.google.common.collect.Multimaps$TransformedEntriesListMultimap.get(Object)
Collection com.google.common.collect.Multimaps$TransformedEntriesMultimap.get(Object)
Collection com.google.common.collect.Multimaps$UnmodifiableListMultimap.get(Object)
Collection com.google.common.collect.Multimaps$UnmodifiableMultimap.get(Object)
Collection com.google.common.collect.Multimaps$UnmodifiableSetMultimap.get(Object)
Collection com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap.get(Object)
Collection java.security.cert.CertStore.getCRLs(CRLSelector)
Collection java.security.cert.CertStore.getCertificates(CertSelector)
Collection java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads(AbstractQueuedSynchronizer$ConditionObject)
ColorFilter android.widget.ImageView.getColorFilter()
ComboPreferences com.android.camera.ComboPreferences.get(Context)
CommandException$Error com.android.internal.telephony.CommandException.getCommandError()
CommandsInterface$RadioState com.android.internal.telephony.BaseCommands.getRadioState()
Comparator com.android.launcher2.LauncherModel.getAppNameComparator()
Comparator com.android.providers.media.MediaThumbRequest.getComparator()
Comparator com.google.common.collect.ImmutableSortedMap.unsafeComparator()
Comparator com.google.common.collect.ImmutableSortedSet.comparator()
CompatibilityInfo$Translator android.content.res.CompatibilityInfo.getTranslator()
CompatibilityInfoHolder android.app.ContextImpl.getCompatibilityInfo(int)
CompatibilityInfoHolder android.content.ContextWrapper.getCompatibilityInfo(int)
CompatibilityInfoHolder android.view.Display.getCompatibilityInfo()
ComponentName android.accessibilityservice.AccessibilityService.startService(Intent)
ComponentName android.accounts.AccountAuthenticatorActivity.startService(Intent)
ComponentName android.app.ActivityManagerProxy.startService(IApplicationThread,Intent,String,int)
ComponentName android.app.ContextImpl.startServiceAsUser(Intent,UserHandle)
ComponentName android.app.ISearchManager$Stub$Proxy.getAssistIntent(int)
ComponentName android.app.admin.IDevicePolicyManager$Stub$Proxy.getGlobalProxyAdmin(int)
ComponentName android.app.admin.IDevicePolicyManager$Stub$Proxy.setGlobalProxy(ComponentName,String,String,int)
ComponentName android.content.ContextWrapper.startServiceAsUser(Intent,UserHandle)
ComponentName android.server.search.SearchManagerService.getAssistIntent(int)
ComponentName android.server.search.SearchManagerService.getGlobalSearchActivity()
ComponentName android.server.search.SearchManagerService.getWebSearchActivity()
ComponentName android.server.search.Searchables.getGlobalSearchActivity()
ComponentName android.server.search.Searchables.getWebSearchActivity()
ComponentName android.service.dreams.IDreamManager$Stub$Proxy.getDefaultDreamComponent()
ComponentName com.android.browser.widget.BookmarkThumbnailWidgetProvider.getComponentName(Context)
ComponentName com.android.calendar.widget.CalendarAppWidgetProvider.getComponentName(Context)
ComponentName com.android.email.SecurityPolicy.getAdminComponent()
ComponentName com.android.launcher2.LauncherModel.getComponentNameFromResolveInfo(ResolveInfo)
ComponentName com.android.server.DevicePolicyManagerService.getGlobalProxyAdmin(int)
ComponentName com.android.server.DevicePolicyManagerService.setGlobalProxy(ComponentName,String,String,int)
ComponentName com.android.server.RecognitionManagerService.findAvailRecognizer(String,int)
ComponentName com.android.server.RecognitionManagerService.getCurRecognizer(int)
ComponentName com.android.server.am.ActivityManagerService.getActivityClassForToken(IBinder)
ComponentName com.android.server.am.ActivityManagerService.getCallingActivity(IBinder)
ComponentName com.android.server.am.ActivityManagerService.startService(IApplicationThread,Intent,String,int)
ComponentName com.android.server.am.ActivityManagerService.startServiceInPackage(int,Intent,String,int)
ComponentName com.android.server.dreams.DreamManagerService.getDefaultDreamComponent()
ComponentName com.google.android.picasasync.UploadTaskEntry.getComponentName()
ComponentName[] android.service.dreams.IDreamManager$Stub$Proxy.getDreamComponents()
ComponentName[] com.android.server.dreams.DreamManagerService.getDreamComponents()
CompositeCursorAdapter$Partition com.android.common.widget.CompositeCursorAdapter.getPartition(int)
CompositionTimeToSample com.coremedia.iso.boxes.SampleTableBox.getCompositionTimeToSample()
ConcurrentHashMap android.media.AudioService$VolumeStreamState.getAllIndexes(boolean)
ConcurrentHashMap com.android.inputmethod.latin.Suggest.getUnigramDictionaries()
Config$AlbumPage com.android.gallery3d.app.Config$AlbumPage.get(Context)
Config$AlbumSetPage com.android.gallery3d.app.Config$AlbumSetPage.get(Context)
Config$ManageCachePage com.android.gallery3d.app.Config$ManageCachePage.get(Context)
Configuration android.app.ActivityThread.applyConfigCompatMainThread(int,Configuration,CompatibilityInfo)
Configuration com.android.server.am.ActivityManagerService.getConfiguration()
Configuration com.android.server.wm.WindowManagerService.computeNewConfigurationLocked()
Configuration com.android.server.wm.WindowManagerService.updateOrientationFromAppTokens(Configuration,IBinder)
ConfigurationInfo com.android.server.am.ActivityManagerService.getDeviceConfigurationInfo()
Connection com.android.internal.telephony.CallManager.dial(Phone,String)
Connection com.android.internal.telephony.CallManager.dial(Phone,String,UUSInfo)
Connection com.android.internal.telephony.CallManager.getFgCallLatestConnection()
Connection com.android.internal.telephony.cdma.CDMALTEPhone.dial(String)
Connection com.android.internal.telephony.sip.SipPhone.dial(String,UUSInfo)
Connection$DisconnectCause com.android.internal.telephony.cdma.CdmaConnection.getDisconnectCause()
Connection$DisconnectCause com.android.internal.telephony.gsm.GsmConnection.getDisconnectCause()
Connection$DisconnectCause com.android.internal.telephony.sip.SipConnectionBase.getDisconnectCause()
Connection$PostDialState com.android.internal.telephony.cdma.CdmaConnection.getPostDialState()
Connection$PostDialState com.android.internal.telephony.gsm.GsmConnection.getPostDialState()
Connection$PostDialState com.android.internal.telephony.sip.SipConnectionBase.getPostDialState()
Constants$CallStatusCode com.android.phone.InCallUiState.getPendingCallStatusCode()
Constructor com.android.inputmethod.compat.CompatUtils.getConstructor(Class,Class[])
Contact com.android.contacts.model.ContactLoader.loadInBackground()
Contact com.android.mms.data.Contact$ContactsCache.get(String,boolean)
Contact com.android.mms.data.Contact$ContactsCache.getMe(boolean)
Contact com.android.mms.data.Contact.get(String,boolean)
Contact com.android.mms.data.Contact.getMe(boolean)
ContactDetailActivity$FragmentKeyListener com.android.contacts.detail.ContactDetailLayoutController.getCurrentPage()
ContactDetailFragment$ViewEntry com.android.contacts.detail.ContactDetailFragment$ViewAdapter.getItem(int)
ContactDirectoryManager com.android.providers.contacts.ContactsProvider2.getContactDirectoryManagerForTest()
ContactEditorUtils com.android.contacts.editor.ContactEditorUtils.getInstance(Context)
ContactEntryListAdapter com.android.contacts.list.ContactEntryListFragment.getAdapter()
ContactEntryListAdapter com.android.contacts.list.DefaultContactBrowseListFragment.createListAdapter()
ContactEntryListAdapter com.android.contacts.list.JoinContactListFragment.createListAdapter()
ContactInfo com.android.contacts.calllog.ContactInfoHelper.lookupNumber(String,String)
ContactList com.android.mms.data.ContactList.getByIds(String,boolean)
ContactList com.android.mms.data.ContactList.getByNumbers(Iterable,boolean)
ContactList com.android.mms.data.ContactList.getByNumbers(String,boolean,boolean)
ContactList com.android.mms.data.Conversation.getRecipients()
ContactListFilter com.android.contacts.list.AccountFilterActivity$FilterListAdapter.getItem(int)
ContactListFilter com.android.contacts.list.ContactBrowseListFragment.getFilter()
ContactListFilter com.android.contacts.list.ContactEntryListAdapter.getFilter()
ContactListFilter com.android.contacts.list.ContactListFilter.restoreDefaultPreferences(SharedPreferences)
ContactListFilter com.android.contacts.list.ContactListFilterControllerImpl.getFilter()
ContactListFilter com.android.contacts.list.PhoneFavoriteFragment.getFilter()
ContactListFilter com.android.contacts.list.PhoneNumberPickerFragment.getFilter()
ContactListFilterController com.android.contacts.list.ContactListFilterController.getInstance(Context)
ContactLocaleUtils com.android.providers.contacts.ContactLocaleUtils.getIntance()
ContactPhotoManager com.android.contacts.ContactPhotoManager.createContactPhotoManager(Context)
ContactPhotoManager com.android.contacts.ContactPhotoManager.getInstance(Context)
ContactPhotoManager com.android.contacts.list.ContactEntryListAdapter.getPhotoLoader()
ContactStatusLoader$Result com.android.email.activity.ContactStatusLoader.getContactInfo(Context,String)
ContactStatusLoader$Result com.android.email.activity.ContactStatusLoader.loadInBackground()
ContactsBinaryDictionary com.android.inputmethod.latin.Suggest.getContactsDictionary()
ContactsDatabaseHelper com.android.providers.contacts.CallLogProvider.getDatabaseHelper(Context)
ContactsDatabaseHelper com.android.providers.contacts.ContactDirectoryManager.getDbHelper()
ContactsDatabaseHelper com.android.providers.contacts.ContactsDatabaseHelper.getInstance(Context)
ContactsDatabaseHelper com.android.providers.contacts.ContactsDatabaseHelper.getNewInstanceForTest(Context)
ContactsDatabaseHelper com.android.providers.contacts.ContactsProvider2.getThreadActiveDatabaseHelperForTest()
ContactsDatabaseHelper com.android.providers.contacts.VoicemailContentProvider.getDatabaseHelper(Context)
ContactsSyncAdapter$RowBuilder com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations.createBuilder(Entity,String,int,String)
ContactsTransaction com.android.providers.contacts.AbstractContactsProvider.getCurrentTransaction()
ContainerBox com.coremedia.iso.boxes.mdat.MediaDataBox.getParent()
ContainerBox com.googlecode.mp4parser.AbstractBox.getParent()
ContainerBox com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat.getParent()
ContentCache$CacheToken com.android.email.provider.ContentCache.getCacheToken(String)
ContentHandler android.media.MediaScanner$WplHandler.getContentHandler()
ContentHandler android.sax.RootElement.getContentHandler()
ContentProviderClient com.android.gallery3d.picasasource.PicasaSource.getContentProvider()
ContentProviderClient com.android.gallery3d.picasasource.PicasaSource.getStoreProvider()
ContentProviderOperation$Builder android.content.ContentProviderOperation$Builder.withSelectionBackReference(int,int)
ContentProviderOperation$Builder android.content.ContentProviderOperation$Builder.withValue(String,Object)
ContentProviderOperation$Builder android.content.ContentProviderOperation$Builder.withValueBackReference(String,int)
ContentProviderOperation$Builder android.content.ContentProviderOperation$Builder.withValues(ContentValues)
ContentProviderRecord com.android.server.am.ProviderMap.getProviderByClass(ComponentName)
ContentProviderRecord com.android.server.am.ProviderMap.getProviderByClass(ComponentName,int)
ContentProviderRecord com.android.server.am.ProviderMap.getProviderByName(String)
ContentProviderRecord com.android.server.am.ProviderMap.getProviderByName(String,int)
ContentProviderResult[] com.android.exchange.adapter.AbstractSyncAdapter.safeExecute(String,ArrayList)
ContentResolver com.android.contacts.ContactsActivity.getContentResolver()
ContentResolver com.android.contacts.ContactsApplication.getContentResolver()
ContentResolver com.android.contacts.test.InjectedServices.getContentResolver()
ContentResolver com.android.gallery3d.picasasource.PicasaSource.getContentResolver()
ContentResolver$OpenResourceIdResult android.content.ContentResolver.getResourceId(Uri)
ContentRestriction com.android.mms.model.ContentRestrictionFactory.getContentRestriction()
ContentValues android.drm.DrmManagerClient.getConstraints(String,int)
ContentValues android.drm.DrmManagerClient.getConstraints(Uri,int)
ContentValues android.drm.DrmManagerClient.getMetadata(String)
ContentValues android.drm.DrmManagerClient.getMetadata(Uri)
ContentValues com.android.browser.SnapshotTab.createSnapshotValues()
ContentValues com.android.browser.provider.BrowserProvider2.extractImageValues(ContentValues,String)
ContentValues com.android.calendar.alerts.AlertUtils.makeContentValues(long,long,long,long,int)
ContentValues com.android.calendar.event.EditEventHelper.getContentValuesFromModel(CalendarEventModel)
ContentValues com.android.contacts.model.RawContact.getValues()
ContentValues com.android.contacts.model.RawContactDelta$ValuesDelta.getAfter()
ContentValues com.android.contacts.model.RawContactDelta$ValuesDelta.getCompleteValues()
ContentValues com.android.contacts.model.dataitem.DataItem.getContentValues()
ContentValues com.android.contacts.util.NameConverter.displayNameToStructuredName(Context,String,ContentValues)
ContentValues com.android.email.activity.setup.AccountSettingsUtils.getAccountContentValues(Account)
ContentValues com.android.providers.contacts.DataRowHandler.getAugmentedValues(SQLiteDatabase,long,ContentValues)
ContentValues com.google.android.apps.lightcycle.panorama.StitchingService.createImageContentValues(String)
Context android.app.ContextImpl.createPackageContextAsUser(String,int,UserHandle)
Context android.content.AbstractThreadedSyncAdapter.getContext()
Context android.content.ContextWrapper.createConfigurationContext(Configuration)
Context android.content.ContextWrapper.createDisplayContext(Display)
Context android.content.ContextWrapper.createPackageContextAsUser(String,int,UserHandle)
Context android.webkit.WebViewClassic$PrivateHandler.getContext()
Context android.webkit.WebViewClassic.getContext()
Context com.android.browser.Controller.getContext()
Context com.android.browser.DateSortedExpandableListAdapter.getContext()
Context com.android.browser.PreloadController.getContext()
Context com.android.common.widget.CompositeCursorAdapter.getContext()
Context com.android.contacts.detail.ContactDetailFragment.getContext()
Context com.android.contacts.list.ContactEntryListFragment.getContext()
Context com.android.contacts.model.RawContact.getContext()
Context com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.getDataSourceContext()
Context com.android.email.mail.store.ImapStore.getContext()
Context com.android.exchange.ExchangeService.getContext()
Context com.android.gallery3d.app.AbstractGalleryActivity.getAndroidContext()
Context com.android.inputmethod.latin.ExpandableDictionary.getContext()
Context com.android.internal.policy.impl.keyguard.KeyguardHostView$7.getContext()
Context com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3.getContext()
Context com.android.server.display.DisplayAdapter.getContext()
Context com.android.systemui.statusbar.tablet.TabletStatusBar.getContext()
Context com.google.android.gms.common.internal.GmsClient.getContext()
ContextMenu$ContextMenuInfo android.view.View.getContextMenuInfo()
ContextMenu$ContextMenuInfo android.widget.AbsListView.createContextMenuInfo(View,int,long)
ContextMenu$ContextMenuInfo android.widget.AbsListView.getContextMenuInfo()
ContextMenu$ContextMenuInfo android.widget.Gallery.getContextMenuInfo()
ContextMenu$ContextMenuInfo com.android.browser.view.BookmarkExpandableView.getContextMenuInfo()
ContextMenu$ContextMenuInfo com.android.contacts.detail.ActionsViewContainer.getContextMenuInfo()
ContextMenu$ContextMenuInfo com.android.internal.view.menu.ActionMenuItem.getMenuInfo()
ContextMenu$ContextMenuInfo com.android.internal.view.menu.MenuItemImpl.getMenuInfo()
ContextMenu$ContextMenuInfo com.android.mms.ui.RecipientsEditor.getContextMenuInfo()
ContextMenuAdapter com.android.contacts.list.ContactEntryListFragment.getContextMenuAdapter()
ControlPanelEffect$ControlMode com.android.musicfx.ControlPanelEffect.getControlMode(int)
ControlPoint com.android.gallery3d.filtershow.ui.Spline.getPoint(int)
Controller com.android.browser.BrowserActivity.getController()
Controller com.android.email.Controller.getInstance(Context)
Controller com.android.email.activity.MessageViewFragmentBase.getController()
Controller$Result com.android.email.ControllerResultUiThreadWrapper.getWrappee()
Controller$Result com.android.email.activity.MailboxFinder.getControllerResultsForTest()
Conversation com.android.mms.data.Conversation$Cache.get(ContactList)
Conversation com.android.mms.data.Conversation$Cache.get(long)
Conversation com.android.mms.data.Conversation.get(Context,ContactList,boolean)
Conversation com.android.mms.data.Conversation.get(Context,Uri,boolean)
Conversation com.android.mms.data.Conversation.get(Context,long,boolean)
Conversation com.android.mms.data.WorkingMessage.getConversation()
Conversation$Cache com.android.mms.data.Conversation$Cache.getInstance()
CookieAttributeHandler org.apache.http.impl.cookie.AbstractCookieSpec.findAttribHandler(String)
CookieAttributeHandler org.apache.http.impl.cookie.AbstractCookieSpec.getAttribHandler(String)
CookieManager android.webkit.WebViewClassic$Factory.getCookieManager()
CookieManagerClassic android.webkit.CookieManagerClassic.getInstance()
CookieSpec org.apache.http.cookie.CookieSpecRegistry.getCookieSpec(String)
CookieSpec org.apache.http.cookie.CookieSpecRegistry.getCookieSpec(String,HttpParams)
Country com.android.server.location.ComprehensiveCountryDetector.getLastKnownLocationBasedCountry()
Country com.android.server.location.ComprehensiveCountryDetector.getLocaleCountry()
Country com.android.server.location.ComprehensiveCountryDetector.getNetworkBasedCountry()
Country com.android.server.location.ComprehensiveCountryDetector.getSimBasedCountry()
Country com.android.server.location.LocationBasedCountryDetector.detectCountry()
Credentials org.apache.http.impl.client.BasicCredentialsProvider.getCredentials(AuthScope)
Cursor android.app.DownloadManager.query(DownloadManager$Query)
Cursor android.content.ContentProvider$Transport.query(Uri,String[],String,String[],String,ICancellationSignal)
Cursor android.content.ContentProvider.query(Uri,String[],String,String[],String,CancellationSignal)
Cursor android.content.ContentProviderClient.query(Uri,String[],String,String[],String,CancellationSignal)
Cursor android.content.ContentProviderProxy.query(Uri,String[],String,String[],String,ICancellationSignal)
Cursor android.content.ContentResolver.query(Uri,String[],String,String[],String,CancellationSignal)
Cursor android.content.CursorLoader.loadInBackground()
Cursor android.database.sqlite.SQLiteDatabase.query(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)
Cursor android.database.sqlite.SQLiteDatabase.queryWithFactory(SQLiteDatabase$CursorFactory,boolean,String,String[],String,String[],String,String,String,String)
Cursor android.database.sqlite.SQLiteDatabase.rawQuery(String,String[],CancellationSignal)
Cursor android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(SQLiteDatabase$CursorFactory,String,String[],String,CancellationSignal)
Cursor android.provider.CalendarContract$Attendees.query(ContentResolver,long,String[])
Cursor android.provider.CalendarContract$EventDays.query(ContentResolver,int,int,String[])
Cursor android.provider.CalendarContract$Instances.query(ContentResolver,String[],long,long)
Cursor android.provider.CalendarContract$Instances.query(ContentResolver,String[],long,long,String)
Cursor android.provider.CalendarContract$Reminders.query(ContentResolver,long,String[])
Cursor android.widget.CursorTreeAdapter$MyCursorHelper.getCursor()
Cursor android.widget.CursorTreeAdapter$MyCursorHelper.moveTo(int)
Cursor android.widget.CursorTreeAdapter.getChild(int,int)
Cursor android.widget.CursorTreeAdapter.getCursor()
Cursor android.widget.CursorTreeAdapter.getGroup(int)
Cursor android.widget.CursorTreeAdapter.runQueryOnBackgroundThread(CharSequence)
Cursor com.android.browser.AutoFillProfileDatabase.getProfile(int)
Cursor com.android.browser.BrowserHistoryPage$HistoryAdapter.getCursor(int)
Cursor com.android.browser.BrowserSnapshotPage$SnapshotAdapter.getItem(int)
Cursor com.android.browser.homepages.Template$CursorListEntityWrapper.getCursor()
Cursor com.android.browser.provider.BrowserProvider.query(Uri,String[],String,String[],String)
Cursor com.android.browser.provider.BrowserProvider2.query(Uri,String[],String,String[],String)
Cursor com.android.browser.provider.SnapshotProvider.query(Uri,String[],String,String[],String)
Cursor com.android.browser.search.DefaultSearchEngine.getSuggestions(Context,String)
Cursor com.android.browser.search.OpenSearchSearchEngine.getSuggestions(Context,String)
Cursor com.android.browser.util.ThreadedCursorAdapter.getItem(int)
Cursor com.android.calendar.EventInfoFragment.access$1802(EventInfoFragment,Cursor)
Cursor com.android.calendar.EventInfoFragment.access$2000(EventInfoFragment)
Cursor com.android.calendar.EventInfoFragment.access$2002(EventInfoFragment,Cursor)
Cursor com.android.calendar.EventInfoFragment.access$600(EventInfoFragment)
Cursor com.android.calendar.EventInfoFragment.access$602(EventInfoFragment,Cursor)
Cursor com.android.calendar.EventInfoFragment.access$900(EventInfoFragment)
Cursor com.android.calendar.EventInfoFragment.access$902(EventInfoFragment,Cursor)
Cursor com.android.calendar.alerts.AlertActivity.access$002(AlertActivity,Cursor)
Cursor com.android.calendar.alerts.AlertActivity.getItemForView(View)
Cursor com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.getChildrenCursor(Cursor)
Cursor com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment.access$102(SelectVisibleCalendarsFragment,Cursor)
Cursor com.android.common.widget.CompositeCursorAdapter.getCursor(int)
Cursor com.android.contacts.editor.ContactEditorFragment.access$1202(ContactEditorFragment,Cursor)
Cursor com.android.contacts.group.GroupBrowseListFragment.access$302(GroupBrowseListFragment,Cursor)
Cursor com.android.contacts.list.DirectoryListLoader.loadInBackground()
Cursor com.android.contacts.list.JoinContactLoader.loadInBackground()
Cursor com.android.contacts.list.ProfileAndContactsLoader.loadInBackground()
Cursor com.android.email.activity.AccountSelectorAdapter$AccountsLoader.loadInBackground()
Cursor com.android.email.activity.MailboxFragmentAdapter$CombinedMailboxLoader.loadInBackground()
Cursor com.android.email.activity.MailboxFragmentAdapter$MailboxFragmentLoader.loadInBackground()
Cursor com.android.email.activity.MailboxMoveToAdapter$MailboxMoveToLoader.loadInBackground()
Cursor com.android.email.activity.MessageOrderManager$LoadMessageListTask.doInBackground(Void[])
Cursor com.android.email.activity.MessageOrderManager.access$500(MessageOrderManager)
Cursor com.android.email.activity.MessagesAdapter$MessagesCursorLoader.loadInBackground()
Cursor com.android.email.activity.MessagesAdapter$MessagesCursorLoader.wrapCursor(Cursor,boolean,Account,Mailbox,boolean,boolean,int)
Cursor com.android.email.activity.MessagesAdapter$SearchCursorLoader.loadInBackground()
Cursor com.android.email.activity.MessagesAdapter$SearchCursorLoader.wrapCursor(Cursor,boolean,Account,Mailbox,boolean,boolean,int)
Cursor com.android.email.activity.ShortcutPickerFragment$AccountPickerLoader.loadInBackground()
Cursor com.android.email.activity.ShortcutPickerFragment$MailboxPickerLoader.loadInBackground()
Cursor com.android.email.provider.ContentCache.get(String)
Cursor com.android.email.provider.ContentCache.getCachedCursor(String,String[])
Cursor com.android.email.provider.EmailProvider.mostRecentMessageQuery(Uri)
Cursor com.android.email.provider.EmailProvider.notificationQuery(Uri)
Cursor com.android.email.provider.EmailProvider.query(Uri,String[],String,String[],String)
Cursor com.android.email.widget.EmailWidgetLoader.loadInBackground()
Cursor com.android.ex.chips.BaseRecipientAdapter.access$200(BaseRecipientAdapter,CharSequence,int,Long)
Cursor com.android.exchange.provider.ExchangeDirectoryProvider.buildGalResultCursor(String[],GalResult)
Cursor com.android.gallery3d.data.LocalAlbum.getItemCursor(ContentResolver,Uri,String[],int)
Cursor com.android.gallery3d.picasasource.BasePicasaAlbum.internalQuery(int,int)
Cursor com.android.gallery3d.picasasource.PicasaAlbum.internalQuery(int,int)
Cursor com.android.gallery3d.picasasource.PicasaPostAlbum.internalQuery(int,int)
Cursor com.android.gallery3d.picasasource.PicasaSource.query(Uri,String[],String,String[],String)
Cursor com.android.gallery3d.provider.GalleryProvider.query(Uri,String[],String,String[],String)
Cursor com.android.internal.telephony.IccProvider.query(Uri,String[],String,String[],String)
Cursor com.android.launcher2.LauncherProvider.query(Uri,String[],String,String[],String)
Cursor com.android.mms.ui.ManageSimMessages.access$100(ManageSimMessages)
Cursor com.android.mms.ui.ManageSimMessages.access$102(ManageSimMessages,Cursor)
Cursor com.android.mms.ui.MessageListAdapter.getCursorForItem(MessageItem)
Cursor com.android.mms.util.Recycler$MmsRecycler.getAllThreads(Context)
Cursor com.android.mms.util.Recycler$SmsRecycler.getAllThreads(Context)
Cursor com.android.providers.calendar.CalendarProvider2.query(Uri,String[],String,String[],String)
Cursor com.android.providers.contacts.ContactsProvider2.buildSingleRowResult(String[],String[],Object[])
Cursor com.android.providers.contacts.ContactsProvider2.query(Uri,String[],String,String[],String)
Cursor com.android.providers.contacts.ContactsProvider2.query(Uri,String[],String,String[],String,CancellationSignal)
Cursor com.android.providers.contacts.ContactsProvider2.queryLocal(Uri,String[],String,String[],String,long,CancellationSignal)
Cursor com.android.providers.contacts.GlobalSearchSupport.handleSearchShortcutRefresh(SQLiteDatabase,String[],String,String)
Cursor com.android.providers.contacts.GlobalSearchSupport.handleSearchSuggestionsQuery(SQLiteDatabase,Uri,String[],String)
Cursor com.android.providers.contacts.LegacyApiSupport.query(Uri,String[],String,String[],String,String)
Cursor com.android.providers.contacts.ProfileProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.contacts.ProfileProvider.query(Uri,String[],String,String[],String,CancellationSignal)
Cursor com.android.providers.contacts.VoicemailContentProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.contacts.VoicemailContentTable.query(VoicemailContentProvider$UriData,String[],String,String[],String)
Cursor com.android.providers.contacts.VoicemailStatusTable.query(VoicemailContentProvider$UriData,String[],String,String[],String)
Cursor com.android.providers.contacts.aggregation.ContactAggregator.queryAggregationSuggestions(SQLiteQueryBuilder,String[],long,int,String,ArrayList)
Cursor com.android.providers.downloads.DownloadProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.media.MediaProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.media.RingtonePickerActivity.access$200(RingtonePickerActivity)
Cursor com.android.providers.telephony.MmsProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.telephony.MmsSmsProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.telephony.SmsProvider.query(Uri,String[],String,String[],String)
Cursor com.android.providers.userdictionary.UserDictionaryProvider.query(Uri,String[],String,String[],String)
Cursor com.google.android.mms.pdu.PduPersister.getPendingMessages(long)
Cursor com.google.android.mms.util.SqliteWrapper.query(Context,ContentResolver,Uri,String[],String,String[],String)
CursorLoader com.android.contacts.interactions.PhoneNumberInteraction.getLoader()
CursorLoader com.android.contacts.list.ContactEntryListFragment.createCursorLoader()
CursorLoader com.android.deskclock.Alarms.getAlarmsCursorLoader(Context)
CursorTreeAdapter$MyCursorHelper android.widget.CursorTreeAdapter.getChildrenCursorHelper(int,boolean)
CursorWindow com.android.email.provider.ContentCache$CachedCursor.getWindow()
CustomContactListFilterActivity$AccountSet com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader.loadInBackground()
CustomContactListFilterActivity$GroupDelta com.android.contacts.list.CustomContactListFilterActivity$GroupDelta.fromSettings(ContentResolver,String,String,String,boolean)
DERApplicationSpecific com.android.org.bouncycastle.asn1.DERApplicationSpecific.getInstance(Object)
DERBMPString com.android.org.bouncycastle.asn1.DERBMPString.getInstance(ASN1TaggedObject,boolean)
DERBMPString com.android.org.bouncycastle.asn1.DERBMPString.getInstance(Object)
DERBitString com.android.org.bouncycastle.asn1.DERBitString.getInstance(ASN1TaggedObject,boolean)
DERBitString com.android.org.bouncycastle.asn1.DERBitString.getInstance(Object)
DERBitString com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getPublicKeyData()
DERBoolean com.android.org.bouncycastle.asn1.DERBoolean.getInstance(ASN1TaggedObject,boolean)
DERBoolean com.android.org.bouncycastle.asn1.DERBoolean.getInstance(byte[])
DEREnumerated com.android.org.bouncycastle.asn1.DEREnumerated.getInstance(ASN1TaggedObject,boolean)
DERGeneralString com.android.org.bouncycastle.asn1.DERGeneralString.getInstance(ASN1TaggedObject,boolean)
DERGeneralString com.android.org.bouncycastle.asn1.DERGeneralString.getInstance(Object)
DERIA5String com.android.org.bouncycastle.asn1.DERIA5String.getInstance(ASN1TaggedObject,boolean)
DERIA5String com.android.org.bouncycastle.asn1.DERIA5String.getInstance(Object)
DERNumericString com.android.org.bouncycastle.asn1.DERNumericString.getInstance(ASN1TaggedObject,boolean)
DERNumericString com.android.org.bouncycastle.asn1.DERNumericString.getInstance(Object)
DERPrintableString com.android.org.bouncycastle.asn1.DERPrintableString.getInstance(ASN1TaggedObject,boolean)
DERPrintableString com.android.org.bouncycastle.asn1.DERPrintableString.getInstance(Object)
DERT61String com.android.org.bouncycastle.asn1.DERT61String.getInstance(ASN1TaggedObject,boolean)
DERT61String com.android.org.bouncycastle.asn1.DERT61String.getInstance(Object)
DERUTF8String com.android.org.bouncycastle.asn1.DERUTF8String.getInstance(ASN1TaggedObject,boolean)
DERUTF8String com.android.org.bouncycastle.asn1.DERUTF8String.getInstance(Object)
DERUniversalString com.android.org.bouncycastle.asn1.DERUniversalString.getInstance(ASN1TaggedObject,boolean)
DERUniversalString com.android.org.bouncycastle.asn1.DERUniversalString.getInstance(Object)
DERVisibleString com.android.org.bouncycastle.asn1.DERVisibleString.getInstance(ASN1TaggedObject,boolean)
DERVisibleString com.android.org.bouncycastle.asn1.DERVisibleString.getInstance(Object)
DOMConfiguration com.android.mms.dom.DocumentImpl.getDomConfig()
DOMImplementation com.android.mms.dom.DocumentImpl.getImplementation()
DSAParams org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getParams()
DataCallState$SetupResult com.android.internal.telephony.DataCallState.setLinkProperties(LinkProperties,boolean)
DataConnection$UpdateLinkPropertyResult com.android.internal.telephony.DataConnection.access$500(DataConnection,DataCallState)
DataConnection$UpdateLinkPropertyResult com.android.internal.telephony.DataConnectionAc.updateLinkPropertiesDataCallStateSync(DataCallState)
DataController com.android.browser.DataController.getInstance(Context)
DataKind com.android.contacts.editor.KindSectionView.getKind()
DataKind com.android.contacts.editor.LabeledEditorView.getKind()
DataKind com.android.contacts.model.AccountTypeManager.getKindOrFallback(String,String,String)
DataKind com.android.contacts.model.AccountTypeManagerImpl.getKindOrFallback(String,String,String)
DataKind com.android.contacts.model.account.AccountType.addKind(DataKind)
DataKind com.android.contacts.model.account.AccountType.getKindForMimetype(String)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindDisplayName(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindEmail(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindGroupMembership(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindIm(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindNickname(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindNote(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindOrganization(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindPhone(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindPhoneticName(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindPhoto(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindSipAddress(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindStructuredName(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindStructuredPostal(Context)
DataKind com.android.contacts.model.account.BaseAccountType.addDataKindWebsite(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindDisplayName(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindEmail(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindEvent(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindIm(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindNickname(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindNote(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindOrganization(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindPhone(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindPhoneticName(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindPhoto(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindStructuredName(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindStructuredPostal(Context)
DataKind com.android.contacts.model.account.ExchangeAccountType.addDataKindWebsite(Context)
DataKind com.android.contacts.model.account.GoogleAccountType.addDataKindEmail(Context)
DataKind com.android.contacts.model.account.GoogleAccountType.addDataKindPhone(Context)
DataKind com.android.contacts.model.dataitem.DataItem.getDataKind()
DataManager com.android.gallery3d.app.AbstractGalleryActivity.getDataManager()
DataRowHandler com.android.providers.contacts.ContactsProvider2.getDataRowHandler(String)
DataRowHandler com.android.providers.contacts.ContactsProvider2.getDataRowHandlerForProfile(String)
Date android.media.Metadata.getDate(int)
Date com.android.email.mail.store.imap.ImapString.getDateOrNull()
Date com.android.emailcommon.internet.MimeMessage.getSentDate()
Date com.android.org.bouncycastle.asn1.DERGeneralizedTime.getDate()
Date com.android.org.bouncycastle.asn1.DERUTCTime.getAdjustedDate()
Date com.android.org.bouncycastle.asn1.DERUTCTime.getDate()
Date com.googlecode.mp4parser.authoring.TrackMetaData.getCreationTime()
Date java.security.cert.PKIXParameters.getDate()
Date org.apache.james.mime4j.field.DateTimeField.getDate()
Date org.apache.james.mime4j.field.datetime.DateTime.getDate()
DctConstants$Activity com.android.internal.telephony.DataConnectionTracker.getActivity()
DctConstants$State com.android.internal.telephony.ApnContext.getState()
DctConstants$State com.android.internal.telephony.cdma.CdmaDataConnectionTracker.getOverallState()
DctConstants$State com.android.internal.telephony.cdma.CdmaDataConnectionTracker.getState(String)
DctConstants$State com.android.internal.telephony.gsm.GsmDataConnectionTracker.getOverallState()
DctConstants$State com.android.internal.telephony.gsm.GsmDataConnectionTracker.getState(String)
Debug$MemoryInfo android.app.ActivityThread$ApplicationThread.dumpMemInfo(FileDescriptor,boolean,boolean,String[])
Debug$MemoryInfo android.app.ApplicationThreadProxy.dumpMemInfo(FileDescriptor,boolean,boolean,String[])
Debug$MemoryInfo[] android.app.ActivityManager.getProcessMemoryInfo(int[])
Debug$MemoryInfo[] android.app.ActivityManagerProxy.getProcessMemoryInfo(int[])
Debug$MemoryInfo[] com.android.server.am.ActivityManagerService.getProcessMemoryInfo(int[])
DefaultCallLogInsertionHelper com.android.providers.contacts.DefaultCallLogInsertionHelper.getInstance(Context)
DefaultVoicemailNotifier com.android.contacts.calllog.DefaultVoicemailNotifier.getInstance(Context)
DeleteMessageConfirmationDialog com.android.email.activity.DeleteMessageConfirmationDialog.newInstance(int,Fragment)
DeviceAccountLogin com.android.browser.Tab.getDeviceAccountLogin()
DeviceAdminInfo com.android.server.DevicePolicyManagerService.findAdmin(ComponentName,int)
DeviceHost$LlcpConnectionlessSocket com.android.nfc.NfcService.createLlcpConnectionLessSocket(int,String)
DeviceHost$LlcpConnectionlessSocket com.android.nfc.dhimpl.NativeNfcManager.createLlcpConnectionlessSocket(int,String)
DeviceHost$LlcpServerSocket com.android.nfc.NfcService.createLlcpServerSocket(int,String,int,int,int)
DeviceHost$LlcpServerSocket com.android.nfc.dhimpl.NativeNfcManager.createLlcpServerSocket(int,String,int,int,int)
DeviceHost$LlcpSocket com.android.nfc.NfcService.createLlcpSocket(int,int,int,int)
DeviceHost$LlcpSocket com.android.nfc.dhimpl.NativeNfcManager.createLlcpSocket(int,int,int,int)
DeviceOrientationDetector$DeviceOrientation com.google.android.apps.lightcycle.sensor.DeviceOrientationDetector.getOrientation()
DevicePolicyManager com.android.email.SecurityPolicy.getDPM()
DevicePolicyManager com.android.internal.widget.LockPatternUtils.getDevicePolicyManager()
DevicePolicyManagerService$ActiveAdmin com.android.server.DevicePolicyManagerService.getActiveAdminForCallerLocked(ComponentName,int)
DevicePolicyManagerService$ActiveAdmin com.android.server.DevicePolicyManagerService.getActiveAdminUncheckedLocked(ComponentName,int)
DevicePolicyManagerService$DevicePolicyData com.android.server.DevicePolicyManagerService.getUserData(int)
DhcpInfo com.android.server.WifiService.getDhcpInfo()
DhcpInfoInternal android.net.wifi.WifiConfigStore.getIpConfiguration(int)
Dialog com.android.contacts.activities.NonPhoneActivity$NonPhoneDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.activities.ShowOrCreateActivity.onCreateDialog(int)
Dialog com.android.contacts.calllog.ClearCallLogDialog.onCreateDialog(Bundle)
Dialog com.android.contacts.dialog.ClearFrequentsDialog.onCreateDialog(Bundle)
Dialog com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.editor.ContactEditorFragment$CancelEditDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.editor.ContactEditorFragment$SuggestionEditConfirmationDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.editor.EventFieldEditorView.createDialog(Bundle)
Dialog com.android.contacts.editor.LabeledEditorView.createDialog(Bundle)
Dialog com.android.contacts.editor.SelectAccountDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.editor.SplitContactConfirmationDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.group.GroupEditorFragment$CancelEditDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.interactions.GroupDeletionDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.interactions.GroupNameDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.interactions.ImportExportDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment.onCreateDialog(Bundle)
Dialog com.android.contacts.util.AccountSelectionUtil.getSelectAccountDialog(Context,int,DialogInterface$OnClickListener,DialogInterface$OnCancelListener)
Dialog com.android.contacts.util.DialogManager.onCreateDialog(int,Bundle)
Dialog com.android.contacts.vcard.CancelActivity.onCreateDialog(int,Bundle)
Dialog com.android.contacts.vcard.ExportVCardActivity.onCreateDialog(int,Bundle)
Dialog com.android.contacts.vcard.ImportVCardActivity.onCreateDialog(int,Bundle)
Dialog com.android.email.activity.DeleteMessageConfirmationDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.InsertQuickResponseDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.MoveMessageToDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountCheckSettingsFragment$ErrorDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountCheckSettingsFragment$SecurityRequiredDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountSecurity$PasswordExpirationDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountSecurity$SecurityNeededDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountSettings$LoginWarningDialog.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountSettingsFragment$DeleteAccountFragment.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.AccountSetupBasics$NoteDialogFragment.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.DuplicateAccountDialogFragment.onCreateDialog(Bundle)
Dialog com.android.email.activity.setup.EditQuickResponseDialog.onCreateDialog(Bundle)
Dialog com.android.gallery3d.picasasource.PicasaSource.getVersionCheckDialog(Activity)
Dialog com.android.gallery3d.picasasource.PicasaSource.getVersionCheckDialog(Activity,int)
Dialog com.android.mms.ui.MessagingPreferenceActivity.onCreateDialog(int)
Dialog com.android.phone.CallFeaturesSetting.onCreateDialog(int)
Dialog com.android.phone.EmergencyDialer.onCreateDialog(int)
Dialog com.android.phone.OutgoingCallBroadcaster.onCreateDialog(int)
Dialog com.android.phone.PhoneUtils.displayMMIInitiate(Context,MmiCode,Message,Dialog)
Dialog com.android.phone.SipCallOptionHandler.onCreateDialog(int)
Dialog com.android.systemui.usb.UsbStorageActivity.onCreateDialog(int,Bundle)
Dialog com.android.videoeditor.ExportOptionsDialog.create(Context,ExportOptionsDialog$ExportOptionsListener,DialogInterface$OnClickListener,DialogInterface$OnCancelListener,int)
Dialog com.android.videoeditor.ProjectsActivity.onCreateDialog(int,Bundle)
Dialog com.android.videoeditor.VideoEditorActivity.onCreateDialog(int,Bundle)
Dialog com.android.videoeditor.widgets.AudioTrackLinearLayout.onCreateDialog(int,Bundle)
Dialog com.android.videoeditor.widgets.MediaLinearLayout.onCreateDialog(int,Bundle)
Dialog com.android.videoeditor.widgets.OverlayLinearLayout.onCreateDialog(int,Bundle)
DialogInterface$OnDismissListener com.android.calendar.EventInfoFragment.access$3400(EventInfoFragment)
DialogManager com.android.contacts.activities.ConfirmAddDetailActivity.getDialogManager()
DialogManager com.android.contacts.activities.ContactEditorActivity.getDialogManager()
DialogManager com.android.contacts.activities.GroupEditorActivity.getDialogManager()
DialogManager com.android.contacts.activities.PeopleActivity.getDialogManager()
DialogTimeoutEvent$Reason gov.nist.javax.sip.DialogTimeoutEvent.getReason()
DialpadFragment$ErrorDialogFragment com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment.newInstance(int,int)
DictAndProximity com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService.createDictAndProximity(Locale)
DictAndProximity com.android.inputmethod.latin.spellcheck.DictionaryPool.poll(long,TimeUnit)
Dictionary com.android.inputmethod.latin.Suggest.getMainDictionary()
DictionaryCollection com.android.inputmethod.latin.DictionaryFactory.createMainDictionaryFromManager(Context,Locale)
DictionaryPool com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService.getDictionaryPool(String)
DirectoryPartition com.android.contacts.list.ContactEntryListAdapter.createDefaultDirectoryPartition()
Display android.hardware.display.DisplayManager.getDisplay(int)
Display android.hardware.display.DisplayManagerGlobal.getCompatibleDisplay(int,CompatibilityInfoHolder)
Display android.hardware.display.DisplayManagerGlobal.getRealDisplay(int)
Display android.media.MediaRouter$RouteInfo.getPresentationDisplay()
Display android.view.View.getDisplay()
Display com.android.server.accessibility.ScreenMagnifier$DisplayProvider.getDisplay()
Display com.android.server.wm.DisplayContent.getDisplay()
DisplayAdapter com.android.server.display.DisplayDevice.getAdapterLocked()
DisplayContent com.android.server.wm.WindowManagerService.getDefaultDisplayContentLocked()
DisplayContent com.android.server.wm.WindowManagerService.getDisplayContentLocked(int)
DisplayDevice com.android.server.display.LogicalDisplay.getPrimaryDisplayDeviceLocked()
DisplayDeviceInfo com.android.server.display.HeadlessDisplayAdapter$HeadlessDisplayDevice.getDisplayDeviceInfoLocked()
DisplayDeviceInfo com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice.getDisplayDeviceInfoLocked()
DisplayDeviceInfo com.android.server.display.OverlayDisplayAdapter$OverlayDisplayDevice.getDisplayDeviceInfoLocked()
DisplayDeviceInfo com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice.getDisplayDeviceInfoLocked()
DisplayInfo android.hardware.display.DisplayManagerGlobal.getDisplayInfo(int)
DisplayInfo android.hardware.display.IDisplayManager$Stub$Proxy.getDisplayInfo(int)
DisplayInfo com.android.server.accessibility.ScreenMagnifier$DisplayProvider.getDisplayInfo()
DisplayInfo com.android.server.display.DisplayManagerService.getDisplayInfo(int)
DisplayInfo com.android.server.display.LogicalDisplay.getDisplayInfoLocked()
DisplayInfo com.android.server.wm.DisplayContent.getDisplayInfo()
DisplayInfo com.android.server.wm.WindowManagerService.getDefaultDisplayInfoLocked()
DisplayList android.view.HardwareLayer.getDisplayList()
DisplayManagerGlobal android.hardware.display.DisplayManagerGlobal.getInstance()
DisplayManagerService$SyncRoot com.android.server.display.DisplayAdapter.getSyncRoot()
DisplayMetrics android.app.ActivityThread.getDisplayMetricsLocked(int,CompatibilityInfo)
Display[] android.hardware.display.DisplayManager.getDisplays()
Display[] android.hardware.display.DisplayManager.getDisplays(String)
Display[] android.media.MediaRouter$Static.getAllPresentationDisplays()
DnsSdTxtRecord android.net.nsd.NsdServiceInfo.getTxtRecord()
Document com.android.mms.dom.NodeImpl.getOwnerDocument()
DocumentFragment com.android.mms.dom.DocumentImpl.createDocumentFragment()
DocumentType com.android.mms.dom.DocumentImpl.getDoctype()
DomainList org.apache.james.mime4j.field.address.Mailbox.getRoute()
Double com.android.exchange.Eas.getProtocolVersionDouble(String)
DownloadCache$Entry com.android.gallery3d.data.DownloadCache$TaskProxy.get(ThreadPool$JobContext)
DownloadCache$Entry com.android.gallery3d.data.DownloadCache.download(ThreadPool$JobContext,URL)
DownloadHandler com.android.providers.downloads.DownloadHandler.getInstance()
DownloadInfo com.android.providers.downloads.DownloadInfo$Reader.newDownloadInfo(Context,SystemFacade)
DownloadManager com.android.mms.util.DownloadManager.access$000()
DownloadManager com.android.mms.util.DownloadManager.getInstance()
DownloadManager$Query android.app.DownloadManager$Query.setFilterByStatus(int)
DownloadManager$Request android.app.DownloadManager$Request.addRequestHeader(String,String)
DownloadManager$Request android.app.DownloadManager$Request.setDestinationInExternalFilesDir(Context,String,String)
DownloadManager$Request android.app.DownloadManager$Request.setDestinationInExternalPublicDir(String,String)
DownloadManager$Request android.app.DownloadManager$Request.setShowRunningNotification(boolean)
DraftCache com.android.mms.util.DraftCache.getInstance()
DragController com.android.launcher2.Launcher.getDragController()
DragLayer com.android.launcher2.Launcher.getDragLayer()
Drawable android.media.MediaRouter$RouteInfo.getIconDrawable()
Drawable android.widget.AbsSeekBar.getThumb()
Drawable android.widget.CalendarView.getSelectedDateVerticalBar()
Drawable android.widget.CheckedTextView.getCheckMarkDrawable()
Drawable android.widget.LinearLayout.getDividerDrawable()
Drawable android.widget.Spinner$DialogPopup.getBackground()
Drawable android.widget.Spinner.getPopupBackground()
Drawable android.widget.Switch.getThumbDrawable()
Drawable android.widget.Switch.getTrackDrawable()
Drawable com.android.browser.BaseUi.getFaviconDrawable(Bitmap)
Drawable com.android.browser.BookmarkUtils.createListFaviconBackground(Context)
Drawable com.android.browser.XLargeUi.getFaviconDrawable(Bitmap)
Drawable com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.getBackground(int,boolean)
Drawable com.android.contacts.ContactPresenceIconUtil.getPresenceIcon(Context,int)
Drawable com.android.contacts.detail.ContactDetailDisplayUtils$DefaultImageGetter.getDrawable(String)
Drawable com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry.getIcon()
Drawable com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry.getIcon()
Drawable com.android.contacts.model.account.AccountType.getDisplayIcon(Context)
Drawable com.android.contacts.quickcontact.DataAction.getAlternateIcon()
Drawable com.android.contacts.quickcontact.ResolveCache.getIcon(Action)
Drawable com.android.email.FolderProperties.getIcon(int,long,int)
Drawable com.android.ex.chips.RecipientEditTextView.getChipBackground(RecipientEntry)
Drawable com.android.inputmethod.keyboard.Key.getIcon(KeyboardIconsSet,int)
Drawable com.android.inputmethod.keyboard.Key.getPreviewIcon(KeyboardIconsSet)
Drawable com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeyDivider.getIcon(KeyboardIconsSet,int)
Drawable com.android.inputmethod.keyboard.internal.KeyboardIconsSet.getIconDrawable(int)
Drawable com.android.inputmethod.latin.suggestions.MoreSuggestions$Divider.getIcon(KeyboardIconsSet,int)
Drawable com.android.internal.app.ResolverActivity.getIcon(Resources,int)
Drawable com.android.internal.app.ResolverActivity.loadIconForResolveInfo(ResolveInfo)
Drawable com.android.internal.policy.impl.IconUtilities.createIconDrawable(Drawable)
Drawable com.android.launcher2.ButtonDropTarget.getCurrentDrawable()
Drawable com.android.launcher2.IconCache.getFullResDefaultActivityIcon()
Drawable com.android.launcher2.IconCache.getFullResIcon(ActivityInfo)
Drawable com.android.launcher2.IconCache.getFullResIcon(ResolveInfo)
Drawable com.android.launcher2.IconCache.getFullResIcon(Resources,int)
Drawable com.android.launcher2.IconCache.getFullResIcon(String,int)
Drawable com.android.mms.data.Contact.getAvatar(Context,Drawable)
Drawable com.android.musicfx.seekbar.ProgressBar.getCurrentDrawable()
Drawable com.android.musicfx.seekbar.ProgressBar.getProgressDrawable()
Drawable com.android.phone.PhoneUtils.getProviderIcon(Context,Intent)
Drawable com.android.systemui.recent.RecentTasksLoader.getFullResDefaultActivityIcon()
Drawable com.android.systemui.recent.RecentTasksLoader.getFullResIcon(Resources,int)
Drawable com.android.systemui.recent.TaskDescription.getIcon()
Drawable com.android.systemui.statusbar.StatusBarIconView.getIcon(Context,StatusBarIcon)
Drawable$Callback android.graphics.drawable.Drawable.getCallback()
Drawable$ConstantState android.graphics.drawable.AnimatedRotateDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.BitmapDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.ClipDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.ColorDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.Drawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.DrawableContainer.getConstantState()
Drawable$ConstantState android.graphics.drawable.GradientDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.InsetDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.LayerDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.NinePatchDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.RotateDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.ScaleDrawable.getConstantState()
Drawable$ConstantState android.graphics.drawable.ShapeDrawable.getConstantState()
DrmManagerClient com.android.mms.MmsApp.getDrmManagerClient()
DrmUtils$ExtendedMetadataParser android.drm.DrmUtils.getExtendedMetadataParser(byte[])
DropBox$Reporter libcore.io.DropBox.getReporter()
DropBoxManager$Entry android.os.DropBoxManager.getNextEntry(String,long)
DropBoxManager$Entry com.android.internal.os.IDropBoxManagerService$Stub$Proxy.getNextEntry(String,long)
DropBoxManager$Entry com.android.server.DropBoxManagerService.getNextEntry(String,long)
DropTarget com.android.launcher2.ButtonDropTarget.getDropTargetDelegate(DropTarget$DragObject)
DropTarget com.android.launcher2.Folder.getDropTargetDelegate(DropTarget$DragObject)
DropTarget com.android.launcher2.Workspace.getDropTargetDelegate(DropTarget$DragObject)
DuplicateAccountDialogFragment com.android.email.activity.setup.DuplicateAccountDialogFragment.newInstance(String)
ECField java.security.spec.EllipticCurve.getField()
ECPoint java.security.spec.ECParameterSpec.getGenerator()
EasResponse com.android.exchange.EasAccountService.sendPing(byte[],int)
EasResponse com.android.exchange.EasSyncService.sendHttpClientOptions()
EasResponse com.android.exchange.EasSyncService.sendHttpClientPost(String,HttpEntity,int)
EasResponse com.android.exchange.EasSyncService.sendHttpClientPost(String,byte[])
EasResponse com.android.exchange.EasSyncService.sendPing(byte[],int)
EasSyncService com.android.exchange.EasSyncService.getServiceForMailbox(Context,Mailbox)
EasSyncService com.android.exchange.EasSyncService.setupServiceForAccount(Context,Account)
EditQuickResponseDialog com.android.email.activity.setup.EditQuickResponseDialog.newInstance(QuickResponse,long)
EditText com.android.contacts.SpecialCharSequenceMgr$SimContactQueryCookie.getTextField()
Editable$Factory android.text.Editable$Factory.getInstance()
Editor$ActionPopupWindow android.widget.Editor$SelectionStartHandleView.getActionPopupWindow()
Editor$InsertionPointCursorController android.widget.Editor.getInsertionController()
Editor$SelectionModifierCursorController android.widget.Editor.getSelectionController()
EditorAnimator com.android.contacts.editor.EditorAnimator.getInstance()
Effect android.media.videoeditor.MediaItem.getEffect(String)
EffectFactory android.media.effect.EffectContext.getFactory()
Element android.renderscript.Allocation.getElement()
Element android.renderscript.ProgramVertex.getInput(int)
Element android.renderscript.Script$FieldBase.getElement()
Element android.sax.Children.get(String,String)
Element android.sax.Children.getOrCreate(Element,String,String)
Element android.sax.Element.getChild(String)
Element android.sax.Element.getChild(String,String)
Element com.android.mms.dom.AttrImpl.getOwnerElement()
Element com.android.mms.dom.DocumentImpl.getElementById(String)
Element com.android.mms.dom.smil.SmilDocumentImpl.getDocumentElement()
Element com.android.wallpaper.fall.ScriptField_Constants.createElement(RenderScript)
Element com.android.wallpaper.galaxy.ScriptField_Particle.createElement(RenderScript)
Element com.android.wallpaper.galaxy.ScriptField_VpConsts.createElement(RenderScript)
Element com.android.wallpaper.grass.ScriptField_Blade.createElement(RenderScript)
Element com.android.wallpaper.grass.ScriptField_Vertex.createElement(RenderScript)
Element$DataKind android.renderscript.Element.getDataKind()
Element$DataType android.renderscript.Element.getDataType()
ElementTime com.android.mms.dom.smil.SmilDocumentImpl$1.getParentElementTime()
ElementTime com.android.mms.dom.smil.SmilMediaElementImpl$1.getParentElementTime()
ElementTime com.android.mms.dom.smil.SmilParElementImpl$1.getParentElementTime()
ElementTime com.android.mms.dom.smil.SmilPlayer$TimelineEntry.getElement()
EllipticCurve java.security.spec.ECParameterSpec.getCurve()
EmailAsyncTask com.android.email.Controller.setMessageFavorite(long,boolean)
EmailAsyncTask com.android.email.Controller.setMessageRead(long,boolean)
EmailAsyncTask com.android.email.activity.RecentMailboxManager.touch(long,long)
EmailClientConnectionManager com.android.exchange.ExchangeService.getClientConnectionManager(boolean,int)
EmailContent com.android.emailcommon.provider.EmailContent.getContent(Cursor,Class)
EmailContent com.android.emailcommon.provider.EmailContent.restoreContentWithId(Context,Class,Uri,String[],long)
EmailContent$Attachment com.android.emailcommon.provider.EmailContent$Attachment.restoreAttachmentWithId(Context,long)
EmailContent$Attachment[] com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask.doInBackground(Long[])
EmailContent$Attachment[] com.android.emailcommon.provider.EmailContent$Attachment.restoreAttachmentsWithMessageId(Context,long)
EmailContent$Body com.android.emailcommon.provider.EmailContent$Body.restoreBodyWithMessageId(Context,long)
EmailContent$Message com.android.email.activity.MessageViewFragment.openMessageSync(Activity)
EmailContent$Message com.android.email.activity.MessageViewFragmentBase.getMessage()
EmailContent$Message com.android.email.activity.MessageViewFragmentBase.reloadMessageSync(Activity)
EmailContent$Message com.android.emailcommon.provider.EmailContent$Message.restoreMessageWithId(Context,long)
EmailContent$Message com.android.exchange.utility.CalendarUtilities.createMessageForEntity(Context,Entity,int,String,Account)
EmailContent$Message com.android.exchange.utility.CalendarUtilities.createMessageForEntity(Context,Entity,int,String,Account,String)
EmailContent$Message com.android.exchange.utility.CalendarUtilities.createMessageForEventId(Context,long,int,String,Account)
EmailContent$Message com.android.exchange.utility.CalendarUtilities.createMessageForEventId(Context,long,int,String,Account,String)
EmailWidget com.android.email.widget.WidgetManager.getOrCreateWidget(Context,int)
EmergencyCallbackModeService com.android.phone.EmergencyCallbackModeService$LocalBinder.getService()
EncodedStringValue com.google.android.mms.pdu.GenericPdu.getFrom()
EncodedStringValue com.google.android.mms.pdu.MultimediaMessagePdu.getSubject()
EncodedStringValue com.google.android.mms.pdu.NotificationInd.getFrom()
EncodedStringValue com.google.android.mms.pdu.NotificationInd.getSubject()
EncodedStringValue com.google.android.mms.pdu.PduHeaders.getEncodedStringValue(int)
EncodedStringValue com.google.android.mms.pdu.ReadOrigInd.getFrom()
EncodedStringValue com.google.android.mms.pdu.RetrieveConf.getFrom()
EncodedStringValue com.google.android.mms.pdu.RetrieveConf.getRetrieveText()
EncodedStringValue[] com.google.android.mms.pdu.DeliveryInd.getTo()
EncodedStringValue[] com.google.android.mms.pdu.MultimediaMessagePdu.getTo()
EncodedStringValue[] com.google.android.mms.pdu.PduHeaders.getEncodedStringValues(int)
EncodedStringValue[] com.google.android.mms.pdu.ReadOrigInd.getTo()
EncodedStringValue[] com.google.android.mms.pdu.ReadRecInd.getTo()
EncodedStringValue[] com.google.android.mms.pdu.RetrieveConf.getCc()
EncodedStringValue[] com.google.android.mms.pdu.SendReq.getBcc()
EncodedStringValue[] com.google.android.mms.pdu.SendReq.getCc()
Engine$SpiAndProvider org.apache.harmony.security.fortress.Engine.getInstance(String,Object)
Entity android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl.getEntityAndIncrementCursor(Cursor)
Entity android.provider.CalendarContract$EventsEntity$EntityIteratorImpl.getEntityAndIncrementCursor(Cursor)
Entry com.android.gallery3d.common.EntrySchema.valuesToObject(ContentValues,Entry)
EntrySchema$ColumnInfo com.android.gallery3d.common.EntrySchema.getColumn(String)
Enum java.util.EnumMap$Entry.getKey()
Enum java.util.EnumMap$EnumMapKeySet$1.get(MapEntry)
EnumSet java.util.EnumSet.range(Enum,Enum)
Enum[] java.lang.Enum.getSharedConstants(Class)
Enumeration com.android.org.bouncycastle.asn1.ASN1Sequence.getObjects()
Enumeration com.android.org.bouncycastle.asn1.ASN1Set.getObjects()
Enumeration com.android.org.bouncycastle.asn1.BEROctetString.getObjects()
Enumeration com.android.org.bouncycastle.asn1.LazyEncodedSequence.getObjects()
Equalizer$Settings android.media.audiofx.Equalizer.getProperties()
Equivalence com.google.common.collect.MapMaker.getKeyEquivalence()
Equivalence com.google.common.collect.MapMaker.getValueEquivalence()
ErrorConsoleView com.android.browser.Tab.getErrorConsole(boolean)
EthernetDataTracker android.net.EthernetDataTracker.getInstance()
EventLogger$Reporter libcore.io.EventLogger.getReporter()
Exception android.accounts.AccountManager.access$400(AccountManager,int,String)
Exception android.filterfw.core.AsyncRunner.getError()
Exception android.filterfw.core.SyncRunner.getError()
Exception com.android.contacts.model.Contact.getException()
ExchangeService$AccountList com.android.exchange.ExchangeService.access$600(Context,ExchangeService$AccountList)
ExifData com.android.gallery3d.exif.ExifReader.read(InputStream)
ExifTag com.android.gallery3d.exif.ExifData.addTag(short)
ExifTag com.android.gallery3d.exif.ExifParser.getTag()
ExifTag com.android.gallery3d.exif.IfdData.getTag(short)
ExifTag[] com.android.gallery3d.exif.IfdData.getAllTags()
ExpandableDictionary$NextWord com.android.inputmethod.latin.ExpandableDictionary.getBigramWord(String,String)
ExpandableDictionary$Node com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord.getWordNode()
ExpandableDictionary$Node com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord.getWordNode()
ExpandableListConnector$PositionMetadata android.widget.ExpandableListConnector.getFlattenedPos(ExpandableListPosition)
ExpandableListConnector$PositionMetadata android.widget.ExpandableListConnector.getUnflattenedPos(int)
ExpirableCache com.android.contacts.util.ExpirableCache.create(int)
ExpirableCache$CachedValue com.android.contacts.util.ExpirableCache.getCachedValue(Object)
ExportRequest com.android.contacts.vcard.ExportProcessor.getRequest()
Face[] com.android.gallery3d.data.MediaItem.getFaces()
Face[] com.android.gallery3d.picasasource.PicasaImage.getFaces()
FeatureInfo[] com.android.server.pm.PackageManagerService.getSystemAvailableFeatures()
Field com.android.inputmethod.compat.CompatUtils.getField(Class,String)
Field org.apache.james.mime4j.field.ContentTypeField$Parser.parse(String,String,String)
FieldParser org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)
File android.os.Environment$UserEnvironment.getExternalStorageAndroidDataDir()
File android.os.Environment$UserEnvironment.getExternalStorageAppCacheDirectory(String)
File android.os.Environment$UserEnvironment.getExternalStorageAppDataDirectory(String)
File android.os.Environment$UserEnvironment.getExternalStorageAppFilesDirectory(String)
File android.os.Environment$UserEnvironment.getExternalStorageAppMediaDirectory(String)
File android.os.Environment$UserEnvironment.getExternalStorageAppObbDirectory(String)
File android.os.Environment$UserEnvironment.getExternalStorageDirectory()
File android.os.Environment$UserEnvironment.getExternalStorageObbDirectory()
File android.os.Environment$UserEnvironment.getExternalStoragePublicDirectory(String)
File android.os.Environment$UserEnvironment.getMediaStorageDirectory()
File android.os.Environment.getEmulatedStorageObbSource()
File android.os.Environment.getEmulatedStorageSource(int)
File android.os.Environment.getLegacyExternalStorageDirectory()
File android.os.Environment.getLegacyExternalStorageObbDirectory()
File android.os.Environment.getMediaStorageDirectory()
File android.os.Environment.getUserSystemDirectory(int)
File android.os.storage.StorageVolume.getPathFile()
File android.util.AtomicFile.getBaseFile()
File android.webkit.CacheManager.access$000()
File com.android.browser.provider.SnapshotProvider.getOldDatabasePath(Context)
File com.android.emailcommon.TempDirectory.getTempDirectory()
File com.android.emailcommon.utility.AttachmentUtilities.getAttachmentDirectory(Context,long)
File com.android.emailcommon.utility.AttachmentUtilities.getAttachmentFilename(Context,long,long)
File com.android.gallery3d.filtershow.tools.SaveCopyTask.getFinalSaveDirectory(Context,Uri)
File com.android.gallery3d.filtershow.tools.SaveCopyTask.getNewFile(Context,Uri)
File com.android.providers.downloads.StorageManager.getDownloadDataDirectory()
File com.android.server.AppWidgetServiceImpl.getSettingsFile(int)
File com.android.server.am.ActivityManagerService.dumpStackTraces(boolean,ArrayList,ProcessStats,SparseArray,String[])
File com.android.server.pm.PackageManagerService.access$2200(PackageManagerService,File)
File com.android.server.pm.PackageManagerService.getDataPathForUser(int)
File com.android.videoeditor.util.FileUtils.getProjectsRootDir(Context)
File com.google.android.apps.lightcycle.storage.LocalFileStorageManager.getPanoDirectory()
File com.google.android.apps.lightcycle.storage.LocalFileStorageManager.getSessionBaseDirectory()
File com.google.android.picasastore.PicasaStoreFacade.getAlbumCoverCacheFile(long,String,String)
File com.google.android.picasastore.PicasaStoreFacade.getCacheDirectory()
File com.google.android.picasastore.PicasaStoreFacade.getCacheFile(long,String)
File com.google.android.picasasync.PrefetchHelper.getAlbumCover(long,String)
FileInputStream com.google.common.io.Files$1.getInput()
FileOutputStream com.google.common.io.Files$2.getOutput()
Filter android.filterfw.core.FilterFactory.createFilterByClassName(String,String)
Filter android.filterfw.core.FilterFunction.getFilter()
Filter android.filterfw.core.FilterGraph.getFilter(String)
Filter android.filterfw.core.FilterPort.getFilter()
Filter android.filterfw.core.InputPort.getSourceFilter()
Filter android.filterfw.core.OutputPort.getTargetFilter()
Filter android.widget.CursorTreeAdapter.getFilter()
Filter com.android.browser.SuggestionsAdapter.getFilter()
Filter com.android.contacts.group.SuggestedMemberListAdapter.getFilter()
Filter com.android.ex.chips.BaseRecipientAdapter.getFilter()
FilterContext android.filterfw.core.FilterFunction.getContext()
FilterContext android.filterfw.core.FrameManager.getContext()
FilterContext android.filterfw.core.GraphRunner.getContext()
FilterContext android.media.effect.FilterEffect.getFilterContext()
FilterGraph android.filterfw.core.AsyncRunner.getGraph()
FilterGraph android.filterfw.core.Scheduler.getGraph()
FilterGraph android.filterfw.core.SyncRunner.getGraph()
FilterGraph android.filterfw.io.GraphReader.readGraphResource(Context,int)
FilterQueryProvider android.widget.CursorTreeAdapter.getFilterQueryProvider()
FilterShowActivity com.android.gallery3d.filtershow.cache.ImageLoader.getActivity()
Fingerprint com.google.android.picasasync.UploadTaskEntry.getFingerprint()
Flag[] com.android.email.mail.store.ImapFolder.getPermanentFlags()
Flag[] com.android.email.mail.store.Pop3Store$Pop3Folder.getPermanentFlags()
Float com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1.get(SlidingChallengeLayout)
Folder com.android.email.mail.Store.getFolder(String)
Folder com.android.email.mail.store.ImapStore.getFolder(String)
Folder com.android.email.mail.store.Pop3Store.getFolder(String)
Folder com.android.launcher2.FolderIcon.getFolder()
Folder com.android.launcher2.Workspace.getFolderForTag(Object)
Folder com.android.launcher2.Workspace.getOpenFolder()
Folder$OpenMode com.android.email.mail.store.ImapFolder.getMode()
Folder$OpenMode com.android.email.mail.store.Pop3Store$Pop3Folder.getMode()
FolderInfo com.android.launcher2.Folder.getInfo()
FolderInfo com.android.launcher2.FolderIcon.getFolderInfo()
FolderInfo com.android.launcher2.LauncherModel.getFolderById(Context,HashMap,long)
FolderProperties com.android.email.FolderProperties.getInstance(Context)
Format$Field java.text.FieldPosition.getFieldAttribute()
Fragment android.app.Fragment.getParentFragment()
Fragment com.android.browser.ComboViewActivity$TabsAdapter.getItem(int)
Fragment com.android.contacts.ContactsActivity.getFragment(int)
Fragment com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter.getItem(int)
Fragment com.android.contacts.quickcontact.QuickContactActivity$ViewPagerAdapter.getItem(int)
Fragment com.android.deskclock.DeskClock$TabsAdapter.getItem(int)
Fragment$SavedState android.app.FragmentManagerImpl.saveFragmentInstanceState(Fragment)
FragmentManager android.app.Fragment.getChildFragmentManager()
FragmentManager$BackStackEntry android.app.FragmentManagerImpl.getBackStackEntryAt(int)
Frame android.filterfw.core.CachedFrameManager.newBoundFrame(FrameFormat,int,long)
Frame android.filterfw.core.CachedFrameManager.newFrame(FrameFormat)
Frame android.filterfw.core.CachedFrameManager.releaseFrame(Frame)
Frame android.filterfw.core.CachedFrameManager.retainFrame(Frame)
Frame android.filterfw.core.FilterContext.fetchFrame(String)
Frame android.filterfw.core.Frame.release()
Frame android.filterfw.core.Frame.retain()
Frame android.filterfw.core.FrameManager.duplicateFrame(Frame)
Frame android.filterfw.core.FrameManager.duplicateFrameToTarget(Frame,int)
Frame android.filterfw.core.SimpleFrameManager.newBoundFrame(FrameFormat,int,long)
Frame android.filterfw.core.SimpleFrameManager.newFrame(FrameFormat)
Frame android.filterfw.core.SimpleFrameManager.releaseFrame(Frame)
Frame android.filterfw.core.SimpleFrameManager.retainFrame(Frame)
Frame android.media.effect.FilterEffect.frameFromTexture(int,int,int)
FrameFormat android.filterfw.core.Filter.getInputFormat(String)
FrameFormat android.filterfw.core.Filter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterfw.core.FilterPort.getPortFormat()
FrameFormat android.filterfw.core.Frame.getFormat()
FrameFormat android.filterfw.core.InputPort.getSourceFormat()
FrameFormat android.filterpacks.base.FrameBranch.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.base.RetargetFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.AutoFixFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.BitmapOverlayFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.BlackWhiteFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ColorTemperatureFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.CropFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.CrossProcessFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.DocumentaryFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.DrawOverlayFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.DrawRectFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.DuotoneFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.FillLightFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.FisheyeFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.FixedRotationFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.FlipFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.GrainFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ImageCombineFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ImageSlicer.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ImageStitcher.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.LomoishFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.NegativeFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.PosterizeFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.RedEyeFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ResizeFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.SaturateFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.SepiaFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.SharpenFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.SimpleImageFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.TintFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ToPackedGrayFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ToRGBAFilter.getConvertedFormat(FrameFormat)
FrameFormat android.filterpacks.imageproc.ToRGBAFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.ToRGBFilter.getConvertedFormat(FrameFormat)
FrameFormat android.filterpacks.imageproc.ToRGBFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.imageproc.VignetteFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.performance.ThroughputFilter.getOutputFormat(String,FrameFormat)
FrameFormat android.filterpacks.videoproc.BackDropperFilter.getOutputFormat(String,FrameFormat)
FrameManager android.filterfw.core.FilterContext.getFrameManager()
FrameManager android.filterfw.core.Frame.getFrameManager()
FusionDictionary$WeightedString com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup.getBigram(String)
FusionDictionary$WeightedString com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup.getShortcut(String)
Future com.android.gallery3d.data.MediaSet.requestSyncOnMultipleSets(MediaSet[],MediaSet$SyncListener)
GL11 com.android.gallery3d.ui.GLCanvasImpl.getGLInstance()
GLEnvironment android.filterfw.core.FilterContext.getGLEnvironment()
GLEnvironment android.filterfw.core.FilterSurfaceView.getGLEnv()
GLEnvironment android.filterfw.core.FrameManager.getGLEnvironment()
GLEnvironment android.filterfw.core.GLFrame.getGLEnvironment()
GLEnvironment android.filterfw.core.ShaderProgram.getGLEnvironment()
GLRoot com.android.gallery3d.app.AbstractGalleryActivity.getGLRoot()
GLRoot com.android.gallery3d.ui.GLView.getGLRoot()
GLView com.android.gallery3d.ui.GLView.getComponent(int)
GalResult com.android.exchange.EasSyncService.searchGal(Context,long,String,int)
GalResult com.android.exchange.adapter.GalParser.getGalResult()
GalleryActionBar com.android.camera.ActivityBase.getGalleryActionBar()
GalleryActionBar com.android.gallery3d.app.AbstractGalleryActivity.getGalleryActionBar()
GalleryApp com.android.gallery3d.picasasource.PicasaSource.getApplication()
GeneralNames org.apache.harmony.security.x509.AuthorityKeyIdentifier.getAuthorityCertIssuer()
GenericDeclaration org.apache.harmony.luni.lang.reflect.ImplForVariable.getGenericDeclaration()
GenericInflater$Factory android.preference.GenericInflater.getFactory()
GenericPdu com.google.android.mms.pdu.PduPersister.load(Uri)
GenericPdu com.google.android.mms.util.PduCacheEntry.getPdu()
GeolocationPermissions android.webkit.WebViewClassic$Factory.getGeolocationPermissions()
GeolocationPermissionsClassic android.webkit.GeolocationPermissionsClassic.getInstance()
GeolocationPermissionsPrompt com.android.browser.Tab.getGeolocationPermissionsPrompt()
GeometryMetadata com.android.gallery3d.filtershow.imageshow.ImageShow.getGeometry()
GeometryMetadata$FLIP com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getFlipType()
GeometryMetadata$FLIP com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalFlip()
GestureRecorder com.android.systemui.statusbar.phone.PhoneStatusBar.getGestureRecorder()
GestureStrokeWithPreviewPoints com.android.inputmethod.keyboard.PointerTracker.getGestureStrokeWithPreviewPoints()
GlobalActions$Action com.android.internal.policy.impl.GlobalActions$MyAdapter.getItem(int)
GradientDrawable$Orientation android.graphics.drawable.GradientDrawable.getOrientation()
GridLayout$Alignment android.widget.GridLayout.getAlignment(GridLayout$Alignment,boolean)
GridLayout$Alignment android.widget.GridLayout.getAlignment(int,boolean)
GridLayout$Arc[] android.widget.GridLayout$Axis.getArcs()
GridLayout$Bounds android.widget.GridLayout$6.getBounds()
GridLayout$Bounds android.widget.GridLayout$Alignment.getBounds()
GridLayout$LayoutParams android.widget.GridLayout.getLayoutParams(View)
GridLayout$PackedMap android.widget.GridLayout$Axis.getGroupBounds()
GroupEditorFragment$Member com.android.contacts.group.GroupEditorFragment$MemberListAdapter.getItem(int)
GroupListItem com.android.contacts.group.GroupBrowseListAdapter.getItem(int)
Handler android.accounts.AccountManager.access$600(AccountManager)
Handler android.media.AudioTrack$NativeEventHandlerDelegate.getHandler()
Handler android.net.BaseNetworkStateTracker.getTargetHandler()
Handler com.android.contacts.editor.AggregationSuggestionEngine.getHandler()
Handler com.android.email.activity.MessageOrderManager.getHandlerForContentObserver()
Handler com.android.internal.content.PackageMonitor.getRegisteredHandler()
Handler com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getWorkerHandler()
Handler com.android.server.display.DisplayAdapter.getHandler()
HandlerBox com.coremedia.iso.boxes.MediaBox.getHandlerBox()
HandoverManager$BluetoothHandoverData com.android.nfc.handover.HandoverManager.parse(NdefMessage)
HandoverManager$BluetoothHandoverData com.android.nfc.handover.HandoverManager.parseBtOob(ByteBuffer)
HandoverManager$BluetoothHandoverData com.android.nfc.handover.HandoverManager.parseHandoverSelect(NdefMessage)
HandoverManager$BluetoothHandoverData com.android.nfc.handover.HandoverManager.parseNokia(ByteBuffer)
HanziToPinyin com.android.providers.contacts.HanziToPinyin.getInstance()
HardwareLayer android.view.TextureView.getHardwareLayer()
HardwareRenderer android.view.View.getHardwareRenderer()
HashMap android.accounts.AccountManager.access$1300(AccountManager)
HashMap android.accounts.AccountManagerService.readAuthTokensForAccountFromDatabaseLocked(SQLiteDatabase,Account)
HashMap android.accounts.AccountManagerService.readUserDataForAccountFromDatabaseLocked(SQLiteDatabase,Account)
HashMap android.widget.RemoteViewsService.access$100()
HashMap com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.getChanges()
HashMap com.android.ex.chips.RecipientAlternatesAdapter.getMatchingRecipients(Context,ArrayList)
HashMap com.android.ex.chips.RecipientAlternatesAdapter.getMatchingRecipients(Context,ArrayList,int)
HashMap com.android.inputmethod.latin.LocaleUtils.localeAndTimeStrToHashMap(String)
HashMap com.android.inputmethod.latin.UserHistoryDictionaryBigramList.getBigrams(String)
HashMap com.android.mms.model.SlideshowModel.openPartFiles(ContentResolver)
HashMap com.android.server.InputMethodManagerService$InputMethodFileManager.getAllAdditionalInputMethodSubtypes()
HashMap com.android.server.ProcessMap.getMap()
HashMap com.android.server.am.CompatModePackages.getPackages()
HashMap com.android.server.am.ProviderMap.getProvidersByClass(int)
HashMap$HashMapEntry java.util.HashMap$HashIterator.nextEntry()
HashSet com.android.deskclock.Alarm$DaysOfWeek.getSetDays()
HashSet com.android.server.pm.PackageSettingBase.getDisabledComponents(int)
HashSet com.android.server.pm.PackageSettingBase.getEnabledComponents(int)
Hashtable$HashtableEntry java.util.Hashtable$HashIterator.nextEntry()
Hashtable$HashtableEntry java.util.Hashtable$HashIterator.nextEntryNotFailFast()
Header com.android.exchange.EasResponse.getHeader(String)
Header org.apache.http.impl.auth.DigestScheme.authenticate(Credentials,HttpRequest)
Header org.apache.http.message.AbstractHttpMessage.getFirstHeader(String)
Header org.apache.http.message.AbstractHttpMessage.getLastHeader(String)
HeaderElement org.apache.http.message.BasicHeaderValueParser.parseHeaderElement(CharArrayBuffer,ParserCursor)
HeaderSet javax.obex.ClientOperation.getReceivedHeader()
HeaderSet javax.obex.ClientSession.delete(HeaderSet)
HeaderSet javax.obex.ClientSession.disconnect(HeaderSet)
HeaderSet javax.obex.ClientSession.setPath(HeaderSet,boolean,boolean)
HeaderSet javax.obex.ServerOperation.getReceivedHeader()
Header[] org.apache.http.message.AbstractHttpMessage.getHeaders(String)
HeadsetService com.android.bluetooth.hfp.HeadsetService.getHeadsetService()
HidService com.android.bluetooth.hid.HidService.getHidService()
HideReturnsTransformationMethod android.text.method.HideReturnsTransformationMethod.getInstance()
HistoryAdapter com.android.gallery3d.filtershow.imageshow.ImageShow.getHistory()
HistoryAdapter com.android.gallery3d.filtershow.imageshow.ImageSlave.getHistory()
HostAuth com.android.emailcommon.provider.HostAuth.restoreHostAuthWithId(Context,long)
Hotseat com.android.launcher2.Launcher.getHotseat()
Html$ImageGetter com.android.contacts.detail.ContactDetailDisplayUtils.getImageGetter(Context)
HttpConnection$Address libcore.net.http.HttpConnection.getAddress()
HttpEntity android.net.http.AndroidHttpClientConnection.receiveResponseEntity(Headers)
HttpParams org.apache.http.params.AbstractHttpParams.setBooleanParameter(String,boolean)
HttpParams org.apache.http.params.AbstractHttpParams.setDoubleParameter(String,double)
HttpParams org.apache.http.params.AbstractHttpParams.setIntParameter(String,int)
HttpParams org.apache.http.params.AbstractHttpParams.setLongParameter(String,long)
HttpParams org.apache.http.params.BasicHttpParams.setParameter(String,Object)
IAccountAuthenticator android.accounts.IAccountAuthenticator$Stub.asInterface(IBinder)
IAccountAuthenticatorResponse android.accounts.IAccountAuthenticatorResponse$Stub.asInterface(IBinder)
IAccountManager android.accounts.AccountManager.access$000(AccountManager)
IAccountManagerResponse android.accounts.AccountManagerService$Session.getResponseAndClose()
IActivityManager$ContentProviderHolder android.app.ActivityManagerProxy.getContentProvider(IApplicationThread,String,int,boolean)
IActivityManager$ContentProviderHolder android.app.ActivityManagerProxy.getContentProviderExternal(String,int,IBinder)
IActivityManager$ContentProviderHolder com.android.server.am.ActivityManagerService.getContentProvider(IApplicationThread,String,int,boolean)
IActivityManager$ContentProviderHolder com.android.server.am.ActivityManagerService.getContentProviderExternal(String,int,IBinder)
IActivityManager$WaitResult android.app.ActivityManagerProxy.startActivityAndWait(IApplicationThread,Intent,String,IBinder,String,int,int,String,ParcelFileDescriptor,Bundle,int)
IApplicationToken com.android.server.wm.WindowState.getAppToken()
IAudioService com.android.internal.policy.impl.PhoneWindowManager.getAudioService()
IAutomationSupport com.android.uiautomator.testrunner.UiAutomatorTestCase.getAutomationSupport()
IBackupAgent com.android.server.BackupManagerService.bindToAgentSynchronous(ApplicationInfo,int)
IBatteryStats com.android.server.am.BatteryStatsService.getService()
IBinder android.accessibilityservice.IAccessibilityServiceClient$Stub.asBinder()
IBinder android.accounts.AbstractAccountAuthenticator.getIBinder()
IBinder android.accounts.AccountManagerService.onBind(Intent)
IBinder android.accounts.IAccountAuthenticator$Stub.asBinder()
IBinder android.accounts.IAccountAuthenticatorResponse$Stub.asBinder()
IBinder android.app.IStopUserCallback$Stub.asBinder()
IBinder android.app.IUserSwitchObserver$Stub.asBinder()
IBinder android.bluetooth.IBluetoothHeadsetPhone$Stub.asBinder()
IBinder android.bluetooth.IBluetoothHealth$Stub.asBinder()
IBinder android.bluetooth.IBluetoothInputDevice$Stub.asBinder()
IBinder android.bluetooth.IBluetoothManager$Stub.asBinder()
IBinder android.bluetooth.IBluetoothManagerCallback$Stub.asBinder()
IBinder android.bluetooth.IBluetoothPan$Stub.asBinder()
IBinder android.bluetooth.IBluetoothPbap$Stub.asBinder()
IBinder android.content.AbstractThreadedSyncAdapter.getSyncAdapterBinder()
IBinder android.content.SyncContext.getSyncContextBinder()
IBinder android.hardware.ISerialManager$Stub.asBinder()
IBinder android.hardware.display.IDisplayManager$Stub.asBinder()
IBinder android.hardware.display.IDisplayManagerCallback$Stub.asBinder()
IBinder android.hardware.input.IInputDevicesChangedListener$Stub.asBinder()
IBinder android.hardware.input.IInputManager$Stub.asBinder()
IBinder android.location.IGeocodeProvider$Stub.asBinder()
IBinder android.location.IGpsStatusProvider$Stub.asBinder()
IBinder android.location.INetInitiatedListener$Stub.asBinder()
IBinder android.media.AudioService$AudioFocusDeathHandler.getBinder()
IBinder android.media.AudioService$RcClientDeathHandler.getBinder()
IBinder android.media.AudioService$ScoClient.getBinder()
IBinder android.media.AudioService$SetModeDeathHandler.getBinder()
IBinder android.media.IAudioRoutesObserver$Stub.asBinder()
IBinder android.media.IRemoteVolumeObserver$Stub.asBinder()
IBinder android.media.IRingtonePlayer$Stub.asBinder()
IBinder android.net.INetworkManagementEventObserver$Stub.asBinder()
IBinder android.net.INetworkStatsSession$Stub.asBinder()
IBinder android.net.nsd.INsdManager$Stub.asBinder()
IBinder android.os.ICancellationSignal$Stub.asBinder()
IBinder android.os.IHardwareService$Stub.asBinder()
IBinder android.os.INetworkManagementService$Stub.asBinder()
IBinder android.os.ISchedulingPolicyService$Stub.asBinder()
IBinder android.os.IUpdateLock$Stub.asBinder()
IBinder android.os.IUserManager$Stub.asBinder()
IBinder android.service.dreams.IDreamManager$Stub.asBinder()
IBinder android.service.dreams.IDreamService$Stub.asBinder()
IBinder android.service.wallpaper.IWallpaperConnection$Stub.asBinder()
IBinder android.service.wallpaper.IWallpaperEngine$Stub.asBinder()
IBinder android.service.wallpaper.IWallpaperService$Stub.asBinder()
IBinder android.speech.tts.TextToSpeech$Connection.getCallerIdentity()
IBinder android.view.IDisplayContentChangeListener$Stub.asBinder()
IBinder android.view.IInputFilter$Stub.asBinder()
IBinder android.view.IInputFilterHost$Stub.asBinder()
IBinder android.view.IWindowManager$Stub$Proxy.getFocusedWindowToken()
IBinder android.view.Surface.getBuiltInDisplay(int)
IBinder android.widget.RemoteViewsService.onBind(Intent)
IBinder com.android.bluetooth.btservice.ProfileService.onBind(Intent)
IBinder com.android.emailcommon.service.IEmailService$Stub.asBinder()
IBinder com.android.emailcommon.service.IEmailServiceCallback$Stub.asBinder()
IBinder com.android.internal.app.IBatteryStats$Stub.asBinder()
IBinder com.android.internal.app.IMediaContainerService$Stub.asBinder()
IBinder com.android.internal.backup.IBackupTransport$Stub.asBinder()
IBinder com.android.internal.location.ILocationProvider$Stub.asBinder()
IBinder com.android.internal.textservice.ISpellCheckerService$Stub.asBinder()
IBinder com.android.internal.widget.ILockSettings$Stub.asBinder()
IBinder com.android.providers.media.IMtpService$Stub.asBinder()
IBinder com.android.server.MountService$ObbState.getBinder()
IBinder com.android.server.ServiceWatcher.getBinder()
IBinder com.android.server.StatusBarManagerService.addNotification(StatusBarNotification)
IBinder com.android.server.am.ActivityManagerService.newUriPermissionOwner(String)
IBinder com.android.server.display.DisplayDevice.getDisplayTokenLocked()
IBinder com.android.server.wm.WindowManagerService.getFocusedWindowToken()
IBinder com.google.android.gms.common.internal.IGmsCallbacks$Stub.asBinder()
IBinder com.google.android.gms.panorama.internal.IPanoramaCallbacks$Stub.asBinder()
IBluetooth android.bluetooth.BluetoothAdapter.getBluetoothService(IBluetoothManagerCallback)
IBluetooth android.bluetooth.IBluetoothManager$Stub$Proxy.registerAdapter(IBluetoothManagerCallback)
IBluetoothHeadsetPhone com.android.phone.PhoneGlobals.getBluetoothPhoneService()
IBluetoothManager android.bluetooth.BluetoothAdapter.getBluetoothManager()
ICancellationSignal android.content.ContentProvider$Transport.createCancellationSignal()
IContentProvider android.content.ContentResolver.acquireUnstableProvider(Uri)
ICountryListener com.android.server.CountryDetectorService$Receiver.getListener()
IEmailService com.android.email.mail.store.ExchangeStore.getService()
IEmailService com.android.email.service.EmailServiceUtils.getExchangeService(Context,IEmailServiceCallback)
IEmailService com.android.email.service.EmailServiceUtils.getService(Context,String,IEmailServiceCallback)
IGpsStatusProvider com.android.server.location.GpsLocationProvider.getGpsStatusProvider()
IIntentSender android.app.ActivityManagerProxy.getIntentSender(int,String,IBinder,String,int,Intent[],String[],int,Bundle,int)
IIntentSender com.android.server.am.ActivityManagerService.getIntentSender(int,String,IBinder,String,int,Intent[],String[],int,Bundle,int)
IIntentSender com.android.server.am.ActivityManagerService.getIntentSenderLocked(int,String,int,int,IBinder,String,int,Intent[],String[],int,Bundle)
IInterface android.os.RemoteCallbackList.getBroadcastItem(int)
IInterface com.google.android.gms.common.internal.GmsClient.getService()
IInterface com.google.android.gms.panorama.internal.PanoramaClientImpl.createServiceInterface(IBinder)
ILocationListener com.android.server.LocationManagerService$Receiver.getListener()
IMountService com.android.internal.content.PackageHelper.getMountService()
IMountService com.android.internal.os.storage.ExternalStorageFormatter.getMountService()
INetInitiatedListener com.android.server.location.GpsLocationProvider.getNetInitiatedListener()
INfcAdapterExtras com.android.nfc.NfcService$NfcAdapterService.getNfcAdapterExtrasInterface(String)
INfcTag com.android.nfc.NfcService$NfcAdapterService.getNfcTagInterface()
IRemoteCallback android.app.ActivityOptions.getOnAnimationStartListener()
IRingtonePlayer android.media.AudioManager.getRingtonePlayer()
IRingtonePlayer android.media.AudioService.getRingtonePlayer()
IRingtonePlayer android.media.IAudioService$Stub$Proxy.getRingtonePlayer()
ISipSession com.android.server.sip.SipService.createSession(SipProfile,ISipSessionListener)
ISipSession com.android.server.sip.SipService.getPendingSession(String)
ISipSessionListener com.android.server.sip.SipSessionListenerProxy.getListener()
ISpellCheckerSession android.service.textservice.SpellCheckerService$SpellCheckerServiceBinder.getISpellCheckerSession(String,ISpellCheckerSessionListener,Bundle)
ISpellCheckerSession com.android.internal.textservice.ISpellCheckerService$Stub$Proxy.getISpellCheckerSession(String,ISpellCheckerSessionListener,Bundle)
IStatusBarService com.android.internal.policy.impl.PhoneWindowManager.getStatusBarService()
ITelephony com.android.internal.policy.impl.PhoneWindowManager.getTelephonyService()
IUsageStats com.android.server.am.UsageStatsService.getService()
IWindowManager android.view.WindowManagerGlobal.getWindowManagerService()
IWindowSession android.view.WindowManagerGlobal.getWindowSession(Looper)
IccCard com.android.internal.telephony.sip.SipPhone.getIccCard()
IccCardApplicationStatus$AppState com.android.internal.telephony.IccCardApplicationStatus.AppStateFromRILInt(int)
IccCardApplicationStatus$AppState com.android.internal.telephony.UiccCardApplication.getState()
IccCardApplicationStatus$AppType com.android.internal.telephony.IccCardApplicationStatus.AppTypeFromRILInt(int)
IccCardApplicationStatus$AppType com.android.internal.telephony.PhoneBase.getCurrentUiccAppType()
IccCardApplicationStatus$AppType com.android.internal.telephony.UiccCardApplication.getType()
IccCardApplicationStatus$PersoSubState com.android.internal.telephony.IccCardApplicationStatus.PersoSubstateFromRILInt(int)
IccCardApplicationStatus$PersoSubState com.android.internal.telephony.UiccCardApplication.getPersoSubState()
IccCardConstants$State com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getSimState()
IccCardConstants$State com.android.internal.telephony.IccCardProxy.getState()
IccCardStatus$CardState com.android.internal.telephony.UiccCard.getCardState()
IccCardStatus$PinState com.android.internal.telephony.IccCardApplicationStatus.PinStateFromRILInt(int)
IccCardStatus$PinState com.android.internal.telephony.UiccCard.getUniversalPinState()
IccCardStatus$PinState com.android.internal.telephony.UiccCardApplication.getPin1State()
IccFileHandler com.android.internal.telephony.IccCardProxy.getIccFileHandler()
IccFileHandler com.android.internal.telephony.UiccCardApplication.getIccFileHandler()
IccFileHandler com.android.internal.telephony.sip.SipPhone.getIccFileHandler()
IccFileHandler com.android.internal.telephony.uicc.UiccController.getIccFileHandler(int)
IccPhoneBookInterfaceManager com.android.internal.telephony.sip.SipPhone.getIccPhoneBookInterfaceManager()
IccRecords com.android.internal.telephony.IccCardProxy.getIccRecords()
IccRecords com.android.internal.telephony.UiccCardApplication.getIccRecords()
IccRecords com.android.internal.telephony.uicc.UiccController.getIccRecords(int)
IccSmsInterfaceManager com.android.internal.telephony.sip.SipPhone.getIccSmsInterfaceManager()
IconCache com.android.launcher2.LauncherApplication.getIconCache()
IfdData com.android.gallery3d.exif.ExifData.getIfdData(int)
ImageCacheService$ImageData com.android.mms.util.ImageCacheService.getImageData(String,int)
ImageFilter com.android.gallery3d.filtershow.PanelController.setImagePreset(ImageFilter,String)
ImageFilter com.android.gallery3d.filtershow.imageshow.ImageShow.getCurrentFilter()
ImageFilter com.android.gallery3d.filtershow.imageshow.ImageSlave.getCurrentFilter()
ImageFilter com.android.gallery3d.filtershow.presets.ImagePreset.getFilter(String)
ImageLoader com.android.gallery3d.filtershow.presets.ImagePreset.getImageLoader()
ImageModel com.android.mms.model.SlideModel.getImage()
ImagePreset com.android.gallery3d.filtershow.HistoryAdapter.getLast()
ImagePreset com.android.gallery3d.filtershow.PanelController.getImagePreset()
ImagePreset com.android.gallery3d.filtershow.filters.ImageFilter.getImagePreset()
ImagePreset com.android.gallery3d.filtershow.imageshow.ImageShow.getImagePreset()
ImagePreset com.android.gallery3d.filtershow.imageshow.ImageSlave.getImagePreset()
ImagePreset com.android.gallery3d.filtershow.imageshow.ImageSmallFilter.getImagePreset()
ImageShow com.android.gallery3d.filtershow.imageshow.ImageSlave.getMaster()
ImageSpan com.android.ex.chips.RecipientEditTextView.getMoreChip()
ImageView com.android.contacts.list.ContactListItemView.getPhotoView()
ImageView com.android.contacts.util.ImageViewDrawableSetter.getTarget()
ImageView$ScaleType android.widget.ImageView.getScaleType()
ImapConnection com.android.email.mail.store.ImapStore.getConnection()
ImapElement com.android.email.mail.store.imap.ImapList.getElementOrNone(int)
ImapElement com.android.email.mail.store.imap.ImapList.getKeyedElementOrNull(String,boolean)
ImapList com.android.email.mail.store.imap.ImapList.getKeyedListOrEmpty(String)
ImapList com.android.email.mail.store.imap.ImapList.getKeyedListOrEmpty(String,boolean)
ImapList com.android.email.mail.store.imap.ImapList.getListOrEmpty(int)
ImapString com.android.email.mail.store.imap.ImapList.getKeyedStringOrEmpty(String)
ImapString com.android.email.mail.store.imap.ImapList.getKeyedStringOrEmpty(String,boolean)
ImapString com.android.email.mail.store.imap.ImapList.getStringOrEmpty(int)
ImapString com.android.email.mail.store.imap.ImapResponse.getAlertTextOrEmpty()
ImapString com.android.email.mail.store.imap.ImapResponse.getResponseCodeOrEmpty()
ImapString com.android.email.mail.store.imap.ImapResponse.getStatusResponseTextOrEmpty()
ImmutableCollection$Builder com.google.common.collect.ImmutableCollection$Builder.add(Object[])
ImmutableList com.android.contacts.model.Contact.getGroupMetaData()
ImmutableList com.android.contacts.model.Contact.getInvitableAccountTypes()
ImmutableList com.android.contacts.model.Contact.getRawContacts()
ImmutableList com.android.contacts.model.Contact.getStreamItems()
ImmutableList com.google.common.collect.ImmutableCollection.asList()
ImmutableList com.google.common.collect.ImmutableCollection.createAsList()
ImmutableList com.google.common.collect.ImmutableList.asList()
ImmutableList com.google.common.collect.ImmutableList.reverse()
ImmutableList com.google.common.collect.ImmutableSet$ArrayImmutableSet.createAsList()
ImmutableList com.google.common.collect.TransformedImmutableList.subList(int,int)
ImmutableMap com.android.contacts.model.Contact.getStatuses()
ImmutableMap$Builder com.google.common.collect.ImmutableSortedMap$Builder.put(Object,Object)
ImmutableSet com.google.common.collect.ImmutableSortedMap.entrySet()
ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.headMap(Object,boolean)
ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.subMap(Object,boolean,Object,boolean)
ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.tailMap(Object,boolean)
ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.headSet(Object,boolean)
ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.subSet(Object,boolean,Object,boolean)
ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.tailSet(Object,boolean)
ImmutableSortedSet com.google.common.collect.RegularImmutableSortedSet.headSetImpl(Object,boolean)
ImmutableSortedSet com.google.common.collect.RegularImmutableSortedSet.tailSetImpl(Object,boolean)
ImportRequest com.android.contacts.vcard.NfcImportVCardActivity$ImportTask.doInBackground(VCardService[])
InCallControlState com.android.phone.InCallScreen.getUpdatedInCallControlState()
InCallTouchUi com.android.phone.InCallScreen.getInCallTouchUi()
InCallUiState$ProgressIndicationType com.android.phone.InCallUiState.getProgressIndication()
IndexerListAdapter$Placement com.android.contacts.widget.IndexerListAdapter.getItemPlacementInSection(int)
InetAddress android.net.nsd.NsdServiceInfo.getHost()
InetAddress com.android.email.mail.transport.MailTransport.getLocalAddress()
InetSocketAddress android.os.CommonTimeConfig.getMasterElectionEndpoint()
InjectedServices com.android.contacts.ContactsApplication.getInjectedServices()
InputBindResult com.android.internal.view.IInputMethodManager$Stub$Proxy.startInput(IInputMethodClient,IInputContext,EditorInfo,int)
InputBindResult com.android.internal.view.IInputMethodManager$Stub$Proxy.windowGainedFocus(IInputMethodClient,IBinder,int,int,int,EditorInfo,IInputContext)
InputBindResult com.android.server.InputMethodManagerService.startInputInnerLocked()
InputConnection android.webkit.WebViewClassic.onCreateInputConnection(EditorInfo)
InputDevice android.hardware.input.IInputManager$Stub$Proxy.getInputDevice(int)
InputDevice android.hardware.input.InputManager.getInputDevice(int)
InputDevice android.hardware.input.InputManager.getInputDeviceByDescriptor(String)
InputDevice com.android.server.input.InputManagerService.getInputDevice(int)
InputDevice$MotionRange android.view.InputDevice.getMotionRange(int)
InputDevice$MotionRange android.view.InputDevice.getMotionRange(int,int)
InputDevice[] com.android.server.input.InputManagerService.getInputDevices()
InputManager android.hardware.input.InputManager.getInstance()
InputMethodInfo com.android.inputmethod.latin.ImfUtils.getInputMethodInfoOfThisIme(Context)
InputMethodManager com.android.inputmethod.latin.ImfUtils.getInputMethodManager(Context)
InputMethodManagerCompatWrapper com.android.inputmethod.compat.InputMethodManagerCompatWrapper.getInstance()
InputMethodManagerService$ImeSubtypeListItem com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager.getNextInputMethod(boolean,InputMethodInfo,InputMethodSubtype)
InputMethodSubtype com.android.inputmethod.compat.InputMethodManagerCompatWrapper.getCurrentInputMethodSubtype()
InputMethodSubtype com.android.inputmethod.latin.AdditionalSubtype.createAdditionalSubtype(String)
InputMethodSubtype com.android.inputmethod.latin.ImfUtils.getCurrentInputMethodSubtype(Context,InputMethodSubtype)
InputMethodSubtype com.android.inputmethod.latin.SubtypeSwitcher.getCurrentSubtype()
InputMethodSubtype com.android.inputmethod.latin.SubtypeSwitcher.getNoLanguageSubtype()
InputMethodSubtype com.android.server.InputMethodManagerService.getCurrentInputMethodSubtype()
InputMethodSubtype com.android.server.InputMethodManagerService.getLastInputMethodSubtype()
InputMethodSubtype[] com.android.inputmethod.latin.AdditionalSubtype.createAdditionalSubtypesArray(String)
InputMethodSubtype[] com.android.inputmethod.latin.SettingsValues.getAdditionalSubtypes()
InputMonitor com.android.server.wm.WindowManagerService.getInputMonitor()
InputPointers com.android.inputmethod.latin.WordComposer.getInputPointers()
InputPort android.filterfw.core.Filter.getInputPort(String)
InputPort android.filterfw.core.OutputPort.getBasePort()
InputPort android.filterfw.core.OutputPort.getTargetPort()
InputStream com.adobe.xmp.impl.ByteBuffer.getByteStream()
InputStream com.android.email.mail.store.imap.ImapMemoryLiteral.getAsStream()
InputStream com.android.email.mail.store.imap.ImapSimpleString.getAsStream()
InputStream com.android.email.mail.store.imap.ImapString$1.getAsStream()
InputStream com.android.email.mail.store.imap.ImapTempFileLiteral.getAsStream()
InputStream com.android.email.mail.transport.MailTransport.getInputStream()
InputStream com.android.emailcommon.internet.BinaryTempFileBody.getInputStream()
InputStream com.android.emailcommon.internet.MimeMessage.getInputStream()
InputStream com.android.emailcommon.internet.MimeMultipart.getInputStream()
InputStream com.android.emailcommon.internet.MimeUtility.getInputStreamForContentTransferEncoding(InputStream,String)
InputStream com.android.emailcommon.internet.TextBody.getInputStream()
InputStream com.android.exchange.EasResponse.getInputStream()
InputStream com.android.exchange.adapter.Parser.getInput()
InputStream com.android.inputmethod.latin.FileTransforms.getDecryptedStream(InputStream)
InputStream com.android.inputmethod.latin.FileTransforms.getUncompressedStream(InputStream)
InputStream com.android.org.bouncycastle.asn1.ASN1OctetString.getOctetStream()
InputStream com.android.org.bouncycastle.asn1.BEROctetStringParser.getOctetStream()
InputStream com.android.org.bouncycastle.asn1.DEROctetStringParser.getOctetStream()
InputStream com.google.android.picasastore.HttpUtils.openInputStream(String)
InputStream com.google.common.io.ByteStreams$4.getInput()
InputStream com.google.common.io.ByteStreams$5.getInput()
InputStream com.google.common.io.Resources$1.getInput()
InputStreamReader com.google.common.io.CharStreams$2.getInput()
InsertQuickResponseDialog com.android.email.activity.InsertQuickResponseDialog.newInstance(Fragment,Account)
Insets android.graphics.drawable.Drawable.getLayoutInsets()
Insets android.graphics.drawable.DrawableContainer.getLayoutInsets()
Insets android.graphics.drawable.NinePatchDrawable.getLayoutInsets()
Insets android.view.View.getOpticalInsets()
Instrumentation$ActivityResult android.app.Instrumentation$ActivityMonitor.getResult()
Instrumentation$ActivityResult android.app.Instrumentation.execStartActivity(Context,IBinder,IBinder,Activity,Intent,int,Bundle)
Instrumentation$ActivityResult android.app.Instrumentation.execStartActivity(Context,IBinder,IBinder,Activity,Intent,int,Bundle,UserHandle)
Instrumentation$ActivityResult android.app.Instrumentation.execStartActivity(Context,IBinder,IBinder,Fragment,Intent,int,Bundle)
InstrumentationInfo com.android.server.pm.PackageManagerService.getInstrumentationInfo(ComponentName,int)
Integer com.adobe.xmp.impl.XMPMetaImpl.getPropertyInteger(String,String)
Integer com.android.calendar.extensions.AllInOneMenuExtensions.getExtensionMenuResource(Menu)
Integer com.android.contacts.calllog.CallTypeHelper.getHighlightedColor(int)
Integer com.android.contacts.model.RawContactDelta$ValuesDelta.getAsInteger(String)
Integer com.android.contacts.model.RawContactDelta$ValuesDelta.getAsInteger(String,Integer)
Integer com.android.contacts.model.dataitem.ImDataItem.getProtocol()
Integer com.android.emailcommon.utility.Utility$4.get(Cursor,int)
Integer com.android.emailcommon.utility.Utility.getFirstRowInt(Context,Uri,String[],String,String[],String,int,Integer)
Integer com.android.gallery3d.app.Bookmarker.getBookmark(Uri)
Integer com.android.gallery3d.app.StitchingProgressManager.getProgress(Uri)
Integer com.android.gallery3d.data.MediaSet$1.get()
Integer com.android.gallery3d.data.MediaSet$MultiSetSyncFuture.get()
Integer com.android.gallery3d.picasasource.PicasaAlbumSet$PicasaSyncTaskFuture.get()
Integer com.android.gallery3d.picasasource.PicasaPostAlbum$PostSyncFuture.get()
Integer com.google.common.primitives.Ints$IntArrayAsList.get(int)
Integer com.google.common.primitives.Ints$IntArrayAsList.set(int,Integer)
Intent android.app.Activity.getParentActivityIntent()
Intent android.app.ActivityManagerProxy.getIntentForIntentSender(IIntentSender)
Intent android.app.ActivityManagerProxy.registerReceiver(IApplicationThread,String,IIntentReceiver,IntentFilter,String,int)
Intent android.app.PendingIntent.getIntent()
Intent android.app.ReceiverRestrictedContext.registerReceiverAsUser(BroadcastReceiver,UserHandle,IntentFilter,String,Handler)
Intent android.app.SearchManager.getAssistIntent(Context)
Intent android.app.SearchManager.getAssistIntent(Context,int)
Intent android.content.Intent.setDataAndNormalize(Uri)
Intent android.content.Intent.setDataAndTypeAndNormalize(Uri,String)
Intent android.content.Intent.setTypeAndNormalize(String)
Intent android.provider.ContactsContract$QuickContact.composeQuickContactsIntent(Context,Rect,Uri,int,String[])
Intent com.android.browser.BookmarkUtils.createAddToHomeIntent(Context,String,String,Bitmap,Bitmap)
Intent com.android.browser.BrowserBookmarksPage.createShortcutIntent(Context,Cursor)
Intent com.android.browser.Controller.createBookmarkCurrentPageIntent(boolean)
Intent com.android.calendar.Utils.createEmailAttendeesIntent(Resources,String,String,List,List,String)
Intent com.android.calendar.alerts.AlertReceiver.createEmailIntent(Context,long,String)
Intent com.android.calendar.alerts.AlertUtils.buildEventViewIntent(Context,long,long,long)
Intent com.android.calendar.widget.CalendarAppWidgetProvider.getLaunchFillInIntent(Context,long,long,long,boolean)
Intent com.android.camera.ActivityBase.getResultData()
Intent com.android.contacts.ContactSaveService.createClearPrimaryIntent(Context,long)
Intent com.android.contacts.ContactSaveService.createGroupDeletionIntent(Context,long)
Intent com.android.contacts.ContactSaveService.createGroupUpdateIntent(Context,long,String,long[],long[],Class,String)
Intent com.android.contacts.ContactSaveService.createJoinContactsIntent(Context,long,long,boolean,Class,String)
Intent com.android.contacts.ContactSaveService.createNewGroupIntent(Context,AccountWithDataSet,String,long[],Class,String)
Intent com.android.contacts.ContactSaveService.createNewRawContactIntent(Context,ArrayList,AccountWithDataSet,Class,String)
Intent com.android.contacts.ContactSaveService.createSaveContactIntent(Context,RawContactDeltaList,String,int,boolean,Class,String,Bundle)
Intent com.android.contacts.ContactSaveService.createSaveContactIntent(Context,RawContactDeltaList,String,int,boolean,Class,String,long,String)
Intent com.android.contacts.ContactSaveService.createSetRingtone(Context,Uri,String)
Intent com.android.contacts.ContactSaveService.createSetSuperPrimaryIntent(Context,long)
Intent com.android.contacts.ContactsUtils.getCallIntent(String)
Intent com.android.contacts.ContactsUtils.getCallIntent(String,String)
Intent com.android.contacts.ContactsUtils.getCallIntent(Uri)
Intent com.android.contacts.ContactsUtils.getCallIntent(Uri,String)
Intent com.android.contacts.ContactsUtils.getInvitableIntent(AccountType,Uri)
Intent com.android.contacts.ContactsUtils.getVoicemailIntent()
Intent com.android.contacts.activities.DialtactsActivity.getCallSettingsIntent()
Intent com.android.contacts.activities.PhotoSelectionActivity.buildIntent(Context,Uri,Bitmap,byte[],Rect,RawContactDeltaList,boolean,boolean,boolean)
Intent com.android.contacts.calllog.IntentProvider$1.getIntent(Context)
Intent com.android.contacts.calllog.IntentProvider$2.getIntent(Context)
Intent com.android.contacts.calllog.IntentProvider$3.getIntent(Context)
Intent com.android.contacts.list.ContactsRequest.getRedirectIntent()
Intent com.android.contacts.quickcontact.DataAction.getAlternateIntent()
Intent com.android.contacts.quickcontact.DataAction.getIntent()
Intent com.android.contacts.util.StructuredPostalUtils.getViewPostalAddressIntent(String)
Intent com.android.email.AttachmentInfo.getAttachmentIntent(Context,long)
Intent com.android.email.activity.EmailActivity.createOpenAccountIntent(Activity,long)
Intent com.android.email.activity.EmailActivity.createOpenMailboxIntent(Activity,long,long)
Intent com.android.email.activity.EmailActivity.createOpenMessageIntent(Activity,long,long,long)
Intent com.android.email.activity.EmailActivity.createSearchIntent(Activity,long,long,String)
Intent com.android.email.activity.MessageCompose.getMessageComposeIntent(Context,long)
Intent com.android.email.activity.MessageList.createFroyoIntent(Context,Account)
Intent com.android.email.activity.Welcome.createAccountShortcutIntent(Context,String,long)
Intent com.android.email.activity.Welcome.createOpenAccountInboxIntent(Context,long)
Intent com.android.email.activity.Welcome.createOpenMessageIntent(Context,long,long,long)
Intent com.android.email.activity.setup.AccountSecurity.actionDevicePasswordExpirationIntent(Context,long,boolean)
Intent com.android.email.activity.setup.AccountSecurity.actionUpdateSecurityIntent(Context,long,boolean)
Intent com.android.email.activity.setup.AccountSettings.createAccountSettingsIntent(Context,long,String)
Intent com.android.email.activity.setup.AccountSettings.onBuildStartFragmentIntent(String,Bundle,int,int)
Intent com.android.gallery3d.app.PhotoPage.access$2600(Uri)
Intent com.android.gallery3d.app.PhotoPage.access$2700(MediaObject)
Intent com.android.gallery3d.util.HelpUtils.getHelpIntent(Context,int)
Intent com.android.inputmethod.compat.CompatUtils.getInputLanguageSelectionIntent(String,int)
Intent com.android.inputmethod.latin.DebugSettingsActivity.getIntent()
Intent com.android.inputmethod.latin.SettingsActivity.getIntent()
Intent com.android.internal.backup.IBackupTransport$Stub$Proxy.configurationIntent()
Intent com.android.internal.policy.impl.ShortcutManager.getIntent(KeyCharacterMap,int,int)
Intent com.android.mms.ui.ConversationList.createAddContactIntent(String)
Intent com.android.nfc.NfcDispatcher$DispatchInfo.setTagIntent()
Intent com.android.nfc.NfcDispatcher$DispatchInfo.setTechIntent()
Intent com.android.nfc.NfcDispatcher.getAppSearchIntent(String)
Intent com.android.phone.PhoneGlobals.createInCallIntent(boolean)
Intent com.android.phone.PhoneGlobals.createPhoneEndIntentUsingCallOrigin()
Intent com.android.providers.downloads.OpenHelper.buildViewIntent(Context,long)
Intent com.android.server.BackupManagerService.getConfigurationIntent(String)
Intent com.android.server.am.ActivityManagerService.createAppErrorIntentLocked(ProcessRecord,long,ApplicationErrorReport$CrashInfo)
Intent com.android.server.am.ActivityManagerService.getIntentForIntentSender(IIntentSender)
Intent com.android.server.am.ActivityManagerService.registerReceiver(IApplicationThread,String,IIntentReceiver,IntentFilter,String,int)
Intent com.android.videoeditor.service.IntentPool.get()
Intent com.android.videoeditor.service.IntentPool.get(Context,Class)
IntentFilter$AuthorityEntry android.content.IntentFilter.getDataAuthority(int)
IntentHandler$UrlData com.android.browser.IntentHandler.getUrlDataFromIntent(Intent)
IntentProvider com.android.contacts.calllog.IntentProvider.getCallDetailIntentProvider(CallLogAdapter,int,long,int)
IntentProvider com.android.contacts.calllog.IntentProvider.getPlayVoicemailIntentProvider(long,String)
IntentProvider com.android.contacts.calllog.IntentProvider.getReturnCallIntentProvider(String)
Intent[] android.app.TaskStackBuilder.getIntents()
InteractionController com.android.uiautomator.core.UiAutomatorBridge.getInteractionController()
InterfaceConfiguration android.os.INetworkManagementService$Stub$Proxy.getInterfaceConfig(String)
InterfaceConfiguration com.android.server.NetworkManagementService.getInterfaceConfig(String)
IsoFile com.coremedia.iso.IsoFile.getIsoFile()
IsoFile com.googlecode.mp4parser.AbstractBox.getIsoFile()
IsoFile com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder.build(Movie)
ItemLoadedFuture com.android.mms.util.PduLoaderManager.getPdu(Uri,boolean,ItemLoadedCallback)
ItemLoadedFuture com.android.mms.util.ThumbnailManager.getThumbnail(Uri,ItemLoadedCallback)
ItemLoadedFuture com.android.mms.util.ThumbnailManager.getVideoThumbnail(Uri,ItemLoadedCallback)
Iterable android.net.InterfaceConfiguration.getFlags()
Iterator android.drm.DrmSupportInfo.getFileSuffixIterator()
Iterator android.drm.DrmSupportInfo.getMimeTypeIterator()
Iterator com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils.getNameLookupKeys(String)
Iterator com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase.getNameLookupKeys(String)
Iterator com.android.providers.contacts.ContactLocaleUtils.getNameLookupKeys(String,int)
Iterator com.android.server.IntentResolver.filterIterator()
Iterator com.android.server.IntentResolverOld.filterIterator()
Iterator com.android.videoeditor.service.ApiService$IntentProcessor.getIntentQueueIterator()
Iterator com.google.common.collect.AbstractMultimap$3.iterator()
Iterator com.google.common.collect.AbstractMultimap$4.iterator()
Iterator com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator.getDelegateIterator()
Iterator com.google.common.collect.AbstractMultimap.createEntryIterator()
Iterator com.google.common.collect.AbstractSortedMultiset.descendingIterator()
Iterator com.google.common.collect.ForwardingCollection.iterator()
Iterator com.google.common.collect.ImmutableCollection.iterator()
Iterator com.google.common.collect.ImmutableSet.iterator()
Iterator com.google.common.collect.ImmutableSortedSet.iterator()
Iterator com.google.common.collect.Multimaps$Keys.entryIterator()
Iterator com.google.common.collect.TreeMultiset.descendingEntryIterator()
Iterator com.google.common.collect.TreeMultiset.entryIterator()
Iterator java.util.HashMap.newEntryIterator()
Iterator java.util.HashMap.newKeyIterator()
Iterator java.util.HashMap.newValueIterator()
Iterator java.util.LinkedHashMap.newEntryIterator()
Iterator java.util.LinkedHashMap.newKeyIterator()
Iterator java.util.LinkedHashMap.newValueIterator()
Key com.android.inputmethod.keyboard.Keyboard.getKey(int)
Key com.android.inputmethod.keyboard.PointerTracker.getKey()
Key com.android.inputmethod.keyboard.PointerTracker.getKeyOn(int,int)
Key com.android.inputmethod.keyboard.internal.KeysCache.get(Key)
KeyCharacterMap$FallbackAction android.view.KeyCharacterMap.getFallbackAction(int,int)
KeyCodeDescriptionMapper com.android.inputmethod.accessibility.KeyCodeDescriptionMapper.getInstance()
KeyDetector com.android.inputmethod.keyboard.MainKeyboardView.getKeyDetector()
KeyDetector com.android.inputmethod.keyboard.MoreKeysKeyboardView.getKeyDetector()
KeyDetector com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2.getKeyDetector()
KeyDetector com.android.inputmethod.latin.suggestions.MoreSuggestionsView.getKeyDetector()
KeyEvent$DispatcherState android.inputmethodservice.AbstractInputMethodService.getKeyDispatcherState()
KeyEvent$DispatcherState android.view.View.getKeyDispatcherState()
KeySpec java.security.KeyFactory.getKeySpec(Key,Class)
KeyStore android.security.KeyStore.getInstance()
KeyStore$Entry java.security.KeyStore.getEntry(String,KeyStore$ProtectionParameter)
KeyStore$Entry java.security.KeyStoreSpi.engineGetEntry(String,KeyStore$ProtectionParameter)
KeyStore$ProtectionParameter java.security.KeyStore$Builder$BuilderImpl.getProtectionParameter(String)
KeyStore$ProtectionParameter java.security.KeyStore$Builder$TmpLSParameter.getProtectionParameter()
KeyStyle com.android.inputmethod.keyboard.internal.KeyStylesSet.getKeyStyle(TypedArray,XmlPullParser)
Key[] com.android.inputmethod.keyboard.Keyboard.getNearestKeys(int,int)
Key[] com.android.inputmethod.keyboard.ProximityInfo.getNearestKeys(int,int)
Keyboard com.android.inputmethod.keyboard.KeyDetector.getKeyboard()
Keyboard com.android.inputmethod.keyboard.KeyboardLayoutSet.getKeyboard(int)
Keyboard com.android.inputmethod.keyboard.KeyboardSwitcher.getKeyboard()
Keyboard com.android.inputmethod.keyboard.KeyboardView.getKeyboard()
KeyboardActionListener com.android.inputmethod.keyboard.MainKeyboardView.getKeyboardActionListener()
KeyboardActionListener com.android.inputmethod.keyboard.MoreKeysKeyboardView.getKeyboardActionListener()
KeyboardActionListener com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2.getKeyboardActionListener()
KeyboardActionListener com.android.inputmethod.latin.suggestions.MoreSuggestionsView.getKeyboardActionListener()
KeyboardLayout android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayout(String)
KeyboardLayout android.hardware.input.InputManager.getKeyboardLayout(String)
KeyboardLayout com.android.server.input.InputManagerService.getKeyboardLayout(String)
KeyboardLayoutSet$Builder com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder.setSubtype(InputMethodSubtype)
KeyboardLayout[] android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayouts()
KeyboardLayout[] android.hardware.input.InputManager.getKeyboardLayouts()
KeyboardLayout[] com.android.server.input.InputManagerService.getKeyboardLayouts()
KeyboardSwitcher com.android.inputmethod.keyboard.KeyboardSwitcher.getInstance()
KeyboardView$OnKeyboardActionListener android.inputmethodservice.KeyboardView.getOnKeyboardActionListener()
KeyguardActivityLauncher$CameraWidgetInfo com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher.getCameraWidgetInfo()
KeyguardManager com.android.internal.policy.impl.PhoneFallbackEventHandler.getKeyguardManager()
KeyguardManager com.android.phone.PhoneGlobals.getKeyguardManager()
KeyguardManager$KeyguardLock android.app.KeyguardManager.newKeyguardLock(String)
KeyguardSecurityCallback com.android.internal.policy.impl.keyguard.KeyguardAbsKeyInputView.getCallback()
KeyguardSecurityCallback com.android.internal.policy.impl.keyguard.KeyguardHostView$7.getCallback()
KeyguardSecurityCallback com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper.getCallback()
KeyguardSecurityCallback com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3.getCallback()
KeyguardSecurityCallback com.android.internal.policy.impl.keyguard.KeyguardSelectorView.getCallback()
KeyguardSecurityModel$SecurityMode com.android.internal.policy.impl.keyguard.KeyguardSecurityModel.getAlternateFor(KeyguardSecurityModel$SecurityMode)
KeyguardSecurityModel$SecurityMode com.android.internal.policy.impl.keyguard.KeyguardSecurityModel.getBackupSecurityMode(KeyguardSecurityModel$SecurityMode)
KeyguardSecurityModel$SecurityMode com.android.internal.policy.impl.keyguard.KeyguardSecurityModel.getSecurityMode()
KeyguardSecurityView com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper.getSecurityView()
KeyguardSecurityViewFlipper com.android.internal.policy.impl.keyguard.KeyguardSecurityContainer.getFlipper()
KeyguardUpdateMonitor com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getInstance(Context)
KeyguardWidgetFrame com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.getWidgetPageAt(int)
LabelDialogFragment com.android.deskclock.LabelDialogFragment.newInstance(Alarm,String)
LabelDialogFragment com.android.deskclock.LabelDialogFragment.newInstance(TimerObj,String,String)
LatinIME$BatchInputUpdater com.android.inputmethod.latin.LatinIME$BatchInputUpdater.getInstance()
LauncherAppWidgetHost com.android.launcher2.Launcher.getAppWidgetHost()
LauncherModel com.android.launcher2.Launcher.getModel()
LauncherModel com.android.launcher2.LauncherApplication.getModel()
LauncherProvider com.android.launcher2.LauncherApplication.getLauncherProvider()
Layout android.widget.TextView.getHintLayout()
Layout$Alignment android.text.Layout.getAlignment()
Layout$Alignment android.text.Layout.getParagraphAlignment(int)
Layout$Alignment android.text.style.AlignmentSpan$Standard.getAlignment()
Layout$Directions android.text.BoringLayout.getLineDirections(int)
Layout$Directions android.text.DynamicLayout.getLineDirections(int)
Layout$Directions android.text.StaticLayout.getLineDirections(int)
LayoutInflater android.view.ViewStub.getLayoutInflater()
LayoutInflater$Factory android.view.LayoutInflater.getFactory()
LayoutInflater$Factory2 android.view.LayoutInflater.getFactory2()
LayoutInflater$Filter android.view.LayoutInflater.getFilter()
LayoutManager com.android.mms.layout.LayoutManager.getInstance()
LayoutModel com.android.mms.model.SlideshowModel.getLayout()
LayoutParameters com.android.mms.layout.LayoutManager.getLayoutParameters()
Learner android.gesture.GestureLibrary.getLearner()
Learner android.gesture.GestureStore.getLearner()
LegacyVpnInfo com.android.server.ConnectivityService.getLegacyVpnInfo()
LegacyVpnInfo com.android.server.connectivity.Vpn.getLegacyVpnInfo()
LightCycleHelper$PanoramaMetadata com.android.gallery3d.util.LightCycleHelper.getPanoramaMetadata(Context,Uri)
LightCycleHelper$PanoramaViewHelper com.android.gallery3d.app.AbstractGalleryActivity.getPanoramaViewHelper()
LightsService$Light com.android.server.LightsService.getLight(int)
LinkAddress android.net.InterfaceConfiguration.getLinkAddress()
LinkCapabilities android.bluetooth.BluetoothTetheringDataTracker.getLinkCapabilities()
LinkCapabilities android.net.BaseNetworkStateTracker.getLinkCapabilities()
LinkCapabilities android.net.DummyDataStateTracker.getLinkCapabilities()
LinkCapabilities android.net.EthernetDataTracker.getLinkCapabilities()
LinkCapabilities android.net.MobileDataStateTracker.getLinkCapabilities()
LinkCapabilities android.net.wifi.WifiStateTracker.getLinkCapabilities()
LinkProperties android.bluetooth.BluetoothTetheringDataTracker.getLinkProperties()
LinkProperties android.net.BaseNetworkStateTracker.getLinkProperties()
LinkProperties android.net.DummyDataStateTracker.getLinkProperties()
LinkProperties android.net.EthernetDataTracker.getLinkProperties()
LinkProperties android.net.MobileDataStateTracker.getLinkProperties()
LinkProperties android.net.wifi.WifiConfigStore.getLinkProperties(int)
LinkProperties android.net.wifi.WifiStateTracker.getLinkProperties()
LinkProperties com.android.internal.telephony.sip.SipPhone.getLinkProperties(String)
LinkProperties com.android.server.ConnectivityService.getActiveLinkProperties()
LinkProperties com.android.server.ConnectivityService.getLinkProperties(int)
LinkedHashSet com.android.calendar.event.EditEventHelper.getAddressesFromList(String,Rfc822Validator)
List android.app.ActivityManager.getRecentTasksForUser(int,int,int)
List android.app.ActivityManagerProxy.getRecentTasks(int,int,int)
List android.app.ApplicationPackageManager.getInstalledPackages(int,int)
List android.app.ApplicationPackageManager.queryBroadcastReceivers(Intent,int,int)
List android.app.ApplicationPackageManager.queryIntentActivitiesAsUser(Intent,int,int)
List android.app.ApplicationPackageManager.queryIntentServicesAsUser(Intent,int,int)
List android.app.ContextImpl$ApplicationContentResolver.getPeriodicSyncs(Account,String)
List android.app.admin.IDevicePolicyManager$Stub$Proxy.getActiveAdmins(int)
List android.appwidget.AppWidgetManager.getInstalledProviders(int)
List android.bluetooth.IBluetoothHealth$Stub$Proxy.getConnectedHealthDevices()
List android.bluetooth.IBluetoothHealth$Stub$Proxy.getHealthDevicesMatchingConnectionStates(int[])
List android.bluetooth.IBluetoothInputDevice$Stub$Proxy.getConnectedDevices()
List android.bluetooth.IBluetoothInputDevice$Stub$Proxy.getDevicesMatchingConnectionStates(int[])
List android.bluetooth.IBluetoothPan$Stub$Proxy.getConnectedDevices()
List android.bluetooth.IBluetoothPan$Stub$Proxy.getDevicesMatchingConnectionStates(int[])
List android.content.ContentService.getCurrentSyncs()
List android.content.ContentService.getPeriodicSyncs(Account,String)
List android.content.SyncStorageEngine.getCurrentSyncs(int)
List android.content.SyncStorageEngine.getPeriodicSyncs(Account,int,String)
List android.content.pm.IPackageManager$Stub$Proxy.queryIntentActivities(Intent,String,int,int)
List android.content.pm.IPackageManager$Stub$Proxy.queryIntentActivityOptions(ComponentName,Intent[],String[],Intent,String,int,int)
List android.content.pm.IPackageManager$Stub$Proxy.queryIntentReceivers(Intent,String,int,int)
List android.content.pm.IPackageManager$Stub$Proxy.queryIntentServices(Intent,String,int,int)
List android.hardware.SystemSensorManager$ListenerDelegate.getSensors()
List android.hardware.SystemSensorManager.getFullSensorList()
List android.media.MediaRouter$RouteCategory.getRoutes(List)
List android.media.videoeditor.MediaItem.getAllEffects()
List android.media.videoeditor.MediaItem.getAllOverlays()
List android.media.videoeditor.Transition.isEffectandOverlayOverlapping(MediaItem,MediaArtistNativeHelper$ClipSettings,int)
List android.media.videoeditor.VideoEditorImpl.getAllAudioTracks()
List android.media.videoeditor.VideoEditorImpl.getAllMediaItems()
List android.media.videoeditor.VideoEditorImpl.getAllTransitions()
List android.net.DnsPinger.getDnsList()
List android.net.wifi.WifiConfigStore.getConfiguredNetworks()
List android.net.wifi.WifiStateMachine.syncGetScanResultsList()
List android.net.wifi.p2p.nsd.WifiP2pServiceInfo.getSupplicantQueryList()
List android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse.getUniqueServiceNames()
List android.os.IUserManager$Stub$Proxy.getUsers(boolean)
List android.os.UserManager.getUsers()
List android.os.UserManager.getUsers(boolean)
List android.os.storage.StorageManager.access$000(StorageManager)
List android.preference.PreferenceActivity.getHeaders()
List android.server.search.SearchManagerService.getGlobalSearchActivities()
List android.server.search.SearchManagerService.getSearchablesInGlobalSearch()
List android.telephony.TelephonyManager.getAllCellInfo()
List android.test.mock.MockContentResolver.getPeriodicSyncs(Account,String)
List android.view.accessibility.AccessibilityInteractionClient.findAccessibilityNodeInfosByText(int,int,long,String)
List android.view.accessibility.AccessibilityNodeProvider.findAccessibilityNodeInfosByText(String,int)
List android.view.accessibility.IAccessibilityManager$Stub$Proxy.getEnabledAccessibilityServiceList(int,int)
List android.view.accessibility.IAccessibilityManager$Stub$Proxy.getInstalledAccessibilityServiceList(int)
List com.adobe.xmp.impl.XMPNode.getUnmodifiableChildren()
List com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder.getConnectedDevices()
List com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.a2dp.A2dpService.getConnectedDevices()
List com.android.bluetooth.a2dp.A2dpService.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.a2dp.A2dpStateMachine.getConnectedDevices()
List com.android.bluetooth.a2dp.A2dpStateMachine.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder.getConnectedHealthDevices()
List com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder.getHealthDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.hdp.HealthService.getConnectedHealthDevices()
List com.android.bluetooth.hdp.HealthService.getHealthDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.hdp.HealthService.lookupHealthDevicesMatchingStates(int[])
List com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.getConnectedDevices()
List com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.hfp.HeadsetService.getConnectedDevices()
List com.android.bluetooth.hfp.HeadsetStateMachine.getConnectedDevices()
List com.android.bluetooth.hfp.HeadsetStateMachine.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.getConnectedDevices()
List com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.hid.HidService.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.pan.PanService$BluetoothPanBinder.getConnectedDevices()
List com.android.bluetooth.pan.PanService$BluetoothPanBinder.getDevicesMatchingConnectionStates(int[])
List com.android.bluetooth.pan.PanService.getConnectedDevices()
List com.android.bluetooth.pan.PanService.getDevicesMatchingConnectionStates(int[])
List com.android.browser.Controller.getTabs()
List com.android.browser.TabControl.getTabs()
List com.android.browser.search.SearchEngines.getSearchEngineInfos(Context)
List com.android.browser.view.PieItem.getItems()
List com.android.camera.FocusOverlayManager.getFocusAreas()
List com.android.camera.FocusOverlayManager.getMeteringAreas()
List com.android.camera.ui.PieItem.getItems()
List com.android.contacts.editor.AggregationSuggestionEngine.getSuggestions()
List com.android.contacts.editor.ContactEditorUtils.getSavedAccounts()
List com.android.contacts.list.AccountFilterActivity.access$100(Context)
List com.android.contacts.model.AccountTypeManagerImpl.getAccountTypes(boolean)
List com.android.contacts.model.AccountTypeManagerImpl.getAccounts(boolean)
List com.android.contacts.model.AccountTypeManagerImpl.getGroupWritableAccounts()
List com.android.contacts.model.RawContact.getDataItems()
List com.android.contacts.model.account.AccountType.getExtensionPackageNames()
List com.android.contacts.model.account.BaseAccountType$KindParser.parseDataKindTag(Context,XmlPullParser,AttributeSet)
List com.android.contacts.model.account.ExternalAccountType.getExtensionPackageNames()
List com.android.contacts.model.account.GoogleAccountType.getExtensionPackageNames()
List com.android.contacts.util.StreamItemEntry.getPhotos()
List com.android.contacts.voicemail.VoicemailStatusHelperImpl.getStatusMessages(Cursor)
List com.android.email.mail.store.ImapConnection.executeSimpleCommand(String,boolean)
List com.android.email.mail.store.ImapConnection.getCommandResponses()
List com.android.ex.chips.BaseRecipientAdapter.access$400(BaseRecipientAdapter,boolean,LinkedHashMap,List,Set)
List com.android.ex.chips.BaseRecipientAdapter.access$600(BaseRecipientAdapter,Cursor)
List com.android.ex.chips.BaseRecipientAdapter.access$900(BaseRecipientAdapter)
List com.android.ex.chips.BaseRecipientAdapter.access$902(BaseRecipientAdapter,List)
List com.android.gallery3d.data.MtpClient.getDeviceList()
List com.android.gallery3d.data.MtpClient.getObjectList(String,int,int)
List com.android.gallery3d.data.MtpClient.getStorageList(String)
List com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.getInstalledProviders(int)
List com.android.internal.telephony.CallManager.getAllPhones()
List com.android.internal.telephony.CallManager.getBackgroundCalls()
List com.android.internal.telephony.CallManager.getBgCallConnections()
List com.android.internal.telephony.CallManager.getFgCallConnections()
List com.android.internal.telephony.CallManager.getForegroundCalls()
List com.android.internal.telephony.CallManager.getPendingMmiCodes(Phone)
List com.android.internal.telephony.CallManager.getRingingCalls()
List com.android.internal.telephony.ITelephony$Stub$Proxy.getAllCellInfo()
List com.android.internal.telephony.PhoneBase.getAllCellInfo()
List com.android.internal.telephony.PhoneProxy.getAllCellInfo()
List com.android.internal.telephony.ServiceStateTracker.getAllCellInfo()
List com.android.internal.telephony.cdma.CdmaLteServiceStateTracker.getAllCellInfo()
List com.android.internal.telephony.cdma.CdmaServiceStateTracker.getAllCellInfo()
List com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager.getAdnRecordsInEf(int)
List com.android.internal.telephony.cdma.RuimSmsInterfaceManager.access$200(RuimSmsInterfaceManager)
List com.android.internal.telephony.cdma.RuimSmsInterfaceManager.access$202(RuimSmsInterfaceManager,List)
List com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager.getAdnRecordsInEf(int)
List com.android.internal.telephony.gsm.SimSmsInterfaceManager.access$200(SimSmsInterfaceManager)
List com.android.internal.telephony.gsm.SimSmsInterfaceManager.access$202(SimSmsInterfaceManager,List)
List com.android.internal.telephony.sip.SipPhone.getAllCellInfo()
List com.android.internal.telephony.sip.SipPhone.getCurrentDataConnectionList()
List com.android.internal.telephony.sip.SipPhone.getPendingMmiCodes()
List com.android.internal.telephony.sip.SipPhoneBase.getAllCellInfo()
List com.android.internal.telephony.test.SimulatedGsmCallState.getClccLines()
List com.android.internal.telephony.test.SimulatedGsmCallState.getDriverCalls()
List com.android.mms.data.Contact$ContactsCache.getContactInfoForPhoneUris(Parcelable[])
List com.android.mms.data.Contact.getByPhoneUris(Parcelable[])
List com.android.mms.data.RecipientIdCache.getAddresses(String)
List com.android.mms.ui.AttachmentTypeSelectorAdapter.getData(int,Context)
List com.android.mms.ui.LayoutSelectorAdapter.getData(Context)
List com.android.mms.ui.RecipientsEditor$RecipientsEditorTokenizer.getNumbers()
List com.android.mms.ui.RecipientsEditor.getNumbers()
List com.android.org.bouncycastle.util.io.pem.PemObject.getHeaders()
List com.android.phone.PhoneInterfaceManager.getAllCellInfo()
List com.android.phone.PhoneInterfaceManager.getNeighboringCellInfo()
List com.android.phone.sip.SipProfileDb.retrieveSipProfileList()
List com.android.providers.contacts.SearchIndexManager.splitIntoFtsTokens(String)
List com.android.server.AppWidgetService.getInstalledProviders(int)
List com.android.server.AppWidgetServiceImpl.getInstalledProviders(int)
List com.android.server.BackupManagerService.allAgentPackages()
List com.android.server.DevicePolicyManagerService.getActiveAdmins(int)
List com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager.getSortedInputMethodAndSubtypeList()
List com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager.getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)
List com.android.server.InputMethodManagerService$InputMethodSettings.getEnabledInputMethodAndSubtypeHashCodeListLocked()
List com.android.server.InputMethodManagerService$InputMethodSettings.getEnabledInputMethodListLocked()
List com.android.server.InputMethodManagerService$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(InputMethodInfo)
List com.android.server.InputMethodManagerService.getEnabledInputMethodList()
List com.android.server.InputMethodManagerService.getEnabledInputMethodSubtypeList(InputMethodInfo,boolean)
List com.android.server.InputMethodManagerService.getEnabledInputMethodSubtypeListLocked(InputMethodInfo,boolean)
List com.android.server.InputMethodManagerService.getInputMethodList()
List com.android.server.InputMethodManagerService.getShortcutInputMethodsAndSubtypes()
List com.android.server.LocationManagerService.getAllProviders()
List com.android.server.LocationManagerService.getProviders(Criteria,boolean)
List com.android.server.WifiService.getConfiguredNetworks()
List com.android.server.WifiService.getScanResults()
List com.android.server.accessibility.AccessibilityManagerService.getEnabledAccessibilityServiceList(int,int)
List com.android.server.accessibility.AccessibilityManagerService.getInstalledAccessibilityServiceList(int)
List com.android.server.am.ActiveServices.getRunningServiceInfoLocked(int,int)
List com.android.server.am.ActivityManagerService.getProcessesInErrorState()
List com.android.server.am.ActivityManagerService.getRecentTasks(int,int,int)
List com.android.server.am.ActivityManagerService.getRunningAppProcesses()
List com.android.server.am.ActivityManagerService.getRunningExternalApplications()
List com.android.server.am.ActivityManagerService.getServices(int,int)
List com.android.server.am.ActivityManagerService.getTasks(int,int,IThumbnailReceiver)
List com.android.server.location.LocationBasedCountryDetector.getEnabledProviders()
List com.android.server.pm.PackageManagerService.getAllPermissionGroups(int)
List com.android.server.pm.PackageManagerService.getPersistentApplications(int)
List com.android.server.pm.PackageManagerService.getPreferredPackages(int)
List com.android.server.pm.PackageManagerService.queryIntentActivities(Intent,String,int,int)
List com.android.server.pm.PackageManagerService.queryIntentActivityOptions(ComponentName,Intent[],String[],Intent,String,int,int)
List com.android.server.pm.PackageManagerService.queryIntentReceivers(Intent,String,int,int)
List com.android.server.pm.PackageManagerService.queryIntentServices(Intent,String,int,int)
List com.android.server.pm.UserManagerService.getUsers(boolean)
List com.android.uiautomator.testrunner.TestCaseCollector.getTestCases()
List com.android.vcard.VCardProperty.getValueList()
List com.android.videoeditor.BaseAdapterWithImages.access$100(BaseAdapterWithImages)
List com.android.videoeditor.service.VideoEditorProject.getAudioTracks()
List com.android.videoeditor.service.VideoEditorProject.getDownloads()
List com.android.videoeditor.service.VideoEditorProject.getMediaItems()
List com.coremedia.iso.boxes.CompositionTimeToSample.getEntries()
List com.coremedia.iso.boxes.SampleDependencyTypeBox.getEntries()
List com.coremedia.iso.boxes.SampleToChunkBox.getEntries()
List com.coremedia.iso.boxes.TimeToSampleBox.getEntries()
List com.coremedia.iso.boxes.fragment.TrackRunBox.getEntries()
List com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
List com.google.common.collect.ArrayListMultimap.get(Object)
List com.google.common.collect.ImmutableList.subList(int,int)
List com.google.common.collect.Lists$ReverseList.getForwardList()
List com.googlecode.mp4parser.AbstractContainerBox.getBoxes()
List com.googlecode.mp4parser.AbstractContainerBox.getBoxes(Class)
List com.googlecode.mp4parser.AbstractContainerBox.getBoxes(Class,boolean)
List com.googlecode.mp4parser.FullContainerBox.getBoxes()
List com.googlecode.mp4parser.FullContainerBox.getBoxes(Class)
List com.googlecode.mp4parser.FullContainerBox.getBoxes(Class,boolean)
List com.googlecode.mp4parser.authoring.Movie.getTracks()
List com.googlecode.mp4parser.authoring.Mp4TrackImpl.getCompositionTimeEntries()
List com.googlecode.mp4parser.authoring.Mp4TrackImpl.getDecodingTimeEntries()
List com.googlecode.mp4parser.authoring.Mp4TrackImpl.getSampleDependencies()
List com.googlecode.mp4parser.authoring.Mp4TrackImpl.getSamples()
List com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getCompositionTimeEntries()
List com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getDecodingTimeEntries()
List com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getSampleDependencies()
List com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getSamples()
List java.security.Security$SecurityDoor.getAliases(Provider$Service)
List java.security.cert.PKIXParameters.getCertPathCheckers()
List java.security.cert.PKIXParameters.getCertStores()
List org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore.getCertificateChain(X509Certificate)
List org.apache.http.impl.cookie.CookieSpecBase.parse(HeaderElement[],CookieOrigin)
List org.apache.http.impl.cookie.RFC2965Spec.parse(Header,CookieOrigin)
ListAdapter com.android.browser.UrlInputView.getAdapter()
ListIterator com.google.common.collect.ImmutableList.listIterator(int)
ListView com.android.contacts.list.ContactEntryListFragment.getListView()
ListView com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog.getListView()
LoadedApk android.app.ActivityThread.getPackageInfo(String,CompatibilityInfo,int,int)
Loader android.app.LoaderManagerImpl.initLoader(int,Bundle,LoaderManager$LoaderCallbacks)
Loader android.app.LoaderManagerImpl.restartLoader(int,Bundle,LoaderManager$LoaderCallbacks)
Loader com.android.contacts.interactions.TestLoaderManager.getLoader(int)
Loader com.android.contacts.interactions.TestLoaderManager.initLoader(int,Bundle,LoaderManager$LoaderCallbacks)
Loader com.android.contacts.interactions.TestLoaderManager.restartLoader(int,Bundle,LoaderManager$LoaderCallbacks)
Loader com.android.contacts.list.ContactEntryListFragment.onCreateLoader(int,Bundle)
LoaderManager com.android.contacts.interactions.ContactDeletionInteraction.getLoaderManager()
LoaderManager com.android.contacts.list.ContactEntryListFragment.getLoaderManager()
LoaderManagerImpl android.app.Activity.getLoaderManager(String,boolean,boolean)
LocalSessionStorage com.google.android.apps.lightcycle.storage.LocalFileStorageManager.getLocalSessionStorage()
LocalSocketAddress$Namespace android.net.LocalSocketAddress.getNamespace()
Locale android.graphics.Paint.getTextLocale()
Locale android.text.style.LocaleSpan.getLocale()
Locale android.widget.TextView.getTextLocale()
Locale com.android.inputmethod.latin.LocaleUtils.constructLocaleFromString(String)
Locale com.android.inputmethod.latin.SubtypeLocale.getSubtypeLocale(InputMethodSubtype)
Locale com.android.inputmethod.latin.SubtypeSwitcher.getCurrentSubtypeLocale()
Locale com.android.internal.app.LocalePicker$LocaleInfo.getLocale()
Locale com.android.providers.contacts.ContactsProvider2.getLocale()
Location android.location.ILocationManager$Stub$Proxy.getLastLocation(LocationRequest,String)
Location android.location.Location.getExtraLocation(String)
Location android.location.LocationManager.getLastLocation()
Location com.android.camera.LocationManager.getCurrentLocation()
Location com.android.server.LocationManagerService.getLastLocation(LocationRequest,String)
Location com.android.server.location.LocationBasedCountryDetector.getLastKnownLocation()
Location com.android.server.location.LocationFudger.getOrCreate(Location)
Location com.google.android.apps.lightcycle.util.LocationProvider.getCurrentLocation()
LocationRequest android.location.LocationRequest.setExpireIn(long)
LockPatternUtils com.android.internal.policy.impl.keyguard.KeyguardHostView$7.getLockPatternUtils()
LockPatternUtils com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3.getLockPatternUtils()
Log org.apache.james.mime4j.LogFactory.getLog(Class)
LogEntries$DeviceInfoEntry com.android.inputmethod.latin.LogEntries$DeviceInfoEntry.getInstance(long,Context)
Logger$Stream org.apache.harmony.xnet.provider.jsse.Logger.getStream(String)
Long com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta.getId()
Long com.android.contacts.model.RawContact.getId()
Long com.android.contacts.model.RawContactDelta$ValuesDelta.getAsLong(String)
Long com.android.contacts.model.RawContactDelta$ValuesDelta.getGroupRowId()
Long com.android.contacts.model.RawContactDelta$ValuesDelta.getId()
Long com.android.contacts.model.RawContactDelta.getRawContactId()
Long com.android.contacts.model.RawContactDeltaList.getRawContactId(int)
Long com.android.emailcommon.utility.Utility$3.get(Cursor,int)
Long com.android.emailcommon.utility.Utility.getFirstRowLong(Context,Uri,String[],String,String[],String,int,Long)
Long com.android.providers.contacts.ContactsDatabaseHelper.getAccountIdOrNull(AccountWithDataSet)
Long com.android.providers.contacts.TransactionContext.getAccountIdOrNullForRawContact(long)
Long com.android.providers.downloads.RealSystemFacade.getMaxBytesOverMobile()
Long com.android.providers.downloads.RealSystemFacade.getRecommendedMaxBytesOverMobile()
Looper android.webkit.WebViewClassic$PrivateHandler.getUiLooper()
Looper android.webkit.WebViewCore$EventHub.getWebKitLooper()
Looper com.android.browser.BackgroundHandler.getLooper()
Looper com.android.email.NotificationController$NotificationThread.getLooper()
Looper com.android.internal.view.WindowManagerPolicyThread.getLooper()
Looper com.android.phone.Ringer$Worker.getLooper()
Looper com.android.server.sip.SipService.access$1800()
MagnificationSpec com.android.server.wm.WindowManagerService.getDisplayMagnificationSpecLocked(int)
MagnificationSpec com.android.server.wm.WindowState.getWindowMagnificationSpecLocked()
Mailbox com.android.email.Controller.getAttachmentMailbox()
Mailbox com.android.email.Controller.getSearchMailbox(long)
Mailbox com.android.email.activity.MessageListFragment.getMailbox()
Mailbox com.android.email.activity.MessageListFragment.getSearchedMailbox()
Mailbox com.android.email.activity.MessagesAdapter$SearchResultsCursor.getSearchedMailbox()
Mailbox com.android.emailcommon.provider.Mailbox.restoreMailboxOfType(Context,long,int)
Mailbox com.android.emailcommon.provider.Mailbox.restoreMailboxWithId(Context,long)
Mailbox org.apache.james.mime4j.field.address.MailboxList.get(int)
MailboxListFragment com.android.email.activity.MailboxListFragment.newInstance(long,long,boolean)
MailboxListFragment com.android.email.activity.UIControllerBase.getMailboxListFragment()
MainKeyboardView com.android.inputmethod.keyboard.KeyboardSwitcher.getMainKeyboardView()
ManagedClientConnection com.google.android.picasastore.HttpUtils$MetricsTrackingConnectionManager$1.getConnection(long,TimeUnit)
Manifest$Chunk java.util.jar.Manifest.getChunk(String)
ManifestDigest android.content.pm.VerificationParams.getManifestDigest()
ManifestDigest com.android.server.pm.PackageManagerService$InstallParams.getManifestDigest()
Map android.media.videoeditor.Overlay.getUserAttributes()
Map android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse.getTxtRecord()
Map com.android.camera.ComboPreferences.getAll()
Map com.android.contacts.model.AccountTypeManagerImpl$InvitableAccountTypeCache.getCachedValue()
Map com.android.contacts.model.AccountTypeManagerImpl.getUsableInvitableAccountTypes()
Map com.android.contacts.util.NameConverter.displayNameToStructuredName(Context,String)
Map com.android.email.provider.ContentCache.getSnapshot()
Map com.android.internal.os.BatteryStatsImpl$Uid$Pkg.getServiceStats()
Map com.android.internal.os.BatteryStatsImpl$Uid.getPackageStats()
Map com.android.internal.os.BatteryStatsImpl$Uid.getProcessStats()
Map com.android.internal.os.BatteryStatsImpl$Uid.getSensorStats()
Map com.android.internal.os.BatteryStatsImpl$Uid.getWakelockStats()
Map com.android.internal.os.BatteryStatsImpl.getKernelWakelockStats()
Map com.android.mms.model.AudioModel.getExtras()
Map com.android.vcard.VCardProperty.getParameterMap()
Map com.coremedia.iso.boxes.mdat.SampleList.getOffsets(MovieFragmentBox,long,TrackExtendsBox)
Map com.google.android.gsf.Gservices.getStringsByPrefix(ContentResolver,String[])
Map com.google.android.picasasync.AlbumCollectorJson.getEntryFieldMap()
Map com.google.android.picasasync.PhotoCollectorJson.getEntryFieldMap()
Map com.google.common.collect.AbstractMultimap.asMap()
Map com.google.common.collect.AbstractMultimap.backingMap()
Map com.google.common.collect.ForwardingMap$StandardKeySet.map()
Map com.google.common.collect.ForwardingMap$StandardValues.map()
Map com.google.common.collect.ForwardingMultimap.asMap()
Map com.google.common.collect.Multimaps$FilteredMultimap.asMap()
Map org.apache.http.impl.client.AbstractAuthenticationHandler.parseChallenges(Header[])
Map org.apache.http.impl.client.DefaultProxyAuthenticationHandler.getChallenges(HttpResponse,HttpContext)
Map org.apache.http.impl.client.DefaultTargetAuthenticationHandler.getChallenges(HttpResponse,HttpContext)
MapMaker$RemovalListener com.google.common.collect.GenericMapMaker.getRemovalListener()
MapMakerInternalMap$EntryFactory com.google.common.collect.MapMakerInternalMap$EntryFactory.getFactory(MapMakerInternalMap$Strength,boolean,boolean)
MapMakerInternalMap$ReferenceEntry com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.ComputingConcurrentHashMap$ComputedReference.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$1.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getNext()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$EntryFactory.copyEntry(MapMakerInternalMap$Segment,MapMakerInternalMap$ReferenceEntry,MapMakerInternalMap$ReferenceEntry)
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$EvictionQueue$1.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$EvictionQueue$1.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$NullEntry.getNext()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$NullEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$NullEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$NullEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$NullEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$Segment.getEntry(Object,int)
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$Segment.getFirst(int)
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$Segment.getLiveEntry(Object,int)
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEntry.getNext()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$SoftValueReference.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEntry.getNext()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$StrongValueReference.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEntry.getNext()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry.getNextEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry.getNextExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry.getPreviousEvictable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry.getPreviousExpirable()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap$WeakValueReference.getEntry()
MapMakerInternalMap$ReferenceEntry com.google.common.collect.MapMakerInternalMap.getEntry(Object)
MapMakerInternalMap$Strength com.google.common.collect.MapMaker.getKeyStrength()
MapMakerInternalMap$Strength com.google.common.collect.MapMaker.getValueStrength()
MapMakerInternalMap$ValueReference com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getValueReference()
MapMakerInternalMap$ValueReference com.google.common.collect.MapMakerInternalMap$NullEntry.getValueReference()
MapMakerInternalMap$ValueReference com.google.common.collect.MapMakerInternalMap$SoftEntry.getValueReference()
MapMakerInternalMap$ValueReference com.google.common.collect.MapMakerInternalMap$StrongEntry.getValueReference()
MapMakerInternalMap$ValueReference com.google.common.collect.MapMakerInternalMap$WeakEntry.getValueReference()
MapMakerInternalMap$WriteThroughEntry com.google.common.collect.MapMakerInternalMap$HashIterator.nextEntry()
Matrix android.view.TextureView.getTransform(Matrix)
Matrix com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getFlipMatrix(float,float)
Matrix com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getFlipMatrix(float,float,GeometryMetadata$FLIP)
Matrix com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getHorizontalMatrix(float)
Matrix com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getMatrixOriginalOrientation(int,float,float)
Matrix com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getOriginalToScreen(boolean,float,float,float,float)
Matrix com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getVerticalMatrix(float)
Matrix com.android.gallery3d.filtershow.imageshow.ImageCrop.getCropBoundDisplayMatrix()
Matrix com.android.gallery3d.filtershow.imageshow.ImageCrop.getCropRotationMatrix(float,RectF)
Matrix com.android.gallery3d.filtershow.imageshow.ImageGeometry.getGeoMatrix(RectF,boolean)
Matrix com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalGeoFlipMatrix(float,float)
Matrix com.android.gallery3d.ui.GLRootView.getCompensationMatrix()
MediaArtistNativeHelper android.media.videoeditor.MediaItem.getNativeContext()
MediaArtistNativeHelper android.media.videoeditor.VideoEditorImpl.getNativeContext()
MediaArtistNativeHelper$ClipSettings android.media.videoeditor.MediaImageItem.getImageClipProperties()
MediaArtistNativeHelper$ClipSettings android.media.videoeditor.MediaItem.getClipSettings()
MediaArtistNativeHelper$ClipSettings android.media.videoeditor.MediaVideoItem.getVideoClipProperties()
MediaArtistNativeHelper$EffectSettings android.media.videoeditor.MediaArtistNativeHelper.getEffectSettings(EffectColor)
MediaArtistNativeHelper$EffectSettings android.media.videoeditor.MediaArtistNativeHelper.getOverlaySettings(OverlayFrame)
MediaArtistNativeHelper$TransitionSettings android.media.videoeditor.Transition.getTransitionSettings()
MediaArtistNativeHelper$Version android.media.videoeditor.MediaArtistNativeHelper$Version.getVersion()
MediaBox com.coremedia.iso.boxes.TrackBox.getMediaBox()
MediaDetails com.android.gallery3d.app.AlbumPage$MyDetailsSource.getDetails()
MediaDetails com.android.gallery3d.app.AlbumSetPage$MyDetailsSource.getDetails()
MediaDetails com.android.gallery3d.app.PhotoPage$MyDetailsSource.getDetails()
MediaDetails com.android.gallery3d.data.LocalImage.getDetails()
MediaDetails com.android.gallery3d.data.LocalMediaItem.getDetails()
MediaDetails com.android.gallery3d.data.LocalVideo.getDetails()
MediaDetails com.android.gallery3d.data.MediaObject.getDetails()
MediaDetails com.android.gallery3d.data.MediaSet.getDetails()
MediaDetails com.android.gallery3d.data.MtpImage.getDetails()
MediaDetails com.android.gallery3d.data.UriImage.getDetails()
MediaDetails com.android.gallery3d.picasasource.PicasaImage.getDetails()
MediaFile$MediaFileType android.media.MediaFile.getFileType(String)
MediaHeaderBox com.coremedia.iso.boxes.MediaBox.getMediaHeaderBox()
MediaInformationBox com.coremedia.iso.boxes.MediaBox.getMediaInformationBox()
MediaItem android.media.videoeditor.Effect.getMediaItem()
MediaItem android.media.videoeditor.Overlay.getMediaItem()
MediaItem android.media.videoeditor.Transition.getAfterMediaItem()
MediaItem android.media.videoeditor.Transition.getBeforeMediaItem()
MediaItem android.media.videoeditor.VideoEditorImpl.getMediaItem(String)
MediaItem com.android.gallery3d.app.AlbumDataLoader.get(int)
MediaItem com.android.gallery3d.app.AlbumSetDataLoader.getCoverItem(int)
MediaItem com.android.gallery3d.app.PhotoDataAdapter.getMediaItem(int)
MediaItem com.android.gallery3d.app.SinglePhotoDataAdapter.getMediaItem(int)
MediaItem com.android.gallery3d.app.SlideshowPage$SequentialSource.getMediaItem(int)
MediaItem com.android.gallery3d.app.SlideshowPage$ShuffleSource.getMediaItem(int)
MediaItem com.android.gallery3d.data.ClusterAlbum.getCoverMediaItem()
MediaItem com.android.gallery3d.data.Clustering.getClusterCover(int)
MediaItem com.android.gallery3d.data.FaceClustering$FaceCluster.getCover()
MediaItem com.android.gallery3d.data.FaceClustering.getClusterCover(int)
MediaItem com.android.gallery3d.data.LocalMergeAlbum$FetchCache.getItem(int)
MediaItem com.android.gallery3d.data.MediaSet.getCoverMediaItem()
MediaItem com.android.gallery3d.data.SingleItemAlbum.getItem()
MediaItem com.android.gallery3d.picasasource.PicasaAlbum.getCoverMediaItem()
MediaItem com.android.gallery3d.picasasource.PicasaSource.getFaceItem(Context,MediaItem,int)
MediaItem[] com.android.gallery3d.data.LocalAlbum.getMediaItemById(GalleryApp,boolean,ArrayList)
MediaLinearLayout com.android.videoeditor.VideoEditorActivity.getMediaLayout()
MediaModel com.android.mms.model.MediaModelFactory.getMediaModel(Context,SMILMediaElement,LayoutModel,PduBody)
MediaModel com.android.mms.model.SlideModel.get(int)
MediaModel com.android.mms.model.SlideModel.set(int,MediaModel)
MediaModel$MediaAction com.android.mms.model.MediaModel.getCurrentAction()
MediaObject com.android.gallery3d.data.DataManager.getMediaObject(Path)
MediaObject com.android.gallery3d.data.DataManager.getMediaObject(String)
MediaObject com.android.gallery3d.data.Path.getObject()
MediaPlayer$TrackInfo[] android.media.MediaPlayer.getTrackInfo()
MediaRouter$RouteCategory android.media.MediaRouter$RouteInfo.getCategory()
MediaRouter$RouteCategory android.media.MediaRouter.getCategoryAt(int)
MediaRouter$RouteCategory android.media.MediaRouter.getSystemAudioCategory()
MediaRouter$RouteGroup android.media.MediaRouter$RouteInfo.getGroup()
MediaRouter$RouteInfo android.media.MediaRouter$RouteGroup.getRouteAt(int)
MediaRouter$RouteInfo android.media.MediaRouter.getRouteAt(int)
MediaRouter$RouteInfo android.media.MediaRouter.getRouteAtStatic(int)
MediaRouter$RouteInfo android.media.MediaRouter.getSelectedRoute(int)
MediaRouter$RouteInfo android.media.MediaRouter.getSystemAudioRoute()
MediaScanner$FileEntry android.media.MediaScanner.makeEntryFor(String)
MediaSet com.android.gallery3d.app.AlbumSetDataLoader.getMediaSet(int)
MediaSet com.android.gallery3d.data.ClusterAlbumSet.getSubMediaSet(int)
MediaSet com.android.gallery3d.data.ComboAlbumSet.getSubMediaSet(int)
MediaSet com.android.gallery3d.data.DataManager.getMediaSet(Path)
MediaSet com.android.gallery3d.data.DataManager.getMediaSet(String)
MediaSet com.android.gallery3d.data.FilterTypeSet.getSubMediaSet(int)
MediaSet com.android.gallery3d.data.LocalAlbumSet.getSubMediaSet(int)
MediaSet com.android.gallery3d.data.MediaSet.getSubMediaSet(int)
MediaSet com.android.gallery3d.data.MtpDeviceSet.getSubMediaSet(int)
MediaSet com.android.gallery3d.picasasource.PicasaAlbumSet.getSubMediaSet(int)
MediaSet[] com.android.gallery3d.data.DataManager.getMediaSetsFromString(String)
Menu com.android.gallery3d.app.GalleryActionBar.getMenu()
MenuInflater com.android.gallery3d.app.ActivityState.getSupportMenuInflater()
Mesh$Primitive android.renderscript.Mesh.getPrimitive(int)
Message com.android.email.LegacyConversions.makeMessage(Context,EmailContent$Message)
Message com.android.email.mail.store.ImapFolder.getMessage(String)
Message com.android.email.mail.store.Pop3Store$Pop3Folder.getMessage(String)
MessageCommandButtonView com.android.email.activity.ThreePaneLayout.getInMessageCommandButtons()
MessageCommandButtonView com.android.email.activity.ThreePaneLayout.getMessageCommandButtons()
MessageDigest java.security.DigestInputStream.getMessageDigest()
MessageFileViewFragment com.android.email.activity.MessageFileView.getFragment()
MessageItem com.android.mms.ui.MessageListAdapter.getCachedMessageItem(String,long,Cursor)
MessageItem com.android.mms.ui.MessageListItem.getMessageItem()
MessageListContext com.android.email.activity.MessageListFragment.getListContext()
MessageListContext com.android.email.activity.MessageOrderManager.getListContext()
MessageListFragment com.android.email.activity.MessageListFragment.newInstance(MessageListContext)
MessageListFragment com.android.email.activity.UIControllerBase.getMessageListFragment()
MessageListItemCoordinates com.android.email.activity.MessageListItemCoordinates.forWidth(Context,int,boolean)
MessageOrderManager com.android.email.activity.UIControllerBase.getMessageOrderManager()
MessageViewFragment com.android.email.activity.MessageViewFragment.newInstance(long)
MessageViewFragment com.android.email.activity.UIControllerBase.getMessageViewFragment()
Message[] com.android.email.mail.store.ImapFolder.getMessages(SearchParams,Folder$MessageRetrievalListener)
Message[] com.android.email.mail.store.ImapFolder.getMessages(String[],Folder$MessageRetrievalListener)
Message[] com.android.email.mail.store.ImapFolder.getMessages(int,int,Folder$MessageRetrievalListener)
Message[] com.android.email.mail.store.ImapFolder.getMessagesInternal(String[],Folder$MessageRetrievalListener)
Message[] com.android.email.mail.store.Pop3Store$Pop3Folder.getMessages(SearchParams,Folder$MessageRetrievalListener)
Message[] com.android.email.mail.store.Pop3Store$Pop3Folder.getMessages(int,int,Folder$MessageRetrievalListener)
MessagingController com.android.email.MessagingController.getInstance(Context,Controller)
Messenger android.net.nsd.INsdManager$Stub$Proxy.getMessenger()
Messenger android.net.wifi.IWifiManager$Stub$Proxy.getWifiServiceMessenger()
Messenger android.net.wifi.IWifiManager$Stub$Proxy.getWifiStateMachineMessenger()
Messenger android.net.wifi.WifiManager.getWifiServiceMessenger()
Messenger android.net.wifi.WifiManager.getWifiStateMachineMessenger()
Messenger android.net.wifi.WifiStateMachine.getMessenger()
Messenger android.net.wifi.p2p.WifiP2pService.getMessenger()
Messenger com.android.server.NsdService.getMessenger()
Messenger com.android.server.WifiService.getWifiStateMachineMessenger()
MetaData$Fields com.android.providers.calendar.MetaData.getFieldsLocked()
Metadata android.media.MediaPlayer.getMetadata(boolean,boolean)
Method com.android.inputmethod.compat.CompatUtils.getMethod(Class,String,Class[])
MmiCode$State com.android.internal.telephony.cdma.CdmaMmiCode.getState()
MmiCode$State com.android.internal.telephony.gsm.GsmMmiCode.getState()
MmsApp com.android.mms.MmsApp.getApplication()
MmsSmsDatabaseHelper com.android.providers.telephony.MmsSmsDatabaseHelper.getInstance(Context)
Model com.android.mms.ui.Presenter.getModel()
MonkeyEvent com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl.getNextQueuedEvent()
MonkeyEvent com.android.commands.monkey.MonkeySourceNetwork.getNextEvent()
MonkeyEvent com.android.commands.monkey.MonkeySourceRandom.getNextEvent()
MonkeyEvent com.android.commands.monkey.MonkeySourceRandomScript.getNextEvent()
MonkeyEvent com.android.commands.monkey.MonkeySourceScript.getNextEvent()
MonkeySourceNetwork$MonkeyCommandReturn com.android.commands.monkey.MonkeySourceNetworkViews$GetChildren.query(AccessibilityNodeInfo,List)
MonkeySourceNetwork$MonkeyCommandReturn com.android.commands.monkey.MonkeySourceNetworkViews$GetViewsWithTextCommand.translateCommand(List,MonkeySourceNetwork$CommandQueue)
MonkeySourceNetwork$MonkeyCommandReturn com.android.commands.monkey.MonkeySourceNetworkViews$QueryViewCommand.translateCommand(List,MonkeySourceNetwork$CommandQueue)
MosaicFrameProcessor com.android.camera.MosaicFrameProcessor.getInstance()
MotionEvent android.webkit.WebViewInputDispatcher$TouchStream.getLastEvent()
MotionEvent com.android.server.accessibility.TouchExplorer$InjectedPointerTracker.getLastInjectedHoverEvent()
MotionEvent com.android.server.accessibility.TouchExplorer$InjectedPointerTracker.getLastInjectedHoverEventForClick()
MotionEvent com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getLastReceivedEvent()
MoveMessageToDialog com.android.email.activity.MoveMessageToDialog.newInstance(long[],Fragment)
MovieAudioTrack com.android.videoeditor.service.MovieTheme.getAudioTrack()
MovieAudioTrack com.android.videoeditor.service.VideoEditorProject.getAudioTrack(String)
MovieBox com.coremedia.iso.IsoFile.getMovieBox()
MovieEffect com.android.videoeditor.service.MovieMediaItem.getEffect()
MovieEffect com.android.videoeditor.service.VideoEditorProject.getEffect(String,String)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getFirstMediaItem()
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getInsertAfterMediaItem(long)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getLastMediaItem()
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getMediaItem(String)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getNextMediaItem(String)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getNextMediaItem(long)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getPreviousMediaItem(MovieTransition)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getPreviousMediaItem(String)
MovieMediaItem com.android.videoeditor.service.VideoEditorProject.getPreviousMediaItem(long)
MovieOverlay com.android.videoeditor.service.MovieMediaItem.getOverlay()
MovieOverlay com.android.videoeditor.service.MovieTheme.getOverlay()
MovieOverlay com.android.videoeditor.service.VideoEditorProject.getOverlay(String,String)
MovieTheme com.android.videoeditor.service.MovieTheme.getTheme(Context,String)
MovieTransition com.android.videoeditor.service.MovieMediaItem.getBeginTransition()
MovieTransition com.android.videoeditor.service.MovieMediaItem.getEndTransition()
MovieTransition com.android.videoeditor.service.MovieTheme.getBeginTransition()
MovieTransition com.android.videoeditor.service.MovieTheme.getEndTransition()
MovieTransition com.android.videoeditor.service.MovieTheme.getMidTransition()
MovieTransition com.android.videoeditor.service.VideoEditorProject.getTransition(String)
MtpClient com.android.gallery3d.data.MtpContext.getMtpClient()
MtpDevice com.android.gallery3d.data.MtpClient.getDevice(String)
MtpDevice com.android.gallery3d.data.MtpClient.getDevice(int)
MtpDeviceInfo android.mtp.MtpDevice.getDeviceInfo()
MtpObjectInfo android.mtp.MtpDevice.getObjectInfo(int)
MtpObjectInfo com.android.gallery3d.data.MtpClient.getObjectInfo(String,int)
MtpObjectInfo com.android.gallery3d.data.MtpDevice.getObjectInfo(MtpContext,int,int)
MtpPropertyList android.mtp.MtpPropertyGroup.getPropertyList(int,int,int)
MtpStorageInfo android.mtp.MtpDevice.getStorageInfo(int)
MultiTapKeyListener android.text.method.MultiTapKeyListener.getInstance(boolean,TextKeyListener$Capitalize)
Multiset com.google.common.collect.ForwardingMultiset$StandardElementSet.multiset()
Multiset com.google.common.collect.SortedMultisets$ElementSet.multiset()
MutableFrameFormat android.filterfw.format.ImageFormat.create(int)
MutableFrameFormat android.filterfw.format.ImageFormat.create(int,int)
MutableFrameFormat android.filterfw.format.ImageFormat.create(int,int,int,int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createByteFormat(int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createByteFormat(int,int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createDoubleFormat(int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createDoubleFormat(int,int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createFloatFormat(int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createFloatFormat(int,int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createInt16Format(int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createInt16Format(int,int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createInt32Format(int)
MutableFrameFormat android.filterfw.format.PrimitiveFormat.createInt32Format(int,int)
NameValuePair org.apache.http.message.BasicHeaderElement.getParameterByName(String)
NameValuePair org.apache.http.message.BasicHeaderValueParser.parseNameValuePair(CharArrayBuffer,ParserCursor,char[])
NamedNodeMap com.android.mms.dom.ElementImpl.getAttributes()
NamedNodeMap com.android.mms.dom.NodeImpl.getAttributes()
NavTabView com.android.browser.NavScreen.getTabView(int)
NavTabView com.android.browser.NavTabScroller.getTabView(int)
NavigationBarBase com.android.browser.TitleBar.getNavigationBar()
NdefMessage com.android.browser.NfcHandler.createNdefMessage(NfcEvent)
NdefMessage com.android.contacts.NfcHandler.createNdefMessage(NfcEvent)
NdefMessage com.android.nfc.P2pLinkManager.createDefaultNdef(String)
NdefMessage com.android.nfc.handover.HandoverClient.sendHandoverRequest(NdefMessage)
NdefMessage com.android.nfc.handover.HandoverManager.createHandoverRequestMessage()
NdefMessage com.android.nfc.handover.HandoverManager.createHandoverSelectMessage(boolean)
NdefMessage com.android.nfc.handover.HandoverManager.tryHandoverRequest(NdefMessage)
NdefMessage com.android.nfc.ndefpush.NdefPushProtocol.getImmediate()
NdefMessage com.android.nfc.snep.SnepMessage.getNdefMessage()
NdefRecord com.android.nfc.handover.HandoverManager.createBluetoothAlternateCarrierRecord(boolean)
NdefRecord com.android.nfc.handover.HandoverManager.createBluetoothOobDataRecord()
NdefRecord com.android.nfc.handover.HandoverManager.createCollisionRecord()
NdefRecord com.android.nfc.handover.HandoverManager.createHandoverRequestRecord()
NdefRecord com.android.nfc.handover.HandoverManager.createHandoverSelectRecord(boolean)
NetworkInfo android.bluetooth.BluetoothTetheringDataTracker.getNetworkInfo()
NetworkInfo android.net.BaseNetworkStateTracker.getNetworkInfo()
NetworkInfo android.net.DummyDataStateTracker.getNetworkInfo()
NetworkInfo android.net.EthernetDataTracker.getNetworkInfo()
NetworkInfo android.net.MobileDataStateTracker.getNetworkInfo()
NetworkInfo android.net.wifi.WifiStateTracker.getNetworkInfo()
NetworkInfo com.android.providers.downloads.RealSystemFacade.getActiveNetworkInfo(int)
NetworkInfo com.android.server.ConnectivityService.getActiveNetworkInfo()
NetworkInfo com.android.server.ConnectivityService.getActiveNetworkInfoForUid(int)
NetworkInfo com.android.server.ConnectivityService.getActiveNetworkInfoUnfiltered()
NetworkInfo com.android.server.ConnectivityService.getNetworkInfo(int)
NetworkInfo$DetailedState android.net.NetworkInfo.getDetailedState()
NetworkInfo$DetailedState android.net.wifi.WifiInfo.getDetailedStateOf(SupplicantState)
NetworkInfo$State android.net.NetworkInfo.getState()
NetworkInfo[] com.android.server.ConnectivityService.getAllNetworkInfo()
NetworkPolicy[] com.android.server.net.NetworkPolicyManagerService.getNetworkPolicies()
NetworkQuotaInfo com.android.server.ConnectivityService.getActiveNetworkQuotaInfo()
NetworkQuotaInfo com.android.server.net.NetworkPolicyManagerService.getNetworkQuotaInfo(NetworkState)
NetworkState[] com.android.server.ConnectivityService.getAllNetworkState()
NetworkStats android.net.INetworkStatsSession$Stub$Proxy.getSummaryForAllUid(NetworkTemplate,long,long,boolean)
NetworkStats android.net.INetworkStatsSession$Stub$Proxy.getSummaryForNetwork(NetworkTemplate,long,long)
NetworkStats android.os.INetworkManagementService$Stub$Proxy.getNetworkStatsDetail()
NetworkStats android.os.INetworkManagementService$Stub$Proxy.getNetworkStatsSummaryDev()
NetworkStats android.os.INetworkManagementService$Stub$Proxy.getNetworkStatsSummaryXt()
NetworkStats android.os.INetworkManagementService$Stub$Proxy.getNetworkStatsTethering(String[])
NetworkStats android.os.INetworkManagementService$Stub$Proxy.getNetworkStatsUidDetail(int)
NetworkStats com.android.server.NetworkManagementService.getNetworkStatsDetail()
NetworkStats com.android.server.NetworkManagementService.getNetworkStatsSummaryDev()
NetworkStats com.android.server.NetworkManagementService.getNetworkStatsSummaryXt()
NetworkStats com.android.server.NetworkManagementService.getNetworkStatsTethering(String[])
NetworkStats com.android.server.NetworkManagementService.getNetworkStatsUidDetail(int)
NetworkStats com.android.server.net.NetworkStatsCollection.getSummary(NetworkTemplate,long,long)
NetworkStats com.android.server.net.NetworkStatsService$1.getSummaryForNetwork(NetworkTemplate,long,long)
NetworkStats com.android.server.net.NetworkStatsService.getDataLayerSnapshotForUid(int)
NetworkStats$Entry android.net.NetworkStats.getTotal(NetworkStats$Entry)
NetworkStats$Entry android.net.NetworkStats.getTotal(NetworkStats$Entry,HashSet)
NetworkStats$Entry android.net.NetworkStats.getTotal(NetworkStats$Entry,int)
NetworkStats$Entry android.net.NetworkStats.getTotalIncludingTags(NetworkStats$Entry)
NetworkStats$Entry android.net.NetworkStats.getValues(int,NetworkStats$Entry)
NetworkStats$Entry com.android.server.net.NetworkStatsRecorder.getTotalSinceBootLocked(NetworkTemplate)
NetworkStatsCollection com.android.server.net.NetworkStatsRecorder.getOrLoadCompleteLocked()
NetworkStatsHistory android.net.INetworkStatsSession$Stub$Proxy.getHistoryForNetwork(NetworkTemplate,int)
NetworkStatsHistory android.net.INetworkStatsSession$Stub$Proxy.getHistoryForUid(NetworkTemplate,int,int,int,int)
NetworkStatsHistory com.android.server.net.NetworkStatsCollection.getHistory(NetworkTemplate,int,int,int,int)
NetworkStatsHistory com.android.server.net.NetworkStatsCollection.getHistory(NetworkTemplate,int,int,int,int,long,long)
NetworkStatsHistory com.android.server.net.NetworkStatsService$1.getHistoryForNetwork(NetworkTemplate,int)
NetworkStatsHistory$Entry android.net.NetworkStatsHistory.getValues(int,NetworkStatsHistory$Entry)
NetworkStatsHistory$Entry android.net.NetworkStatsHistory.getValues(long,long,NetworkStatsHistory$Entry)
NetworkStatsHistory$Entry android.net.NetworkStatsHistory.getValues(long,long,long,NetworkStatsHistory$Entry)
NetworkStatsService$NetworkStatsSettings$Config com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getDevConfig()
NetworkStatsService$NetworkStatsSettings$Config com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getUidConfig()
NetworkStatsService$NetworkStatsSettings$Config com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getUidTagConfig()
NetworkStatsService$NetworkStatsSettings$Config com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getXtConfig()
NetworkUpdateResult android.net.wifi.WifiConfigStore.saveNetwork(WifiConfiguration)
NfcActivityManager$NfcActivityState android.nfc.NfcActivityManager.findActivityState(Activity)
NfcActivityManager$NfcActivityState android.nfc.NfcActivityManager.findResumedActivityState()
NfcActivityManager$NfcActivityState android.nfc.NfcActivityManager.getActivityState(Activity)
NfcActivityManager$NfcApplicationState android.nfc.NfcActivityManager.findAppState(Application)
NfcBarcode android.nfc.tech.NfcBarcode.get(Tag)
NfcService com.android.nfc.NfcService.getInstance()
NinePatchChunk com.android.gallery3d.ui.NinePatchTexture.getNinePatchChunk()
Node com.android.mms.dom.AttrImpl.getNextSibling()
Node com.android.mms.dom.AttrImpl.getParentNode()
Node com.android.mms.dom.AttrImpl.getPreviousSibling()
Node com.android.mms.dom.NamedNodeMapImpl.getNamedItem(String)
Node com.android.mms.dom.NamedNodeMapImpl.getNamedItemNS(String,String)
Node com.android.mms.dom.NodeImpl.getFirstChild()
Node com.android.mms.dom.NodeImpl.getLastChild()
Node com.android.mms.dom.NodeImpl.getNextSibling()
Node com.android.mms.dom.NodeImpl.getParentNode()
Node com.android.mms.dom.NodeImpl.getPreviousSibling()
NodeList com.android.mms.dom.DocumentImpl.getElementsByTagName(String)
NodeList com.android.mms.dom.DocumentImpl.getElementsByTagNameNS(String,String)
NodeList com.android.mms.dom.ElementImpl.getElementsByTagName(String)
NodeList com.android.mms.dom.ElementImpl.getElementsByTagNameNS(String,String)
NodeList com.android.mms.dom.NodeImpl.getChildNodes()
NodeList com.android.mms.dom.smil.ElementParallelTimeContainerImpl.getActiveChildrenAt(float)
NodeList com.android.mms.dom.smil.ElementSequentialTimeContainerImpl.getActiveChildrenAt(float)
NodeList com.android.mms.dom.smil.SmilDocumentImpl$1.getTimeChildren()
NodeList com.android.mms.dom.smil.SmilDocumentImpl.getActiveChildrenAt(float)
NodeList com.android.mms.dom.smil.SmilDocumentImpl.getTimeChildren()
NodeList com.android.mms.dom.smil.SmilLayoutElementImpl.getRegions()
NodeList com.android.mms.dom.smil.SmilParElementImpl$1.getTimeChildren()
NodeList com.android.mms.dom.smil.SmilParElementImpl.getActiveChildrenAt(float)
NodeList com.android.mms.dom.smil.SmilParElementImpl.getTimeChildren()
Notification com.android.email.NotificationController.createNewMessageNotification(long,long,Cursor,long,int,int)
Notification$Builder android.app.Notification$Builder.setAutoCancel(boolean)
Notification$Builder android.app.Notification$Builder.setOngoing(boolean)
Notification$Builder android.app.Notification$Builder.setOnlyAlertOnce(boolean)
NotificationCompat$Builder android.support.v4.app.NotificationCompat$Builder.setAutoCancel(boolean)
NotificationCompat$Builder android.support.v4.app.NotificationCompat$Builder.setOngoing(boolean)
NotificationCompat$Builder android.support.v4.app.NotificationCompat$Builder.setOnlyAlertOnce(boolean)
NotificationController com.android.email.NotificationController.getInstance(Context)
NotificationData$Entry com.android.systemui.statusbar.NotificationData.get(int)
NtpTrustedTime android.util.NtpTrustedTime.getInstance(Context)
NullVibrator android.os.NullVibrator.getInstance()
NumberParseException$ErrorType com.android.i18n.phonenumbers.NumberParseException.getErrorType()
NumberPicker$Formatter android.widget.NumberPicker.getTwoDigitFormatter()
ObbInfo com.android.internal.app.IMediaContainerService$Stub$Proxy.getObbInfo(String)
ObbInfo com.android.server.MountService$ObbAction.getObbInfo()
Object android.animation.Keyframe.clone()
Object android.app.ContextImpl$15.createStaticService()
Object android.app.ContextImpl$20.getService(ContextImpl)
Object android.app.ContextImpl$ServiceFetcher.getService(ContextImpl)
Object android.app.ContextImpl$StaticServiceFetcher.getService(ContextImpl)
Object android.app.ContextImpl.getSystemService(String)
Object android.content.AsyncTaskLoader.onLoadInBackground()
Object android.content.ContextWrapper.getSystemService(String)
Object android.drm.DrmEvent.getAttribute(String)
Object android.drm.DrmInfo.get(String)
Object android.drm.DrmInfoRequest.get(String)
Object android.filterfw.core.FieldPort.getTarget()
Object android.filterfw.core.FrameFormat.getMetaValue(String)
Object android.filterfw.core.GLFrame.getObjectValue()
Object android.filterfw.core.InputPort.getTarget()
Object android.filterfw.core.NativeFrame.getObjectValue()
Object android.filterfw.core.NativeProgram.getHostValue(String)
Object android.filterfw.core.SerializedFrame.getObjectValue()
Object android.filterfw.core.ShaderProgram.getHostValue(String)
Object android.filterfw.core.SimpleFrame.getObjectValue()
Object android.filterfw.core.VertexFrame.getObjectValue()
Object android.hardware.SystemSensorManager$ListenerDelegate.getListener()
Object android.media.MediaRouter$RouteInfo.getTag()
Object android.net.Uri$PathSegments.get(int)
Object android.os.AsyncTask.get()
Object android.os.AsyncTask.get(long,TimeUnit)
Object android.speech.tts.PlaybackQueueItem.getCallerIdentity()
Object android.speech.tts.TextToSpeechService$SpeechItem.getCallerIdentity()
Object android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getInfo()
Object android.view.ViewTreeObserver$CopyOnWriteArray$Access.get(int)
Object android.webkit.WebHistoryItemClassic.getCustomData()
Object android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter.getItem(int)
Object android.widget.GridLayout$PackedMap.getValue(int)
Object android.widget.RemoteViewsService.access$000()
Object com.adobe.xmp.impl.XMPMetaImpl.getPropertyObject(String,String,int)
Object com.android.browser.AutofillHandler$AutoFillProfileDbTask.doInBackground(Object[])
Object com.android.browser.BreadCrumbView.getTopData()
Object com.android.browser.BrowserBookmarksAdapter.getRowObject(Cursor,Object)
Object com.android.browser.BrowserHistoryPage$HistoryChildWrapper.getItem(int)
Object com.android.browser.BrowserHistoryPage$HistoryGroupWrapper.getItem(int)
Object com.android.browser.DateSortedExpandableListAdapter.getChild(int,int)
Object com.android.browser.DateSortedExpandableListAdapter.getGroup(int)
Object com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList.getItem(int)
Object com.android.browser.addbookmark.FolderSpinnerAdapter.getItem(int)
Object com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getChild(int,int)
Object com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getGroup(int)
Object com.android.calendar.CalendarViewAdapter.getItem(int)
Object com.android.calendar.agenda.AgendaByDayAdapter.getItem(int)
Object com.android.calendar.agenda.AgendaWindowAdapter.getItem(int)
Object com.android.calendar.month.SimpleWeeksAdapter.getItem(int)
Object com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.getItem(int)
Object com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.getItem(int)
Object com.android.common.content.ProjectionMap.put(Object,Object)
Object com.android.contacts.ContactPhotoManagerImpl$Request.getKey()
Object com.android.contacts.ContactSaveService.getSystemService(String)
Object com.android.contacts.ContactsActivity.getSystemService(String)
Object com.android.contacts.ContactsApplication.getSystemService(String)
Object com.android.contacts.calllog.CallDetailHistoryAdapter.getItem(int)
Object com.android.contacts.detail.StreamItemAdapter.getItem(int)
Object com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter.getItem(int)
Object com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter.getItem(int)
Object com.android.contacts.list.ContactTileAdapter.getItem(int)
Object com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getChild(int,int)
Object com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getGroup(int)
Object com.android.contacts.list.PhoneFavoriteMergedAdapter.getItem(int)
Object com.android.contacts.quickcontact.QuickContactListFragment$1.getItem(int)
Object com.android.contacts.test.InjectedServices.getSystemService(String)
Object com.android.contacts.util.ExpirableCache$GenerationalCachedValue.getValue()
Object com.android.contacts.util.ExpirableCache.getPossiblyExpired(Object)
Object com.android.contacts.util.WeakAsyncTask.doInBackground(Object[])
Object com.android.contacts.vcard.ProcessorBase.get()
Object com.android.contacts.vcard.ProcessorBase.get(long,TimeUnit)
Object com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.getItem(int)
Object com.android.deskclock.timer.TimerFragment$TimersListAdapter.getItem(int)
Object com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getItem(int)
Object com.android.deskclock.worldclock.WorldClockAdapter.getItem(int)
Object com.android.emailcommon.utility.EmailAsyncTask.callDoInBackgroundForTest(Object[])
Object com.android.emailcommon.utility.Utility.getFirstRowColumn(Context,Uri,String[],String,String[],String,int,Object,Utility$CursorGetter)
Object com.android.ex.chips.BaseRecipientAdapter.getItem(int)
Object com.android.exchange.AbstractSyncService.getSynchronizer()
Object com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter.getItem(int)
Object com.android.gallery3d.app.GalleryActionBar$ClusterAdapter.getItem(int)
Object com.android.gallery3d.app.TransitionStore.get(Object)
Object com.android.gallery3d.app.TransitionStore.get(Object,Object)
Object com.android.gallery3d.common.LongSparseArray.get(long)
Object com.android.gallery3d.common.LongSparseArray.get(long,Object)
Object com.android.gallery3d.common.LruCache.get(Object)
Object com.android.gallery3d.common.LruCache.put(Object,Object)
Object com.android.gallery3d.data.MediaDetails.getDetail(int)
Object com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter.getItem(int)
Object com.android.gallery3d.ui.NinePatchTexture$SmallCache.get(int)
Object com.android.gallery3d.ui.PopupList$ItemDataAdapter.getItem(int)
Object com.android.gallery3d.util.IdentityCache.get(Object)
Object com.android.gallery3d.util.IdentityCache.put(Object,Object)
Object com.android.gallery3d.util.JobLimiter$JobWrapper.get()
Object com.android.gallery3d.util.RangeArray.get(int)
Object com.android.gallery3d.util.ThreadPool$Worker.get()
Object com.android.inputmethod.compat.CompatUtils.getFieldValue(Object,Object,Field)
Object com.android.inputmethod.latin.LocaleUtils$RunInLocale.runInLocale(Resources,Locale)
Object com.android.inputmethod.latin.StaticInnerHandlerWrapper.getOuterInstance()
Object com.android.internal.app.ResolverActivity$ResolveListAdapter.getItem(int)
Object com.android.launcher2.InterruptibleInOutAnimator.getTag()
Object com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter.getItem(int)
Object com.android.launcher2.WeakReferenceThreadLocal.get()
Object com.android.mms.dom.NodeImpl.getFeature(String,String)
Object com.android.mms.dom.NodeImpl.getUserData(String)
Object com.android.mms.dom.NodeImpl.setUserData(String,Object,UserDataHandler)
Object com.android.mms.model.SlideModel.set(int,Object)
Object com.android.mms.model.SlideshowModel.set(int,Object)
Object com.android.mms.util.SimpleCache.get(Object)
Object com.android.mms.util.SimpleCache.put(Object,Object)
Object com.android.server.IntentResolver.newResult(IntentFilter,int,int)
Object com.android.server.IntentResolverOld.newResult(IntentFilter,int,int)
Object com.android.server.ProcessMap.put(String,int,Object)
Object com.android.server.pm.Settings.getUserIdLPr(int)
Object com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter.getItem(int)
Object com.android.videoeditor.OverlaysAdapter.getItem(int)
Object com.android.videoeditor.ProjectPickerAdapter.getItem(int)
Object com.android.videoeditor.TransitionsAdapter.getItem(int)
Object com.coremedia.iso.boxes.mdat.SampleList.get(int)
Object com.google.android.gsf.Gservices.getVersionToken(ContentResolver)
Object com.google.android.mms.util.AbstractCache.get(Object)
Object com.google.common.base.Joiner$3.get(int)
Object com.google.common.base.Optional$Absent.get()
Object com.google.common.base.Optional$Present.get()
Object com.google.common.collect.AbstractIterator.endOfData()
Object com.google.common.collect.AbstractIterator.next()
Object com.google.common.collect.AbstractLinkedIterator.next()
Object com.google.common.collect.AbstractMapEntry.setValue(Object)
Object com.google.common.collect.AbstractMultimap$AsMap.get(Object)
Object com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
Object com.google.common.collect.AbstractMultimap$WrappedList.get(int)
Object com.google.common.collect.AbstractMultimap$WrappedList.set(int,Object)
Object com.google.common.collect.BstNode.getKey()
Object com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference.get()
Object com.google.common.collect.ComputingConcurrentHashMap$ComputedReference.get()
Object com.google.common.collect.ComputingConcurrentHashMap$ComputingMapAdapter.get(Object)
Object com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment.getOrCompute(Object,int,Function)
Object com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference.get()
Object com.google.common.collect.ComputingConcurrentHashMap.getOrCompute(Object)
Object com.google.common.collect.EmptyImmutableList.get(int)
Object com.google.common.collect.EmptyImmutableMap.get(Object)
Object com.google.common.collect.ForwardingCollection.delegate()
Object com.google.common.collect.ForwardingConcurrentMap.delegate()
Object com.google.common.collect.ForwardingConcurrentMap.putIfAbsent(Object,Object)
Object com.google.common.collect.ForwardingConcurrentMap.replace(Object,Object)
Object com.google.common.collect.ForwardingIterator.delegate()
Object com.google.common.collect.ForwardingIterator.next()
Object com.google.common.collect.ForwardingMap.delegate()
Object com.google.common.collect.ForwardingMap.get(Object)
Object com.google.common.collect.ForwardingMap.put(Object,Object)
Object com.google.common.collect.ForwardingMap.remove(Object)
Object com.google.common.collect.ForwardingMapEntry.delegate()
Object com.google.common.collect.ForwardingMapEntry.getKey()
Object com.google.common.collect.ForwardingMapEntry.getValue()
Object com.google.common.collect.ForwardingMapEntry.setValue(Object)
Object com.google.common.collect.ForwardingMultimap.delegate()
Object com.google.common.collect.ForwardingMultiset.delegate()
Object com.google.common.collect.ForwardingSet.delegate()
Object com.google.common.collect.ImmutableCollection.writeReplace()
Object com.google.common.collect.ImmutableEntry.getKey()
Object com.google.common.collect.ImmutableEntry.getValue()
Object com.google.common.collect.ImmutableEntry.setValue(Object)
Object com.google.common.collect.ImmutableList$ReverseImmutableList.get(int)
Object com.google.common.collect.ImmutableList.set(int,Object)
Object com.google.common.collect.ImmutableList.writeReplace()
Object com.google.common.collect.ImmutableMap$SerializedForm.readResolve()
Object com.google.common.collect.ImmutableMap.writeReplace()
Object com.google.common.collect.ImmutableSet$TransformedImmutableSet$1.get(int)
Object com.google.common.collect.ImmutableSet.writeReplace()
Object com.google.common.collect.ImmutableSortedAsList.get(int)
Object com.google.common.collect.ImmutableSortedMap$SerializedForm.readResolve()
Object com.google.common.collect.ImmutableSortedMap.get(Object)
Object com.google.common.collect.ImmutableSortedMap.writeReplace()
Object com.google.common.collect.ImmutableSortedSet.writeReplace()
Object com.google.common.collect.Iterators$11.get(int)
Object com.google.common.collect.Iterators$12.get(int)
Object com.google.common.collect.Iterators.getOnlyElement(Iterator)
Object com.google.common.collect.Lists$AbstractListWrapper.get(int)
Object com.google.common.collect.Lists$AbstractListWrapper.set(int,Object)
Object com.google.common.collect.Lists$OnePlusArrayList.get(int)
Object com.google.common.collect.Lists$Partition.get(int)
Object com.google.common.collect.Lists$ReverseList.get(int)
Object com.google.common.collect.Lists$ReverseList.set(int,Object)
Object com.google.common.collect.Lists$TransformingRandomAccessList.get(int)
Object com.google.common.collect.Lists$TwoPlusArrayList.get(int)
Object com.google.common.collect.MapMaker$NullComputingConcurrentMap.get(Object)
Object com.google.common.collect.MapMaker$NullConcurrentMap.get(Object)
Object com.google.common.collect.MapMaker$NullConcurrentMap.putIfAbsent(Object,Object)
Object com.google.common.collect.MapMakerInternalMap$1.get()
Object com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getKey()
Object com.google.common.collect.MapMakerInternalMap$NullEntry.getKey()
Object com.google.common.collect.MapMakerInternalMap$Segment.get(Object,int)
Object com.google.common.collect.MapMakerInternalMap$Segment.getLiveValue(MapMakerInternalMap$ReferenceEntry)
Object com.google.common.collect.MapMakerInternalMap$SoftEntry.getKey()
Object com.google.common.collect.MapMakerInternalMap$StrongEntry.getKey()
Object com.google.common.collect.MapMakerInternalMap$StrongValueReference.get()
Object com.google.common.collect.MapMakerInternalMap$WeakEntry.getKey()
Object com.google.common.collect.MapMakerInternalMap$WriteThroughEntry.getKey()
Object com.google.common.collect.MapMakerInternalMap$WriteThroughEntry.getValue()
Object com.google.common.collect.MapMakerInternalMap$WriteThroughEntry.setValue(Object)
Object com.google.common.collect.MapMakerInternalMap.get(Object)
Object com.google.common.collect.MapMakerInternalMap.getLiveValue(MapMakerInternalMap$ReferenceEntry)
Object com.google.common.collect.MapMakerInternalMap.put(Object,Object)
Object com.google.common.collect.MapMakerInternalMap.putIfAbsent(Object,Object)
Object com.google.common.collect.Maps$1.getKey()
Object com.google.common.collect.Maps$1.getValue()
Object com.google.common.collect.Maps$AbstractFilteredMap.get(Object)
Object com.google.common.collect.Maps$AbstractFilteredMap.put(Object,Object)
Object com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1.setValue(Object)
Object com.google.common.collect.Maps$TransformedEntriesMap.get(Object)
Object com.google.common.collect.Multimaps$1.getKey()
Object com.google.common.collect.Multimaps$1.getValue()
Object com.google.common.collect.Multimaps$Keys$1$1.getElement()
Object com.google.common.collect.Multimaps$MapMultimap$AsMap.get(Object)
Object com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1.getKey()
Object com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1.getValue()
Object com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1.getKey()
Object com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1.getValue()
Object com.google.common.collect.Multisets$ImmutableEntry.getElement()
Object com.google.common.collect.Ordering.max(Object,Object)
Object com.google.common.collect.Ordering.min(Object,Object)
Object com.google.common.collect.RegularImmutableList$1.get(int)
Object com.google.common.collect.RegularImmutableList.get(int)
Object com.google.common.collect.RegularImmutableMap$Values$1.get(int)
Object com.google.common.collect.RegularImmutableMap.get(Object)
Object com.google.common.collect.Sets$CartesianSet$Axis.getForIndex(int)
Object com.google.common.collect.Sets$PowerSet$1.get(int)
Object com.google.common.collect.SingletonImmutableList.get(int)
Object com.google.common.collect.SingletonImmutableMap.get(Object)
Object com.google.common.collect.TransformedImmutableList$1.get(int)
Object com.google.common.collect.TransformedImmutableList.get(int)
Object com.google.common.collect.TreeMultiset$LiveEntry.getElement()
Object com.google.common.collect.TreeMultiset$Reference.get()
Object com.google.common.primitives.Ints$IntArrayAsList.set(int,Object)
Object gov.nist.core.MultiValueMapImpl.get(Object)
Object gov.nist.core.MultiValueMapImpl.put(Object,Object)
Object gov.nist.core.NameValue.getKey()
Object gov.nist.core.NameValue.getValue()
Object gov.nist.core.NameValue.setValue(Object)
Object gov.nist.core.NameValueList.put(Object,Object)
Object gov.nist.javax.sip.header.SIPHeaderList.set(int,Object)
Object java.lang.Enum$1.create(Object)
Object java.lang.System$SystemEnvironment.get(Object)
Object java.nio.ByteBuffer.array()
Object java.nio.CharBuffer.array()
Object java.nio.DoubleBuffer.array()
Object java.nio.FloatBuffer.array()
Object java.nio.IntBuffer.array()
Object java.nio.LongBuffer.array()
Object java.nio.ShortBuffer.array()
Object java.security.cert.PKIXCertPathChecker.clone()
Object java.text.AttributedString$AttributedIterator.getAttribute(AttributedCharacterIterator$Attribute)
Object java.util.AbstractList$SubAbstractList.set(int,Object)
Object java.util.ArrayList.set(int,Object)
Object java.util.EnumMap$Entry.getValue()
Object java.util.EnumMap$Entry.setValue(Object)
Object java.util.EnumMap$EnumMapValueCollection$1.get(MapEntry)
Object java.util.EnumMap.get(Object)
Object java.util.EnumMap.put(Enum,Object)
Object java.util.EnumMap.put(Object,Object)
Object java.util.EnumSet.clone()
Object java.util.HashMap$HashMapEntry.getKey()
Object java.util.HashMap$HashMapEntry.getValue()
Object java.util.HashMap.get(Object)
Object java.util.HashMap.put(Object,Object)
Object java.util.LinkedHashMap.get(Object)
Object java.util.LinkedList.get(int)
Object java.util.TreeMap$BoundedMap.get(Object)
Object java.util.TreeMap$BoundedMap.put(Object,Object)
Object java.util.TreeMap$Node.getKey()
Object java.util.TreeMap$Node.getValue()
Object java.util.TreeMap.get(Object)
Object java.util.TreeMap.put(Object,Object)
Object java.util.Vector.set(int,Object)
Object java.util.WeakHashMap.get(Object)
Object java.util.concurrent.atomic.AtomicReferenceArray.get(int)
Object java.util.concurrent.atomic.AtomicReferenceArray.getAndSet(int,Object)
Object java.util.logging.LogManager.getInstanceByClass(String)
Object javax.obex.HeaderSet.getHeader(int)
Object javax.xml.validation.Validator.getProperty(String)
Object javax.xml.validation.ValidatorHandler.getProperty(String)
Object libcore.icu.TimeZones$ZoneStringsCache.create(Object)
Object org.apache.harmony.security.x509.Extension$2.getDecodedObject(BerInputStream)
Object org.apache.harmony.security.x509.ORAddress$2.getDecodedObject(BerInputStream)
Object org.apache.harmony.xml.dom.DOMConfigurationImpl$1.get(DOMConfigurationImpl)
Object org.apache.http.impl.HttpConnectionMetricsImpl.getMetric(String)
Object org.apache.http.impl.client.DefaultUserTokenHandler.getUserToken(HttpContext)
Object org.apache.http.params.BasicHttpParams.getParameter(String)
Object org.apache.http.protocol.BasicHttpContext.getAttribute(String)
Object org.apache.http.protocol.DefaultedHttpContext.getAttribute(String)
ObjectAnimator com.android.phone.AnimationUtils$CrossFadeDrawable.getAnimator()
Object[] android.database.sqlite.SQLiteProgram.getBindArgs()
Object[] android.os.Parcel.readTypedArray(Parcelable$Creator)
Object[] com.android.browser.provider.BrowserProvider2.getSelectionWithAccounts(Uri,String,String[])
Object[] com.android.contacts.list.ContactsSectionIndexer.getSections()
Object[] com.android.contacts.list.PhoneFavoriteMergedAdapter.getSections()
Object[] com.android.contacts.widget.IndexerListAdapter.getSections()
Object[] com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getSections()
Object[] com.android.email.activity.setup.AccountSettingsFragment$LoadAccountTask.doInBackground(Long[])
Object[] com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.getRow()
Object[] com.google.common.collect.ForwardingCollection.standardToArray()
Object[] com.google.common.collect.ForwardingCollection.standardToArray(Object[])
Object[] com.google.common.collect.ForwardingCollection.toArray()
Object[] com.google.common.collect.ForwardingCollection.toArray(Object[])
Object[] com.google.common.collect.ImmutableCollection.toArray()
OpenSSLEngine org.apache.harmony.xnet.provider.jsse.OpenSSLEngine.getInstance(String)
OpenSSLEngine org.apache.harmony.xnet.provider.jsse.OpenSSLKey.getEngine()
OpenSSLKey org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams.getOpenSSLKey()
OpenSSLKey org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getInstance(DSAPrivateKey)
OpenSSLKey org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getOpenSSLKey()
OpenSSLKey org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey.getInstance(RSAPrivateCrtKey)
OpenSSLKey org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getInstance(RSAPrivateKey)
OpenSSLKey org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getOpenSSLKey()
OpenSSLRSAPrivateKey org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getInstance(OpenSSLKey)
Operation javax.obex.ClientSession.get(HeaderSet)
OperatorInfo$State com.android.internal.telephony.OperatorInfo.getState()
Ordering com.google.common.collect.Ordering.nullsFirst()
Ordering com.google.common.collect.Ordering.nullsLast()
Ordering com.google.common.collect.Ordering.reverse()
OrientationManager com.android.gallery3d.app.AbstractGalleryActivity.getOrientationManager()
OtaUtils$CdmaOtaInCallScreenUiState$State com.android.phone.OtaUtils.getCdmaOtaInCallScreenUiState()
OutputPort android.filterfw.core.Filter.getOutputPort(String)
OutputPort android.filterfw.core.InputPort.getSourcePort()
OutputStream com.android.email.mail.transport.MailTransport.getOutputStream()
OutputStream com.android.emailcommon.internet.BinaryTempFileBody.getOutputStream()
OutputStreamWriter com.google.common.io.CharStreams$3.getOutput()
Overlay android.media.videoeditor.MediaItem.getOverlay(String)
OverlayLinearLayout com.android.videoeditor.VideoEditorActivity.getOverlayLayout()
OverlayType[] com.android.videoeditor.OverlayType.getOverlays(Context)
PackageCleanItem android.content.pm.IPackageManager$Stub$Proxy.nextPackageToClean(PackageCleanItem)
PackageInfo android.content.pm.IPackageManager$Stub$Proxy.getPackageInfo(String,int,int)
PackageInfo com.android.server.pm.PackageManagerService.getPackageInfo(String,int,int)
PackageInfoLite com.android.internal.app.IMediaContainerService$Stub$Proxy.getMinimalPackageInfo(String,int,long)
PackageManager com.android.providers.applications.ApplicationsProvider.getPackageManager()
PackageManagerBackupAgent$Metadata com.android.server.PackageManagerBackupAgent.getRestoredMetadata(String)
PackageManagerService$InstallArgs com.android.server.pm.PackageManagerService.access$2300(PackageManagerService,PackageManagerService$InstallParams)
PackageManagerService$InstallArgs com.android.server.pm.PackageManagerService.access$3000(PackageManagerService,Uri,int,String,String)
PackageManagerService$InstallArgs com.android.server.pm.PackageVerificationState.getInstallArgs()
PackageSetting com.android.server.pm.Settings.addPackageLPw(String,String,File,File,String,int,int,int)
PackageSetting com.android.server.pm.Settings.enableSystemPackageLPw(String)
PackageSetting com.android.server.pm.Settings.getDisabledSystemPkgLPr(String)
PackageSetting com.android.server.pm.Settings.getPackageLPw(PackageParser$Package,PackageSetting,String,SharedUserSetting,File,File,String,int,UserHandle,boolean)
PageProgressView com.android.browser.TitleBar.getProgressView()
PagedViewCellLayoutChildren com.android.launcher2.PagedViewCellLayout.getChildrenLayout()
Paint com.android.email.ResourceHelper.getAccountColorPaint(long)
Paint$Align android.graphics.Paint.getTextAlign()
Paint$Cap android.graphics.Paint.getStrokeCap()
Paint$FontMetrics android.graphics.Paint.getFontMetrics()
Paint$FontMetricsInt android.graphics.Paint.getFontMetricsInt()
Paint$Join android.graphics.Paint.getStrokeJoin()
Paint$Style android.graphics.Paint.getStyle()
Pair android.content.SyncStorageEngine.getBackoff(Account,int,String)
Pair com.android.server.InputMethodManagerService$InputMethodSettings.getLastInputMethodAndSubtypeLocked()
Pair[] android.media.videoeditor.MediaProperties.getSupportedResolutions(int)
PanelController com.android.gallery3d.filtershow.imageshow.ImageShow.getPanelController()
PanelController com.android.gallery3d.filtershow.imageshow.ImageSlave.getPanelController()
Pano2dPreviewOverlay com.google.android.apps.lightcycle.panorama.LightCycleRenderer.getPanoPreview2d()
ParcelFileDescriptor android.bluetooth.IBluetooth$Stub$Proxy.connectSocket(BluetoothDevice,int,ParcelUuid,int,int)
ParcelFileDescriptor android.bluetooth.IBluetooth$Stub$Proxy.createSocketChannel(int,String,ParcelUuid,int,int)
ParcelFileDescriptor android.bluetooth.IBluetoothHealth$Stub$Proxy.getMainChannelFd(BluetoothDevice,BluetoothHealthAppConfiguration)
ParcelFileDescriptor android.content.ContentProvider.openPipeHelper(Uri,String,Bundle,Object,ContentProvider$PipeDataWriter)
ParcelFileDescriptor android.database.sqlite.SQLiteConnection.executeForBlobFileDescriptor(String,Object[],CancellationSignal)
ParcelFileDescriptor android.hardware.ISerialManager$Stub$Proxy.openSerialPort(String)
ParcelFileDescriptor android.service.wallpaper.IWallpaperConnection$Stub$Proxy.setWallpaper(String)
ParcelFileDescriptor com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.createSocketChannel(int,String,ParcelUuid,int,int)
ParcelFileDescriptor com.android.bluetooth.btservice.AdapterService.createSocketChannel(int,String,ParcelUuid,int,int)
ParcelFileDescriptor com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder.getMainChannelFd(BluetoothDevice,BluetoothHealthAppConfiguration)
ParcelFileDescriptor com.android.bluetooth.hdp.HealthService.getMainChannelFd(BluetoothDevice,BluetoothHealthAppConfiguration)
ParcelFileDescriptor com.android.browser.homepages.HomeProvider.openFile(Uri,String)
ParcelFileDescriptor com.android.providers.contacts.VoicemailContentProvider.openDataFile(VoicemailContentProvider$UriData,String)
ParcelFileDescriptor com.android.providers.contacts.VoicemailContentTable.openFile(VoicemailContentProvider$UriData,String)
ParcelFileDescriptor com.android.providers.contacts.VoicemailStatusTable.openFile(VoicemailContentProvider$UriData,String)
ParcelFileDescriptor com.android.providers.media.MediaProvider.openFile(Uri,String)
ParcelFileDescriptor com.android.server.SerialService.openSerialPort(String)
ParcelFileDescriptor com.android.server.WallpaperManagerService$WallpaperConnection.setWallpaper(String)
ParcelFileDescriptor com.android.server.WallpaperManagerService.setWallpaper(String)
ParcelFileDescriptor com.android.server.WallpaperManagerService.updateWallpaperBitmapLocked(String,WallpaperManagerService$WallpaperData)
ParcelFileDescriptor com.android.server.am.TransferPipe.getReadFd()
ParcelFileDescriptor com.android.server.am.TransferPipe.getWriteFd()
ParcelFileDescriptor com.android.server.connectivity.Vpn.establish(VpnConfig)
ParcelFileDescriptor com.android.server.usb.UsbDeviceManager.openAccessory(UsbAccessory)
ParcelFileDescriptor com.android.server.usb.UsbHostManager.openDevice(String)
ParcelFileDescriptor com.android.server.usb.UsbService.openAccessory(UsbAccessory)
ParcelFileDescriptor com.android.server.usb.UsbService.openDevice(String)
ParcelUuid[] android.bluetooth.IBluetooth$Stub$Proxy.getRemoteUuids(BluetoothDevice)
ParcelUuid[] com.android.bluetooth.btservice.AdapterProperties.getUuids()
ParcelUuid[] com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getRemoteUuids(BluetoothDevice)
ParcelUuid[] com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getUuids()
ParcelUuid[] com.android.bluetooth.btservice.AdapterService.getRemoteUuids(BluetoothDevice)
ParcelUuid[] com.android.bluetooth.btservice.AdapterService.getUuids()
ParcelUuid[] com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getUuids()
Parcelable android.content.Intent.getParcelableExtra(String)
Parcelable android.content.pm.ParceledListSlice.populateList(List,Parcelable$Creator)
Parcelable android.os.Bundle.getParcelable(String)
Parcelable android.os.Parcel.readParcelable(ClassLoader)
ParceledListSlice android.content.pm.IPackageManager$Stub$Proxy.getInstalledApplications(int,String,int)
ParceledListSlice android.content.pm.IPackageManager$Stub$Proxy.getInstalledPackages(int,String,int)
ParceledListSlice com.android.server.pm.PackageManagerService.getInstalledApplications(int,String,int)
ParceledListSlice com.android.server.pm.PackageManagerService.getInstalledPackages(int,String,int)
Path android.gesture.GestureStroke.getPath()
Path com.android.camera.ui.PieItem.getPath()
Path com.android.gallery3d.data.DataManager.findPathByUri(Uri,String)
Path com.android.gallery3d.data.DataManager.getDefaultSetOf(Path)
Path com.android.gallery3d.data.LocalSource.getDefaultSetOf(Path)
Path com.android.gallery3d.data.MediaObject.getPath()
Path com.android.gallery3d.data.MediaSource.getDefaultSetOf(Path)
Path com.android.gallery3d.data.Path.getChild(String)
Path com.android.gallery3d.data.Path.getChild(int)
Path com.android.gallery3d.data.Path.getChild(long)
Path com.android.gallery3d.data.Path.getParent()
Path com.android.gallery3d.data.Path.getPrefixPath()
Path com.android.gallery3d.data.SnailSource.getItemPath(int)
Path com.android.gallery3d.data.SnailSource.getSetPath(int)
Path com.android.gallery3d.picasasource.PicasaSource.getDefaultSetOf(Path)
Path$FillType android.graphics.Path.getFillType()
PathMatcher$Node com.android.gallery3d.data.PathMatcher$Node.addChild(String)
PathMatcher$Node com.android.gallery3d.data.PathMatcher$Node.getChild(String)
PduBody com.android.mms.model.SlideshowModel.getPduBody(Context,Uri)
PduBody com.google.android.mms.pdu.MultimediaMessagePdu.getBody()
PduCache com.google.android.mms.util.PduCache.getInstance()
PduHeaders com.google.android.mms.pdu.GenericPdu.getPduHeaders()
PduHeaders com.google.android.mms.pdu.PduParser.parseHeaders(ByteArrayInputStream)
PduLoaderManager com.android.mms.MmsApp.getPduLoaderManager()
PduPart com.android.mms.ui.UriImage.getResizedImageAsPart(int,int,int)
PduPart com.google.android.mms.pdu.PduBody.getPart(int)
PduPart com.google.android.mms.pdu.PduBody.getPartByContentId(String)
PduPart com.google.android.mms.pdu.PduBody.getPartByContentLocation(String)
PduPart com.google.android.mms.pdu.PduBody.getPartByFileName(String)
PduPart com.google.android.mms.pdu.PduBody.getPartByName(String)
PduPersister com.google.android.mms.pdu.PduPersister.getPduPersister(Context)
PendingHandoverTransfer com.android.nfc.handover.HandoverManager.registerInTransferLocked(BluetoothDevice)
PendingHandoverTransfer com.android.nfc.handover.HandoverManager.registerOutTransferLocked(HandoverManager$BluetoothHandoverData,Uri[])
PendingIntent android.app.PendingIntent.getActivities(Context,int,Intent[],int,Bundle)
PendingIntent android.app.PendingIntent.getActivitiesAsUser(Context,int,Intent[],int,Bundle,UserHandle)
PendingIntent android.app.PendingIntent.getActivity(Context,int,Intent,int,Bundle)
PendingIntent android.app.PendingIntent.getActivityAsUser(Context,int,Intent,int,Bundle,UserHandle)
PendingIntent android.app.PendingIntent.getBroadcastAsUser(Context,int,Intent,int,UserHandle)
PendingIntent android.app.TaskStackBuilder.getPendingIntent(int,int)
PendingIntent android.app.TaskStackBuilder.getPendingIntent(int,int,Bundle)
PendingIntent android.app.TaskStackBuilder.getPendingIntent(int,int,Bundle,UserHandle)
PendingIntent android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase.getPendingIntent(Context,Intent[],int,int,Bundle)
PendingIntent android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb.getPendingIntent(Context,Intent[],int,int,Bundle)
PendingIntent android.support.v4.app.TaskStackBuilder.getPendingIntent(int,int,Bundle)
PendingIntent com.android.calendar.widget.CalendarAppWidgetProvider.getLaunchPendingIntentTemplate(Context)
PendingIntent com.android.calendar.widget.CalendarAppWidgetProvider.getUpdateIntent(Context)
PendingIntent com.android.phone.PhoneGlobals.getCallBackPendingIntent(Context,String)
PendingIntent com.android.phone.PhoneGlobals.getSendSmsFromNotificationPendingIntent(Context,String)
PendingIntent com.android.server.am.ActiveServices.getRunningServiceControlPanelLocked(ComponentName)
PendingIntent com.android.server.am.ActivityManagerService.getRunningServiceControlPanel(ComponentName)
PermissionCollection java.security.ProtectionDomain.getPermissions()
PermissionGroupInfo com.android.server.pm.PackageManagerService.getPermissionGroupInfo(String,int)
PermissionInfo com.android.server.pm.PackageManagerService.getPermissionInfo(String,int)
Phone com.android.internal.telephony.CallManager.getBgPhone()
Phone com.android.internal.telephony.CallManager.getDefaultPhone()
Phone com.android.internal.telephony.CallManager.getFgPhone()
Phone com.android.internal.telephony.CallManager.getRingingPhone()
Phone com.android.phone.PhoneGlobals.getPhone()
Phone com.android.phone.PhoneUtils.getSipPhoneFromUri(CallManager,String)
Phone$DataActivityState com.android.internal.telephony.PhoneProxy.getDataActivityState()
Phone$DataActivityState com.android.internal.telephony.cdma.CDMAPhone.getDataActivityState()
Phone$DataActivityState com.android.internal.telephony.gsm.GSMPhone.getDataActivityState()
Phone$DataActivityState com.android.internal.telephony.sip.SipPhone.getDataActivityState()
Phone$DataActivityState com.android.internal.telephony.sip.SipPhoneBase.getDataActivityState()
PhoneConstants$DataState com.android.internal.telephony.PhoneBase.getDataConnectionState()
PhoneConstants$DataState com.android.internal.telephony.PhoneProxy.getDataConnectionState()
PhoneConstants$DataState com.android.internal.telephony.PhoneProxy.getDataConnectionState(String)
PhoneConstants$DataState com.android.internal.telephony.cdma.CDMALTEPhone.getDataConnectionState(String)
PhoneConstants$DataState com.android.internal.telephony.cdma.CDMAPhone.getDataConnectionState(String)
PhoneConstants$DataState com.android.internal.telephony.gsm.GSMPhone.getDataConnectionState(String)
PhoneConstants$DataState com.android.internal.telephony.sip.SipPhone.getDataConnectionState()
PhoneConstants$DataState com.android.internal.telephony.sip.SipPhone.getDataConnectionState(String)
PhoneConstants$DataState com.android.internal.telephony.sip.SipPhoneBase.getDataConnectionState()
PhoneConstants$DataState com.android.internal.telephony.sip.SipPhoneBase.getDataConnectionState(String)
PhoneConstants$State com.android.internal.telephony.CallManager.getState()
PhoneConstants$State com.android.internal.telephony.PhoneProxy.getState()
PhoneConstants$State com.android.internal.telephony.cdma.CDMAPhone.getState()
PhoneConstants$State com.android.internal.telephony.gsm.GSMPhone.getState()
PhoneConstants$State com.android.internal.telephony.sip.SipPhone.getState()
PhoneConstants$State com.android.internal.telephony.sip.SipPhoneBase.getState()
PhoneConstants$State com.android.phone.PhoneGlobals.getPhoneState()
PhoneGlobals com.android.phone.PhoneGlobals.getInstance()
PhoneGlobals com.android.phone.PhoneGlobals.getInstanceIfPrimary()
PhoneNumberUtil$MatchType com.android.i18n.phonenumbers.PhoneNumberUtil.isNumberMatch(Phonenumber$PhoneNumber,String)
PhoneNumberUtil$MatchType com.android.i18n.phonenumbers.PhoneNumberUtil.isNumberMatch(String,String)
PhoneNumberUtil$PhoneNumberType com.android.i18n.phonenumbers.PhoneNumberUtil.getNumberType(Phonenumber$PhoneNumber)
PhoneStatusBar com.android.systemui.statusbar.phone.QuickSettings.getService()
PhoneStatusBarView com.android.systemui.statusbar.phone.PhoneStatusBar.makeStatusBarView()
PhoneSubInfo com.android.internal.telephony.sip.SipPhone.getPhoneSubInfo()
PhoneUtils$CallerInfoToken com.android.phone.PhoneUtils.startGetCallerInfo(Context,Connection,CallerInfoAsyncQuery$OnQueryCompleteListener,Object)
Phonemetadata$NumberFormat com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getIntlNumberFormat(int)
Phonemetadata$NumberFormat com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getNumberFormat(int)
Phonemetadata$PhoneMetadata com.android.i18n.phonenumbers.PhoneNumberUtil.getMetadataForNonGeographicalRegion(int)
Phonemetadata$PhoneMetadata com.android.i18n.phonenumbers.PhoneNumberUtil.getMetadataForRegion(String)
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType(Phonemetadata$PhoneMetadata,PhoneNumberUtil$PhoneNumberType)
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getEmergency()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getFixedLine()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getGeneralDesc()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getMobile()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getNoInternationalDialling()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getPager()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getPersonalNumber()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getPremiumRate()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getSharedCost()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getTollFree()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getUan()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getVoicemail()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata.getVoip()
Phonemetadata$PhoneNumberDesc com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc.mergeFrom(Phonemetadata$PhoneNumberDesc)
Phonenumber$PhoneNumber com.android.i18n.phonenumbers.PhoneNumberUtil.getExampleNumber(String)
Phonenumber$PhoneNumber com.android.i18n.phonenumbers.PhoneNumberUtil.getExampleNumberForNonGeoEntity(int)
Phonenumber$PhoneNumber com.android.i18n.phonenumbers.PhoneNumberUtil.getExampleNumberForType(String,PhoneNumberUtil$PhoneNumberType)
Phonenumber$PhoneNumber com.android.i18n.phonenumbers.Phonenumber$PhoneNumber.mergeFrom(Phonenumber$PhoneNumber)
Phonenumber$PhoneNumber$CountryCodeSource com.android.i18n.phonenumbers.Phonenumber$PhoneNumber.getCountryCodeSource()
PhotoEditorView com.android.contacts.editor.BaseRawContactEditorView.getPhotoEditor()
PhotoEntry com.android.gallery3d.picasasource.PicasaAlbum.getPhotoEntry(PicasaSource,long)
PhotoEntry com.android.gallery3d.picasasource.PicasaImage.getPhotoEntry()
PhotoPriorityResolver com.android.providers.contacts.ContactsProvider2.createPhotoPriorityResolver(Context)
PhotoSelectionHandler$PhotoActionListener com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler.getListener()
PhotoSelectionHandler$PhotoActionListener com.android.contacts.editor.ContactEditorFragment$PhotoHandler.getListener()
PhotoStore com.android.providers.contacts.ContactsProvider2.getPhotoStore()
PhotoStore com.android.providers.contacts.ContactsProvider2.getProfilePhotoStore()
PhotoStore$Entry com.android.providers.contacts.PhotoStore.get(long)
PhotoView$Size com.android.gallery3d.ui.PhotoView$FullPicture.getSize()
PhotoView$Size com.android.gallery3d.ui.PhotoView$ScreenNailPicture.getSize()
PicasaDatabaseHelper com.google.android.picasasync.PicasaDatabaseHelper.get(Context)
PicasaFacade com.android.gallery3d.picasasource.PicasaSource.getPicasaFacade()
PicasaFacade com.google.android.picasasync.PicasaFacade.get(Context)
PicasaStoreFacade com.android.gallery3d.picasasource.PicasaSource.getPicasaStoreFacade()
PicasaStoreFacade com.google.android.picasastore.PicasaStoreFacade.get(Context)
PicasaSyncHelper com.google.android.picasasync.PicasaSyncHelper.getInstance(Context)
PicasaSyncManager com.google.android.picasasync.PicasaSyncManager.get(Context)
PieItem com.android.browser.PieControl.makeItem(int,int)
PieMenu$PieView com.android.browser.view.PieItem.getPieView()
PkgUsageStats com.android.server.am.UsageStatsService.getPkgUsageStats(ComponentName)
PkgUsageStats[] com.android.server.am.UsageStatsService.getAllPkgUsageStats()
PluginList android.webkit.WebViewClassic.getPluginList()
Point com.android.launcher2.DragView.getDragVisualizeOffset()
Point com.android.uiautomator.core.UiDevice.getDisplaySizeDp()
PointF com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite$1.getPosition(DeviceOrientationDetector$DeviceOrientation)
PointF com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite.getPosition()
PointerIcon android.view.PointerIcon$1.createFromParcel(Parcel)
PointerIcon android.view.PointerIcon.getDefaultIcon(Context)
PointerIcon android.view.PointerIcon.getNullIcon()
PointerIcon android.view.PointerIcon.getSystemIcon(Context,int)
PointerIcon android.view.PointerIcon.load(Context)
PointerTracker com.android.inputmethod.keyboard.PointerTracker.getPointerTracker(int,PointerTracker$KeyEventHandler)
PointerTracker$DrawingProxy com.android.inputmethod.keyboard.MainKeyboardView.getDrawingProxy()
PointerTracker$DrawingProxy com.android.inputmethod.keyboard.MoreKeysKeyboardView.getDrawingProxy()
PointerTracker$DrawingProxy com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2.getDrawingProxy()
PointerTracker$DrawingProxy com.android.inputmethod.latin.suggestions.MoreSuggestionsView.getDrawingProxy()
PointerTracker$TimerProxy com.android.inputmethod.keyboard.MainKeyboardView.getTimerProxy()
PointerTracker$TimerProxy com.android.inputmethod.keyboard.MoreKeysKeyboardView.getTimerProxy()
PointerTracker$TimerProxy com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2.getTimerProxy()
PointerTracker$TimerProxy com.android.inputmethod.latin.suggestions.MoreSuggestionsView.getTimerProxy()
PointerTrackerQueue$Element com.android.inputmethod.keyboard.internal.PointerTrackerQueue.getOldestElement()
Policy com.android.email.SecurityPolicy.computeAggregatePolicy()
Policy com.android.email.SecurityPolicy.getAggregatePolicy()
Policy com.android.email.activity.setup.SetupData.getPolicy()
Policy com.android.emailcommon.provider.Policy.restorePolicyWithId(Context,long)
Policy com.android.exchange.adapter.ProvisionParser.getPolicy()
PopupManager com.android.camera.ui.PopupManager.getInstance(Context)
PowerManager$WakeLock android.os.PowerManager.newWakeLock(int,String)
PowerManager$WakeLock com.android.providers.calendar.CalendarAlarmManager.getScheduleNextAlarmWakeLock()
Predicate com.google.common.base.Predicates$ObjectPredicate.withNarrowedType()
Preference$OnPreferenceChangeListener android.preference.Preference.getOnPreferenceChangeListener()
Preference$OnPreferenceClickListener android.preference.Preference.getOnPreferenceClickListener()
PreferenceActivity$Header android.preference.PreferenceActivity.onGetInitialHeader()
PreferenceActivity$Header android.preference.PreferenceActivity.onGetNewHeader()
PreferenceGroup com.android.camera.CameraSettings.getPreferenceGroup(int)
PreferenceManager$OnPreferenceTreeClickListener android.preference.PreferenceManager.getOnPreferenceTreeClickListener()
Preferences com.android.email.Preferences.getPreferences(Context)
PreferredIntentResolver com.android.server.pm.Settings.editPreferredActivitiesLPw(int)
PrefetchHelper com.google.android.picasasync.PrefetchHelper.get(Context)
PrefetchHelper$CacheStats com.google.android.picasasync.PrefetchHelper.getCacheStatistics(int)
PreloadedTabControl com.android.browser.IntentHandler$UrlData.getPreloadedTab()
PreloadedTabControl com.android.browser.Preloader$PreloaderSession.getTabControl()
PreloadedTabControl com.android.browser.Preloader.getPreloadedTab(String)
Preloader com.android.browser.Preloader.getInstance()
Presenter com.android.mms.ui.PresenterFactory.getPresenter(String,Context,ViewInterface,Model)
PresetReverb$Settings android.media.audiofx.PresetReverb.getProperties()
Principal[] java.security.ProtectionDomain.getPrincipals()
PrivateKey com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager.getPrivateKey(String)
PrivateKey com.android.emailcommon.utility.SSLUtils$TrackingKeyManager.getPrivateKey(String)
PrivateKey org.apache.harmony.xnet.provider.jsse.OpenSSLEngine.getPrivateKeyById(String)
ProcessRecord com.android.server.am.ActivityManagerService.addAppLocked(ApplicationInfo,boolean)
ProcessRecord com.android.server.am.ActivityManagerService.getProcessRecordLocked(String,int)
ProcessRecord com.android.server.am.ActivityManagerService.getRecordForAppLocked(IApplicationThread)
ProcessRecord com.android.server.am.ActivityManagerService.startProcessLocked(String,ApplicationInfo,boolean,int,String,ComponentName,boolean,boolean)
ProcessStats$Stats com.android.internal.os.ProcessStats.getStats(int)
ProcessStats$Stats com.android.internal.os.ProcessStats.getWorkingStats(int)
ProfileDatabaseHelper com.android.providers.contacts.ProfileDatabaseHelper.getInstance(Context)
ProfileDatabaseHelper com.android.providers.contacts.ProfileDatabaseHelper.getNewInstanceForTest(Context)
ProfileService$IProfileServiceBinder com.android.bluetooth.a2dp.A2dpService.initBinder()
ProfileService$IProfileServiceBinder com.android.bluetooth.hdp.HealthService.initBinder()
Program android.filterpacks.imageproc.AlphaBlendFilter.getNativeProgram(FilterContext)
Program android.filterpacks.imageproc.AlphaBlendFilter.getShaderProgram(FilterContext)
Program android.filterpacks.imageproc.BlendFilter.getNativeProgram(FilterContext)
Program android.filterpacks.imageproc.BlendFilter.getShaderProgram(FilterContext)
Program android.filterpacks.imageproc.BrightnessFilter.getNativeProgram(FilterContext)
Program android.filterpacks.imageproc.BrightnessFilter.getShaderProgram(FilterContext)
Program android.filterpacks.imageproc.ContrastFilter.getNativeProgram(FilterContext)
Program android.filterpacks.imageproc.ContrastFilter.getShaderProgram(FilterContext)
Program android.filterpacks.imageproc.Invert.getNativeProgram(FilterContext)
Program android.filterpacks.imageproc.Invert.getShaderProgram(FilterContext)
Program android.filterpacks.imageproc.ToGrayFilter.getNativeProgram(FilterContext)
Program android.filterpacks.imageproc.ToGrayFilter.getShaderProgram(FilterContext)
Program$BaseProgramBuilder android.renderscript.Program$BaseProgramBuilder.setShader(Resources,int)
Program$TextureType android.renderscript.Program.getTextureType(int)
ProgramFragmentFixedFunction$Builder android.renderscript.ProgramFragmentFixedFunction$Builder.setTexture(ProgramFragmentFixedFunction$Builder$EnvMode,ProgramFragmentFixedFunction$Builder$Format,int)
ProgramRaster$CullMode android.renderscript.ProgramRaster.getCullMode()
ProgramStore$BlendDstFunc android.renderscript.ProgramStore.getBlendDstFunc()
ProgramStore$BlendSrcFunc android.renderscript.ProgramStore.getBlendSrcFunc()
ProgramStore$DepthFunc android.renderscript.ProgramStore.getDepthFunc()
ProgramVertexFixedFunction android.renderscript.ProgramVertexFixedFunction$Builder.create()
ProgressBar com.android.videoeditor.widgets.ProgressBar.getProgressBar(Context)
ProgressBar$RefreshData android.widget.ProgressBar$RefreshData.getNextPoolable()
PropertyOptions com.adobe.xmp.impl.XMPNode.getOptions()
PropertyOptions com.adobe.xmp.options.PropertyOptions.setArray(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setArrayAltText(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setArrayAlternate(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setArrayOrdered(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setHasLanguage(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setHasQualifiers(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setHasType(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setQualifier(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setSchemaNode(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setStruct(boolean)
PropertyOptions com.adobe.xmp.options.PropertyOptions.setURI(boolean)
ProtocolVersion org.apache.http.message.BasicLineParser.parseProtocolVersion(CharArrayBuffer,ParserCursor)
Provider java.security.cert.CertPathValidator.getProvider()
Provider java.security.cert.CertStore.getProvider()
Provider javax.crypto.ExemptionMechanism.getProvider()
Provider$Service java.security.Provider.getService(String)
Provider$Service java.security.Provider.getService(String,String)
Provider$Service java.security.Security$SecurityDoor.getService(Provider,String)
Provider$Service org.apache.harmony.security.fortress.Services.getSecureRandomService()
Provider$Service org.apache.harmony.security.fortress.Services.getService(String)
ProviderInfo android.content.pm.IPackageManager$Stub$Proxy.getProviderInfo(ComponentName,int,int)
ProviderInfo android.content.pm.IPackageManager$Stub$Proxy.resolveContentProvider(String,int,int)
ProviderInfo com.android.server.pm.PackageManagerService.getProviderInfo(ComponentName,int,int)
ProviderInfo com.android.server.pm.PackageManagerService.resolveContentProvider(String,int,int)
ProviderProperties android.location.ILocationManager$Stub$Proxy.getProviderProperties(String)
ProviderProperties com.android.internal.location.ILocationProvider$Stub$Proxy.getProperties()
ProviderProperties com.android.server.LocationManagerService.getProviderProperties(String)
ProviderProperties com.android.server.location.GpsLocationProvider.getProperties()
ProviderProperties com.android.server.location.LocationProviderProxy.getProperties()
ProviderProperties com.android.server.location.MockProvider.getProperties()
ProviderProperties com.android.server.location.PassiveProvider.getProperties()
ProviderStatusWatcher com.android.contacts.list.ProviderStatusWatcher.getInstance(Context)
ProviderStatusWatcher$Status com.android.contacts.list.ProviderStatusWatcher.getProviderStatus()
ProximityInfo com.android.inputmethod.keyboard.Keyboard.getProximityInfo()
ProximityInfo com.android.inputmethod.keyboard.ProximityInfo.createSpellCheckerProximityInfo(int[],int,int,int)
ProxyProperties android.net.wifi.WifiConfigStore.getProxyProperties(int)
ProxyProperties com.android.server.ConnectivityService.getGlobalProxy()
ProxyProperties com.android.server.ConnectivityService.getProxy()
PublicKey com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest.getPublicKey()
PublicKey java.security.cert.TrustAnchor.getCAPublicKey()
QueryController com.android.uiautomator.core.UiAutomatorBridge.getQueryController()
QuickContactBadge com.android.contacts.list.ContactListItemView.getQuickContact()
QuickContactBadge com.android.contacts.list.ContactTileView.getQuickContact()
QwertyKeyListener android.text.method.QwertyKeyListener.getInstance(boolean,TextKeyListener$Capitalize)
RDN com.android.org.bouncycastle.asn1.x500.RDN.getInstance(Object)
RDN[] com.android.org.bouncycastle.asn1.x500.X500Name.getRDNs()
RDN[] com.android.org.bouncycastle.asn1.x500.X500Name.getRDNs(ASN1ObjectIdentifier)
RateController com.android.mms.util.RateController.getInstance()
Rational com.android.gallery3d.exif.ExifTag.getRational(int)
RawContact com.android.contacts.model.dataitem.DataItem.getRawContact()
RawContact$NamedDataItem com.android.contacts.model.RawContact.addNamedDataItemValues(Uri,ContentValues)
RawContactDelta com.android.contacts.model.RawContactDeltaList.getByRawContactId(Long)
RawContactDelta com.android.contacts.model.RawContactDeltaList.getFirstWritableRawContact(Context)
RawContactDelta$ValuesDelta com.android.contacts.editor.LabeledEditorView.getEntry()
RawContactDelta$ValuesDelta com.android.contacts.editor.LabeledEditorView.getValues()
RawContactDelta$ValuesDelta com.android.contacts.model.RawContactDelta.getEntry(Long)
RawContactDelta$ValuesDelta com.android.contacts.model.RawContactDelta.getPrimaryEntry(String)
RawContactDelta$ValuesDelta com.android.contacts.model.RawContactDelta.getSuperPrimaryEntry(String,boolean)
RawContactDelta$ValuesDelta com.android.contacts.model.RawContactDelta.getValues()
RawContactDelta$ValuesDelta com.android.contacts.model.RawContactModifier.insertChild(RawContactDelta,DataKind,AccountType$EditType)
RawContactDelta$ValuesDelta com.android.contacts.model.RawContactModifier.parseExtras(RawContactDelta,DataKind,Bundle,String,String,String)
RawContactDeltaList com.android.contacts.detail.PhotoSelectionHandler.getDeltaForAttachingPhotoToContact()
RawContactDeltaList com.android.contacts.model.RawContactDeltaList.fromIterator(Iterator)
RawContactDeltaList com.android.contacts.model.RawContactDeltaList.fromQuery(Uri,ContentResolver,String,String[],String)
RawTexture com.android.gallery3d.ui.PreparePageFadeoutTexture.get()
Reader com.google.common.io.CharStreams$4.getInput()
RecentMailboxManager com.android.email.activity.RecentMailboxManager.getInstance(Context)
RecentTasksLoader com.android.systemui.recent.RecentTasksLoader.getInstance(Context)
RecipientChip com.android.ex.chips.RecipientEditTextView.getLastChip()
RecipientChip[] com.android.ex.chips.RecipientEditTextView.getSortedRecipients()
RecipientEntry com.android.ex.chips.RecipientAlternatesAdapter.getRecipientEntry(int)
RecipientEntry com.android.ex.chips.RecipientChip.getEntry()
RecipientEntry com.android.ex.chips.RecipientEditTextView.access$2300(RecipientEditTextView,RecipientEntry)
Rect android.media.TimedText.getBounds()
Rect android.media.videoeditor.EffectKenBurns.getEndRect()
Rect android.media.videoeditor.EffectKenBurns.getStartRect()
Rect android.webkit.WebViewClassic.sendOurVisibleRect()
Rect android.widget.EdgeEffect.getBounds(boolean)
Rect com.android.contacts.ContactsUtils.getTargetRectFromView(Context,View)
Rect com.android.gallery3d.data.Face.getPosition()
Rect com.android.gallery3d.filtershow.cache.ImageLoader.getOriginalBounds()
Rect com.android.gallery3d.filtershow.imageshow.ImageShow.getDisplayedImageBounds()
Rect com.android.gallery3d.filtershow.imageshow.ImageSlave.getDisplayedImageBounds()
Rect com.android.gallery3d.ui.NinePatchTexture.getPaddings()
Rect com.android.gallery3d.ui.PositionController.getPosition(int)
Rect com.android.gallery3d.ui.SlotView$Layout.getSlotRect(int,Rect)
Rect com.android.gallery3d.ui.SlotView.getSlotRect(int)
Rect com.android.gallery3d.ui.SlotView.getSlotRect(int,GLView)
Rect com.android.launcher2.AppWidgetResizeFrame.getWidgetSizeRanges(Launcher,int,int,Rect)
Rect com.android.launcher2.ButtonDropTarget.getIconRect(int,int,int,int)
Rect com.android.launcher2.CellLayout$ViewCluster.getBoundingRect()
Rect com.android.launcher2.DragView.getDragRegion()
Rect com.android.launcher2.SearchDropTargetBar.getSearchBarBounds()
Rect com.android.launcher2.Workspace.getCellLayoutMetrics(Launcher,int)
Rect com.android.server.accessibility.ScreenMagnifier$MagnificationController.getMagnifiedRegionBounds()
Rect com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow.getBounds()
Rect com.android.server.accessibility.ScreenMagnifier$Viewport.getBounds()
Rect com.android.server.wm.WindowState.getContentFrameLw()
Rect com.android.server.wm.WindowState.getDisplayFrameLw()
Rect com.android.server.wm.WindowState.getFrameLw()
Rect com.android.server.wm.WindowState.getGivenContentInsetsLw()
Rect com.android.server.wm.WindowState.getGivenVisibleInsetsLw()
Rect com.android.server.wm.WindowState.getVisibleFrameLw()
Rect com.android.uiautomator.core.AccessibilityNodeInfoHelper.getVisibleBoundsInScreen(AccessibilityNodeInfo)
Rect com.android.videoeditor.service.MovieEffect.getEndRect()
Rect com.android.videoeditor.service.MovieEffect.getStartRect()
RectF android.gesture.Gesture.getBoundingBox()
RectF com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getCropBounds(Bitmap)
RectF com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getPhotoBounds()
RectF com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getPreviewCropBounds()
RectF com.android.gallery3d.filtershow.imageshow.ImageCrop.getCropBoundsDisplayed()
RectF com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalCropBounds()
RectF com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalDisplayBounds()
RectF com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalPhotoBounds()
RectF com.android.gallery3d.filtershow.imageshow.ImageGeometry.getUntranslatedStraightenCropBounds(RectF,float)
RectF com.android.gallery3d.filtershow.imageshow.ImageGeometry.straightenBounds()
RectF com.android.gallery3d.filtershow.imageshow.ImageGeometry.unrotatedCropBounds()
RectF com.android.gallery3d.ui.CropView.getCropRectangle()
RectF com.android.server.wm.WindowState.getShownFrameLw()
Recycler$MmsRecycler com.android.mms.util.Recycler.getMmsRecycler()
Recycler$SmsRecycler com.android.mms.util.Recycler.getSmsRecycler()
RefreshManager com.android.email.RefreshManager.getInstance(Context)
RefreshManager$Status com.android.email.RefreshManager$RefreshStatusMap.get(long)
RefreshManager$Status com.android.email.RefreshManager.getMailboxListStatusForTest(long)
RefreshManager$Status com.android.email.RefreshManager.getMessageListStatusForTest(long)
RegionModel com.android.mms.model.LayoutModel.getImageRegion()
RegionModel com.android.mms.model.LayoutModel.getTextRegion()
RegionModel com.android.mms.model.RegionMediaModel.getRegion()
RegisteredServicesCache$ServiceInfo android.accounts.AccountAuthenticatorCache.getServiceInfo(AuthenticatorDescription,int)
RegisteredServicesCache$ServiceInfo android.content.pm.RegisteredServicesCache.getServiceInfo(Object,int)
RelativeLayout$DependencyGraph$Node android.widget.RelativeLayout$DependencyGraph$Node.getNextPoolable()
RemoteControlClient android.media.MediaRouter$UserRouteInfo.getRemoteControlClient()
RemoteControlClient$MetadataEditor android.media.RemoteControlClient$MetadataEditor.putLong(int,long)
RemoteControlClient$MetadataEditor android.media.RemoteControlClient$MetadataEditor.putString(int,String)
RemoteDevices$DeviceProperties com.android.bluetooth.btservice.RemoteDevices.addDeviceProperties(byte[])
RemoteDevices$DeviceProperties com.android.bluetooth.btservice.RemoteDevices.getDeviceProperties(BluetoothDevice)
RemoteViews android.app.Notification$Style.getStandardView(int)
RemoteViews android.widget.RemoteViewsService$RemoteViewsFactoryAdapter.getLoadingView()
RemoteViews android.widget.RemoteViewsService$RemoteViewsFactoryAdapter.getViewAt(int)
RemoteViews com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory.getLoadingView()
RemoteViews com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory.getViewAt(int)
RemoteViews com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.getLoadingView()
RemoteViews com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.getViewAt(int)
RemoteViews com.android.email.widget.EmailWidget.getLoadingView()
RemoteViews com.android.email.widget.EmailWidget.getViewAt(int)
RemoteViews com.android.gallery3d.gadget.WidgetService$PhotoRVFactory.getLoadingView()
RemoteViews com.android.gallery3d.gadget.WidgetService$PhotoRVFactory.getViewAt(int)
RemoteViews com.android.mms.widget.MmsWidgetService$MmsFactory.getLoadingView()
RemoteViews com.android.mms.widget.MmsWidgetService$MmsFactory.getViewAt(int)
RemoteViews com.android.server.AppWidgetService.getAppWidgetViews(int)
RemoteViews com.android.server.AppWidgetServiceImpl.getAppWidgetViews(int)
RemoteViewsAdapter$RemoteViewsFrameLayout android.widget.RemoteViewsAdapter$RemoteViewsMetaData.access$1900(RemoteViewsAdapter$RemoteViewsMetaData,int,View,ViewGroup,Object,LayoutInflater,RemoteViews$OnClickHandler)
RemoteViewsAdapter$RemoteViewsIndexMetaData android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache.getMetaDataAt(int)
RemoteViewsAdapter$RemoteViewsMetaData android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache.getMetaData()
RemoteViewsAdapter$RemoteViewsMetaData android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache.getTemporaryMetaData()
RenderScript com.android.gallery3d.filtershow.filters.ImageFilterRS.getRenderScriptContext()
RenderScript$RSErrorHandler android.renderscript.RenderScript.getErrorHandler()
RenderScript$RSMessageHandler android.renderscript.RenderScript.getMessageHandler()
RenderScriptGL android.renderscript.RSSurfaceView.getRenderScriptGL()
RenderedGui com.google.android.apps.lightcycle.panorama.LightCycleRenderer.getRenderedGui()
RequestDirector org.apache.http.impl.client.AbstractHttpClient.createClientRequestDirector(HttpRequestExecutor,ClientConnectionManager,ConnectionReuseStrategy,ConnectionKeepAliveStrategy,HttpRoutePlanner,HttpProcessor,HttpRequestRetryHandler,RedirectHandler,AuthenticationHandler,AuthenticationHandler,UserTokenHandler,HttpParams)
RequestLine org.apache.http.message.BasicLineParser.parseRequestLine(CharArrayBuffer,ParserCursor)
ResolveCache com.android.contacts.quickcontact.ResolveCache.getInstance(Context)
ResolveCache$Entry com.android.contacts.quickcontact.ResolveCache.getEntry(Action)
ResolveInfo android.app.ApplicationPackageManager.resolveActivityAsUser(Intent,int,int)
ResolveInfo android.content.pm.IPackageManager$Stub$Proxy.resolveIntent(Intent,String,int,int)
ResolveInfo android.content.pm.IPackageManager$Stub$Proxy.resolveService(Intent,String,int,int)
ResolveInfo com.android.contacts.quickcontact.ResolveCache.getBestResolve(Intent,List)
ResolveInfo com.android.server.pm.PackageManagerService.resolveService(Intent,String,int,int)
ResourceBundle java.util.ResourceBundle.getBundle(String,Locale,ClassLoader,ResourceBundle$Control)
ResourceBundle java.util.ResourceBundle.getBundle(String,Locale,ResourceBundle$Control)
ResourceBundle java.util.ResourceBundle.getBundle(String,ResourceBundle$Control)
ResourceBundle$Control java.util.ResourceBundle$Control.getControl(List)
ResourceBundle$Control java.util.ResourceBundle$Control.getNoFallbackControl(List)
ResourceHelper com.android.email.ResourceHelper.getInstance(Context)
Resources android.app.ActivityThread.getTopLevelResources(String,int,Configuration,CompatibilityInfo)
Resources android.app.ActivityThread.getTopLevelResources(String,int,Configuration,LoadedApk)
Resources android.app.ApplicationPackageManager.getResourcesForApplicationAsUser(String,int)
Resources android.view.ContextThemeWrapper.getResources()
Resources$Theme android.app.ContextImpl.getTheme()
Resources$Theme android.content.ContextWrapper.getTheme()
Resources$Theme android.view.ContextThemeWrapper.getTheme()
RestoreSet[] com.android.internal.backup.IBackupTransport$Stub$Proxy.getAvailableRestoreSets()
RestoreSet[] com.android.internal.backup.LocalTransport.getAvailableRestoreSets()
RetryScheduler com.android.mms.transaction.RetryScheduler.getInstance(Context)
RichInputConnection$Range com.android.inputmethod.latin.RichInputConnection.getWordRangeAtCursor(String,int)
Ringer com.android.phone.PhoneGlobals.getRinger()
Ringtone android.media.RingtoneManager.getRingtone(Context,Uri)
RouteInfo$LayerType org.apache.http.conn.routing.HttpRoute.getLayerType()
RouteInfo$LayerType org.apache.http.conn.routing.RouteTracker.getLayerType()
RouteInfo$TunnelType org.apache.http.conn.routing.HttpRoute.getTunnelType()
RouteInfo$TunnelType org.apache.http.conn.routing.RouteTracker.getTunnelType()
RouteInfo[] android.os.INetworkManagementService$Stub$Proxy.getRoutes(String)
RouteInfo[] com.android.server.NetworkManagementService.getRoutes(String)
RuleBasedCollator com.android.providers.contacts.NameNormalizer.getComplexityCollator()
RuleBasedCollator com.android.providers.contacts.NameNormalizer.getCompressingCollator()
Runnable com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.access$800(CalendarAppWidgetService$CalendarFactory,String,BroadcastReceiver$PendingResult,int)
Runnable com.android.contacts.voicemail.VoicemailPlaybackPresenter$FetchResultHandler.getTimeoutRunnable()
SIPHeader gov.nist.javax.sip.header.SIPHeaderList.get(int)
SIPHeader gov.nist.javax.sip.header.SIPHeaderList.remove(int)
SIPHeader gov.nist.javax.sip.header.SIPHeaderList.set(int,SIPHeader)
SMILDocument com.android.mms.dom.smil.parser.SmilContentHandler.getSmilDocument()
SMILDocument com.android.mms.model.SmilHelper.getDocument(PduBody)
SMILDocument com.android.mms.model.SmilHelper.getDocument(SlideshowModel)
SMILElement com.android.mms.dom.smil.SmilDocumentImpl.getBody()
SMILElement com.android.mms.dom.smil.SmilDocumentImpl.getHead()
SMILLayoutElement com.android.mms.dom.smil.SmilDocumentImpl.getLayout()
SMILMediaElement com.android.mms.model.SmilHelper.createMediaElement(String,SMILDocument,String)
SMILParElement com.android.mms.model.SmilHelper.addPar(SMILDocument)
SMILRegionElement com.android.mms.dom.smil.SmilRegionMediaElementImpl.getRegion()
SMILRootLayoutElement com.android.mms.dom.smil.SmilLayoutElementImpl.getRootLayout()
SQLiteDatabase android.app.ContextImpl.openOrCreateDatabase(String,int,SQLiteDatabase$CursorFactory)
SQLiteDatabase android.app.ContextImpl.openOrCreateDatabase(String,int,SQLiteDatabase$CursorFactory,DatabaseErrorHandler)
SQLiteDatabase android.content.ContextWrapper.openOrCreateDatabase(String,int,SQLiteDatabase$CursorFactory)
SQLiteDatabase android.content.ContextWrapper.openOrCreateDatabase(String,int,SQLiteDatabase$CursorFactory,DatabaseErrorHandler)
SQLiteDatabase android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(File,SQLiteDatabase$CursorFactory)
SQLiteDatabase android.database.sqlite.SQLiteProgram.getDatabase()
SQLiteDatabase com.android.browser.provider.SnapshotProvider.getReadableDatabase()
SQLiteDatabase com.android.browser.provider.SnapshotProvider.getWritableDatabase()
SQLiteDatabase com.android.email.provider.EmailProvider.getDatabase(Context)
SQLiteDatabase com.android.email.provider.EmailProvider.getReadableDatabase(Context)
SQLiteDatabase com.android.providers.calendar.CalendarDatabaseHelper.getWritableDatabase()
SQLiteDatabase com.android.providers.contacts.ContactsDatabaseHelper.getDatabase(boolean)
SQLiteDatabase com.android.providers.contacts.ContactsTransaction.getDbForTag(String)
SQLiteDatabase com.android.providers.media.MediaProvider$DatabaseHelper.getWritableDatabase()
SQLiteDatabase com.android.providers.telephony.MmsSmsDatabaseHelper.getWritableDatabase()
SQLiteDatabase com.google.android.picasasync.PicasaDatabaseHelper.getReadableDatabase()
SQLiteDatabase com.google.android.picasasync.PicasaDatabaseHelper.getWritableDatabase()
SQLiteDatabase com.google.android.picasasync.PicasaSyncHelper.getWritableDatabase()
SQLiteDatabase com.google.android.picasasync.UploadsDatabaseHelper.getReadableDatabase()
SQLiteDatabase com.google.android.picasasync.UploadsDatabaseHelper.getWritableDatabase()
SQLiteDebug$PagerStats android.database.sqlite.SQLiteDebug.getDatabaseInfo()
SQLiteOpenHelper com.android.browser.provider.BrowserProvider2.getDatabaseHelper(Context)
SQLiteOpenHelper com.android.providers.calendar.CalendarProvider2.getDatabaseHelper(Context)
SQLiteOpenHelper com.android.providers.calendar.SQLiteContentProvider.getDatabaseHelper()
SQLiteOpenHelper com.android.providers.contacts.AbstractContactsProvider.getDatabaseHelper()
SQLiteOpenHelper com.android.providers.contacts.ContactsProvider2.getDatabaseHelper(Context)
SQLiteOpenHelper com.android.providers.contacts.ProfileProvider.getDatabaseHelper(Context)
SQLiteSession android.database.sqlite.SQLiteDatabase$1.initialValue()
SQLiteSession android.database.sqlite.SQLiteDatabase.createSession()
SQLiteSession android.database.sqlite.SQLiteDatabase.getThreadSession()
SQLiteSession android.database.sqlite.SQLiteProgram.getSession()
SSLCertificateSocketFactory com.android.emailcommon.utility.SSLUtils.getSSLSocketFactory(boolean,int)
SSLEngineResult$HandshakeStatus javax.net.ssl.SSLEngineResult.getHandshakeStatus()
SSLEngineResult$HandshakeStatus org.apache.harmony.xnet.provider.jsse.HandshakeProtocol.getStatus()
SSLEngineResult$HandshakeStatus org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.getHandshakeStatus()
SSLEngineResult$Status javax.net.ssl.SSLEngineResult.getStatus()
SSLSession org.apache.harmony.xnet.provider.jsse.ClientSessionContext.getSession(byte[])
SSLSocketFactory com.android.emailcommon.utility.SSLUtils.getHttpSocketFactory(boolean,KeyManager)
SSLSocketFactory libcore.net.http.HttpEngine.getSslSocketFactory()
SSLSocketFactory libcore.net.http.HttpsURLConnectionImpl$HttpsEngine.getSslSocketFactory()
SampleDependencyTypeBox com.coremedia.iso.boxes.SampleTableBox.getSampleDependencyTypeBox()
SampleDescriptionBox com.coremedia.iso.boxes.SampleTableBox.getSampleDescriptionBox()
SampleDescriptionBox com.googlecode.mp4parser.authoring.Mp4TrackImpl.getSampleDescriptionBox()
SampleDescriptionBox com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getSampleDescriptionBox()
SampleFlags com.coremedia.iso.boxes.fragment.TrackExtendsBox.getDefaultSampleFlags()
SampleFlags com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getDefaultSampleFlags()
SampleFlags com.coremedia.iso.boxes.fragment.TrackRunBox$Entry.getSampleFlags()
SampleFlags com.coremedia.iso.boxes.fragment.TrackRunBox.getFirstSampleFlags()
SampleSizeBox com.coremedia.iso.boxes.SampleTableBox.getSampleSizeBox()
SampleTableBox com.coremedia.iso.boxes.MediaInformationBox.getSampleTableBox()
SampleTableBox com.coremedia.iso.boxes.TrackBox.getSampleTableBox()
SampleToChunkBox com.coremedia.iso.boxes.SampleTableBox.getSampleToChunkBox()
Sampler$Value android.renderscript.Sampler.getMagnification()
Sampler$Value android.renderscript.Sampler.getMinification()
Sampler$Value android.renderscript.Sampler.getWrapS()
Sampler$Value android.renderscript.Sampler.getWrapT()
SaveImageInBackgroundData com.android.systemui.screenshot.SaveImageInBackgroundTask.doInBackground(SaveImageInBackgroundData[])
ScaleGestureDetector android.webkit.ZoomManager.getScaleGestureDetector()
ScreenMagnifier$MagnificationController$MagnificationSpec com.android.server.accessibility.ScreenMagnifier$MagnificationController.getAccessibilityTransformation()
ScreenNail com.android.camera.ActivityBase$MyAppBridge.getCameraScreenNail()
ScreenNail com.android.camera.ActivityBase.reuseCameraScreenNail(boolean)
ScreenNail com.android.gallery3d.app.PhotoDataAdapter.getScreenNail()
ScreenNail com.android.gallery3d.app.PhotoDataAdapter.getScreenNail(int)
ScreenNail com.android.gallery3d.app.SinglePhotoDataAdapter.getScreenNail(int)
ScreenNail com.android.gallery3d.data.MediaItem.getScreenNail()
ScreenNail com.android.gallery3d.data.SnailItem.getScreenNail()
ScreenNail com.android.gallery3d.ui.BitmapTileProvider.getScreenNail()
ScreenNail com.android.gallery3d.ui.TileImageViewAdapter.getScreenNail()
ScreenRotationAnimation com.android.server.wm.WindowAnimator.getScreenRotationAnimationLocked(int)
Script$FieldID android.renderscript.Script.createFieldID(int,Element)
Script$KernelID android.renderscript.Script.createKernelID(int,int,Element,Element)
ScriptC com.android.wallpaper.RenderScriptScene.getScript()
ScrollingTabContainerView$TabView com.android.internal.widget.ScrollingTabContainerView.access$300(ScrollingTabContainerView,ActionBar$Tab,boolean)
SearchDropTargetBar com.android.launcher2.Launcher.getSearchBar()
SearchEngine com.android.browser.BrowserSettings.getSearchEngine()
SearchEngine com.android.browser.search.SearchEngines.get(Context,String)
SearchEngine com.android.browser.search.SearchEngines.getDefaultSearchEngine(Context)
SearchEngineInfo com.android.browser.search.SearchEngines.getSearchEngineInfo(Context,String)
SearchIndexManager$FtsQueryBuilder com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder.getDigitsQueryBuilder(String)
SearchManager com.android.internal.policy.impl.PhoneFallbackEventHandler.getSearchManager()
SearchParams com.android.email.MessageListContext.getSearchParams()
SearchRecentSuggestions com.android.mms.MmsApp.getRecentSuggestions()
SearchableInfo android.app.SearchableInfo.getActivityMetaData(Context,ActivityInfo,int)
SearchableInfo android.server.search.SearchManagerService.getSearchableInfo(ComponentName)
SearchableInfo android.server.search.Searchables.getSearchableInfo(ComponentName)
SecretKey android.content.pm.ContainerEncryptionParams.getEncryptionKey()
SecretKey android.content.pm.ContainerEncryptionParams.getMacKey()
SectionIndexer com.android.contacts.widget.IndexerListAdapter.getIndexer()
SecurityPolicy com.android.email.SecurityPolicy.getInstance(Context)
SeekBar android.preference.SeekBarDialogPreference.getSeekBar(View)
SeekBar android.preference.VolumePreference$SeekBarVolumizer.getSeekBar()
Sender com.android.email.mail.Sender.getInstance(Context,Account)
SerialPort android.hardware.SerialManager.openSerialPort(String,int)
Serialization$FieldSetter com.google.common.collect.Serialization.getFieldSetter(Class,String)
SerializeOptions com.adobe.xmp.options.SerializeOptions.setOmitPacketWrapper(boolean)
SerializeOptions com.adobe.xmp.options.SerializeOptions.setUseCompactFormat(boolean)
SerializedFrame$DirectByteInputStream android.filterfw.core.SerializedFrame$DirectByteOutputStream.getInputStream()
Serializer com.android.exchange.adapter.Serializer.data(int,String)
Serializer com.android.exchange.adapter.Serializer.opaque(InputStream,int)
Serializer com.android.exchange.adapter.Serializer.opaqueWithoutData(int)
Serializer com.android.exchange.adapter.Serializer.tag(int)
Serializer com.android.exchange.adapter.Serializer.text(String)
ServerTransaction com.android.server.sip.SipHelper.getServerTransaction(RequestEvent)
ServerTransaction com.android.server.sip.SipHelper.sendInviteOk(RequestEvent,SipProfile,String,ServerTransaction,String,int)
ServerTransaction com.android.server.sip.SipHelper.sendRinging(RequestEvent,String)
ServiceInfo android.content.pm.IPackageManager$Stub$Proxy.getServiceInfo(ComponentName,int,int)
ServiceInfo com.android.server.pm.PackageManagerService.getServiceInfo(ComponentName,int,int)
ServiceRecord com.android.server.am.ActiveServices$ServiceMap.getServiceByIntent(Intent$FilterComparison)
ServiceRecord com.android.server.am.ActiveServices$ServiceMap.getServiceByIntent(Intent$FilterComparison,int)
ServiceRecord com.android.server.am.ActiveServices$ServiceMap.getServiceByName(ComponentName)
ServiceRecord com.android.server.am.ActiveServices$ServiceMap.getServiceByName(ComponentName,int)
SessionInputBuffer org.apache.http.impl.conn.DefaultClientConnection.createSessionInputBuffer(Socket,int,HttpParams)
SessionOutputBuffer org.apache.http.impl.conn.DefaultClientConnection.createSessionOutputBuffer(Socket,int,HttpParams)
Set android.filterfw.core.FilterGraph.getFilters()
Set android.gesture.GestureLibrary.getGestureEntries()
Set android.gesture.GestureStore.getGestureEntries()
Set android.speech.tts.TextToSpeech.getFeatures(Locale)
Set android.speech.tts.TextToSpeechService.onGetFeaturesForLanguage(String,String,String)
Set com.android.camera.ComboPreferences.getStringSet(String,Set)
Set com.android.email.activity.MessagesAdapter.getSelectedSet()
Set com.android.i18n.phonenumbers.PhoneNumberUtil.getSupportedGlobalNetworkCallingCodes()
Set com.android.providers.contacts.ContactDirectoryManager.getDirectoryProviderPackages(PackageManager)
Set com.android.providers.contacts.ContactsDatabaseHelper.getAllAccountsWithDataSets()
Set com.android.providers.contacts.TransactionContext.getDirtyRawContactIds()
Set com.android.providers.contacts.TransactionContext.getInsertedRawContactIds()
Set com.android.providers.contacts.TransactionContext.getStaleSearchIndexContactIds()
Set com.android.providers.contacts.TransactionContext.getStaleSearchIndexRawContactIds()
Set com.android.providers.contacts.TransactionContext.getUpdatedRawContactIds()
Set com.android.providers.contacts.TransactionContext.getUpdatedSyncStates()
Set com.android.server.IntentResolver.filterSet()
Set com.android.server.IntentResolverOld.filterSet()
Set com.android.server.PackageManagerBackupAgent.getRestoredPackages()
Set com.android.vcard.VCardParserImpl_V21.getAvailableEncodingSet()
Set com.android.vcard.VCardParserImpl_V21.getKnownPropertyNameSet()
Set com.android.vcard.VCardParserImpl_V21.getKnownTypeSet()
Set com.android.vcard.VCardParserImpl_V21.getKnownValueSet()
Set com.android.vcard.VCardParserImpl_V30.getKnownPropertyNameSet()
Set com.android.vcard.VCardParserImpl_V40.getKnownPropertyNameSet()
Set com.google.common.collect.AbstractMultimap.keySet()
Set com.google.common.collect.AbstractMultiset.createElementSet()
Set com.google.common.collect.AbstractMultiset.createEntrySet()
Set com.google.common.collect.AbstractMultiset.elementSet()
Set com.google.common.collect.AbstractMultiset.entrySet()
Set com.google.common.collect.AbstractSortedMultiset.createElementSet()
Set com.google.common.collect.ForwardingMap.entrySet()
Set com.google.common.collect.ForwardingMap.keySet()
Set com.google.common.collect.ForwardingMultimap.keySet()
Set com.google.common.collect.ForwardingMultiset.elementSet()
Set com.google.common.collect.ForwardingMultiset.entrySet()
Set com.google.common.collect.ImmutableMap.entrySet()
Set com.google.common.collect.ImmutableMap.keySet()
Set com.google.common.collect.Maps$ImprovedAbstractMap.entrySet()
Set com.google.common.collect.Multimaps$Keys.createEntrySet()
Set com.google.common.collect.Multisets$UnmodifiableMultiset.elementSet()
Set com.google.common.collect.Multisets$UnmodifiableSortedMultiset.createElementSet()
Set com.google.common.collect.SortedMultisets$DescendingMultiset.createEntrySet()
Set com.google.common.collect.SortedMultisets$DescendingMultiset.entrySet()
Set java.security.cert.PKIXParameters.getInitialPolicies()
Set java.security.cert.PKIXParameters.getTrustAnchors()
Set org.apache.http.client.methods.HttpOptions.getAllowedMethods(HttpResponse)
SetupData com.android.email.activity.setup.SetupData.getInstance()
Shader com.google.android.apps.lightcycle.opengl.DrawableGL.getShader()
Shader$TileMode android.graphics.drawable.BitmapDrawable.getTileModeX()
Shader$TileMode android.graphics.drawable.BitmapDrawable.getTileModeY()
Shape com.android.musicfx.seekbar.ProgressBar.getDrawableShape()
ShapeDrawable$ShaderFactory android.graphics.drawable.ShapeDrawable.getShaderFactory()
SharedPreferences com.android.browser.BrowserSettings.getPreferences()
SharedPreferences com.android.browser.widget.BookmarkThumbnailWidgetService.getWidgetState(Context,int)
SharedPreferences com.android.calendar.CalendarUtils.getSharedPreferences(Context,String)
SharedPreferences com.android.calendar.GeneralPreferences.getSharedPreferences(Context)
SharedPreferences com.android.calendar.alerts.AlertUtils.getFiredAlertsTable(Context)
SharedPreferences com.android.camera.CameraPreference.getSharedPreferences()
SharedPreferences com.android.camera.ComboPreferences.getGlobal()
SharedPreferences com.android.camera.ComboPreferences.getLocal()
SharedPreferences com.android.contacts.ContactsActivity.getSharedPreferences(String,int)
SharedPreferences com.android.contacts.ContactsApplication.getSharedPreferences(String,int)
SharedPreferences com.android.contacts.test.InjectedServices.getSharedPreferences()
SharedPreferences com.android.email.Preferences.getSharedPreferences(Context)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.putBoolean(String,boolean)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.putFloat(String,float)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.putInt(String,int)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.putLong(String,long)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.putString(String,String)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.putStringSet(String,Set)
SharedPreferences$Editor android.app.SharedPreferencesImpl$EditorImpl.remove(String)
SharedPreferences$Editor android.preference.Preference.getEditor()
SharedPreferences$Editor android.preference.PreferenceManager.getEditor()
SharedPreferences$Editor com.android.camera.ComboPreferences$MyEditor.putBoolean(String,boolean)
SharedPreferences$Editor com.android.camera.ComboPreferences$MyEditor.putFloat(String,float)
SharedPreferences$Editor com.android.camera.ComboPreferences$MyEditor.putInt(String,int)
SharedPreferences$Editor com.android.camera.ComboPreferences$MyEditor.putLong(String,long)
SharedPreferences$Editor com.android.camera.ComboPreferences$MyEditor.putString(String,String)
SharedUserSetting com.android.server.pm.PackageManagerService$DumpState.getSharedUser()
SharedUserSetting com.android.server.pm.Settings.addSharedUserLPw(String,int,int)
SharedUserSetting com.android.server.pm.Settings.getSharedUserLPw(String,int,boolean)
ShortcutAndWidgetContainer com.android.launcher2.CellLayout.getShortcutsAndWidgets()
ShortcutInfo com.android.launcher2.LauncherModel.getShortcutInfo(PackageManager,Intent,Context)
ShortcutInfo com.android.launcher2.LauncherModel.getShortcutInfo(PackageManager,Intent,Context,Cursor,int,int,HashMap)
ShortcutInfo com.android.launcher2.LauncherModel.infoFromShortcutIntent(Context,Intent,Bitmap)
ShortcutPickerFragment$MailboxShortcutPickerFragment com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment.newInstance(Context,Account,Integer)
ShutterButton com.android.camera.CameraActivity.getShutterButton()
SignalStrength com.android.internal.telephony.PhoneBase.getSignalStrength()
SignalStrength com.android.internal.telephony.ServiceStateTracker.getSignalStrength()
SignalStrength com.android.internal.telephony.sip.SipPhone.getSignalStrength()
SimpleAdapter$ViewBinder android.widget.SimpleAdapter.getViewBinder()
SimpleCursorAdapter$CursorToStringConverter android.widget.SimpleCursorAdapter.getCursorToStringConverter()
SimpleCursorAdapter$ViewBinder android.widget.SimpleCursorAdapter.getViewBinder()
SimpleSessionDescription android.net.sip.SipAudioCall.access$1300(SipAudioCall)
SimpleSessionDescription android.net.sip.SipAudioCall.access$400(SipAudioCall,String)
SimpleSessionDescription$Media[] android.net.sip.SimpleSessionDescription.getMedia()
SipAudioCall android.net.sip.SipManager.makeAudioCall(SipProfile,SipProfile,SipAudioCall$Listener,int)
SipAudioCall android.net.sip.SipManager.makeAudioCall(String,String,SipAudioCall$Listener,int)
SipAudioCall android.net.sip.SipManager.takeAudioCall(Intent,SipAudioCall$Listener)
SipProfile com.android.server.sip.SipService$SipSessionGroupExt.getLocalProfile()
SipProfile com.android.server.sip.SipSessionGroup$MakeCallCommand.getPeerProfile()
SipProfile com.android.server.sip.SipSessionGroup$SipSessionImpl.getLocalProfile()
SipProfile com.android.server.sip.SipSessionGroup$SipSessionImpl.getPeerProfile()
SipProfile com.android.server.sip.SipSessionGroup.getLocalProfile()
SipProfile$Builder android.net.sip.SipProfile$Builder.setAuthUserName(String)
SipProfile$Builder android.net.sip.SipProfile$Builder.setAutoRegistration(boolean)
SipProfile$Builder android.net.sip.SipProfile$Builder.setPassword(String)
SipProfile$Builder android.net.sip.SipProfile$Builder.setPort(int)
SipProfile$Builder android.net.sip.SipProfile$Builder.setProfileName(String)
SipProfile$Builder android.net.sip.SipProfile$Builder.setProtocol(String)
SipProfile$Builder android.net.sip.SipProfile$Builder.setSendKeepAlive(boolean)
SipProfile[] com.android.server.sip.SipService.getListOfProfiles()
SipSession android.net.sip.SipManager.createSipSession(SipProfile,SipSession$Listener)
SipSessionGroup$SipSessionImpl com.android.server.sip.SipSessionGroup.access$400(SipSessionGroup,RequestEvent,ISipSessionListener,ServerTransaction,int)
Size com.google.android.apps.lightcycle.camera.CameraUtility.getPhotoSize()
Size com.google.android.apps.lightcycle.camera.CameraUtility.getPreviewSize()
Size com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.getPhotoSize()
Size com.google.android.apps.lightcycle.camera.TextureCameraPreview.getPhotoSize()
Size com.google.android.apps.lightcycle.util.UiUtil.getDrawableDimensions(Context,int)
SlideModel com.android.mms.model.SlideshowModel.get(int)
SlideModel com.android.mms.model.SlideshowModel.set(int,SlideModel)
SlideshowModel com.android.mms.data.WorkingMessage.getSlideshow()
SlideshowModel com.android.mms.model.SlideshowModel.createFromMessageUri(Context,Uri)
SlideshowModel com.android.mms.model.SlideshowModel.createFromPduBody(Context,PduBody)
SlideshowModel com.android.mms.ui.MessageItem.getSlideshow()
SmallItem com.android.gallery3d.data.Cluster.getLastItem()
SmilPlayer com.android.mms.dom.smil.SmilPlayer.getPlayer()
SmileyParser com.android.mms.util.SmileyParser.getInstance()
SmsCbCmasInfo android.telephony.SmsCbMessage.getCmasWarningInfo()
SmsCbCmasInfo com.android.internal.telephony.gsm.SmsCbHeader.getCmasInfo()
SmsCbEtwsInfo android.telephony.SmsCbMessage.getEtwsWarningInfo()
SmsCbEtwsInfo com.android.internal.telephony.gsm.SmsCbHeader.getEtwsInfo()
SmsCbLocation android.telephony.SmsCbMessage.getLocation()
SmsCbMessage com.android.internal.telephony.gsm.GsmSmsCbMessage.createSmsCbMessage(SmsCbLocation,byte[][])
SmsConstants$MessageClass com.android.internal.telephony.cdma.SmsMessage.getMessageClass()
SmsConstants$MessageClass com.android.internal.telephony.gsm.SmsMessage.getMessageClass()
SmsManager android.telephony.gsm.SmsManager.getDefault()
SmsMessage$MessageClass android.telephony.SmsMessage.getMessageClass()
SmsMessage$SubmitPdu android.telephony.SmsMessage.getSubmitPdu(String,String,String,boolean)
SmsMessage$SubmitPdu android.telephony.SmsMessage.getSubmitPdu(String,String,short,byte[],boolean)
SmsMessage$SubmitPdu com.android.internal.telephony.cdma.SmsMessage.getSubmitPdu(String,String,String,boolean,SmsHeader)
SmsMessage$SubmitPdu com.android.internal.telephony.cdma.SmsMessage.getSubmitPdu(String,String,int,byte[],boolean)
SmsMessage$SubmitPdu com.android.internal.telephony.cdma.SmsMessage.getSubmitPdu(String,UserData,boolean)
SmsMessage$SubmitPdu com.android.internal.telephony.gsm.SmsMessage.getSubmitPdu(String,String,String,boolean)
SmsMessage$SubmitPdu com.android.internal.telephony.gsm.SmsMessage.getSubmitPdu(String,String,String,boolean,byte[])
SmsMessage$SubmitPdu com.android.internal.telephony.gsm.SmsMessage.getSubmitPdu(String,String,String,boolean,byte[],int,int,int)
SmsMessage$SubmitPdu com.android.internal.telephony.gsm.SmsMessage.getSubmitPdu(String,String,int,byte[],boolean)
SmsReceiver com.android.mms.transaction.SmsReceiver.getInstance()
SnapshotTab com.android.browser.Controller.createNewSnapshotTab(long,boolean)
SnepMessage com.android.nfc.snep.SnepClient.get(NdefMessage)
SnepMessage com.android.nfc.snep.SnepMessage.getGetRequest(int,NdefMessage)
SnepMessage com.android.nfc.snep.SnepMessage.getMessage(byte)
SnepMessage com.android.nfc.snep.SnepMessage.getPutRequest(NdefMessage)
SnepMessage com.android.nfc.snep.SnepMessage.getSuccessResponse(NdefMessage)
SnepMessage com.android.nfc.snep.SnepMessenger.getMessage()
SocialWidgetSettings com.android.contacts.socialwidget.SocialWidgetSettings.getInstance()
Socket com.android.emailcommon.utility.SSLSocketFactory.connectSocket(Socket,String,int,InetAddress,int,HttpParams)
Socket com.android.emailcommon.utility.SSLSocketFactory.createSocket()
Socket com.android.emailcommon.utility.SSLSocketFactory.createSocket(Socket,String,int,boolean)
Socket org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(Socket,String,int,InetAddress,int,HttpParams)
Socket org.apache.http.conn.ssl.SSLSocketFactory.createSocket(Socket,String,int,boolean)
SortedMultiset com.google.common.collect.AbstractSortedMultiset.createDescendingMultiset()
SortedMultiset com.google.common.collect.AbstractSortedMultiset.descendingMultiset()
SortedMultiset com.google.common.collect.AbstractSortedMultiset.subMultiset(Object,BoundType,Object,BoundType)
SortedMultiset com.google.common.collect.SortedMultisets$DescendingMultiset.headMultiset(Object,BoundType)
SortedMultiset com.google.common.collect.SortedMultisets$DescendingMultiset.subMultiset(Object,BoundType,Object,BoundType)
SortedMultiset com.google.common.collect.SortedMultisets$DescendingMultiset.tailMultiset(Object,BoundType)
SortedSet com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
SortedSet com.google.common.collect.SortedMultisets$ElementSet.headSet(Object)
SortedSet com.google.common.collect.SortedMultisets$ElementSet.subSet(Object,Object)
SortedSet com.google.common.collect.SortedMultisets$ElementSet.tailSet(Object)
SoundClips$Player com.android.camera.SoundClips.getPlayer(Context)
Spannable com.android.ex.chips.RecipientEditTextView.getSpannable()
Spannable$Factory android.text.Spannable$Factory.getInstance()
SpannableString com.android.email.NotificationController.getNewMessageTitle(String,int)
SparseArray com.android.internal.os.BatteryStatsImpl$Uid.getPidStats()
SparseArray com.android.internal.os.BatteryStatsImpl.getUidStats()
SparseLongArray android.view.accessibility.AccessibilityNodeInfo.getChildNodeIds()
SpeechRecognizer android.speech.SpeechRecognizer.createSpeechRecognizer(Context)
SpellCheckerInfo com.android.server.TextServicesManagerService.getCurrentSpellChecker(String)
SpellCheckerInfo[] com.android.server.TextServicesManagerService.getEnabledSpellCheckers()
SpellCheckerSession android.view.textservice.TextServicesManager.newSpellCheckerSession(Bundle,Locale,SpellCheckerSession$SpellCheckerSessionListener,boolean)
SpellCheckerSubtype com.android.server.TextServicesManagerService.getCurrentSpellCheckerSubtype(String,boolean)
Spline com.android.gallery3d.filtershow.filters.ImageFilterCurves.getSpline(int)
Sprite com.google.android.apps.lightcycle.panorama.MessageDisplay.access$200(MessageDisplay,Bitmap,float,float)
SslCertificate android.webkit.WebViewClassic.getCertificate()
SslCertificate$DName android.net.http.SslCertificate.getIssuedBy()
SslCertificate$DName android.net.http.SslCertificate.getIssuedTo()
SslError com.android.browser.Tab.getSslCertificateError()
State com.android.internal.util.StateMachine$LogRec.getOriginalState()
State com.android.internal.util.StateMachine$LogRec.getState()
StateListDrawable$StateListState android.graphics.drawable.StateListDrawable.getStateListState()
StateMachine$LogRec com.android.internal.util.StateMachine$LogRecords.get(int)
StateMachine$LogRec com.android.internal.util.StateMachine.getLogRec(int)
StateManager com.android.gallery3d.app.AbstractGalleryActivity.getStateManager()
StaticLayout com.android.systemui.statusbar.phone.Ticker$Segment.getLayout(CharSequence)
StatusBarIconView com.android.systemui.statusbar.BaseStatusBar.addNotificationViews(IBinder,StatusBarNotification)
StatusLine org.apache.http.message.BasicLineParser.parseStatusLine(CharArrayBuffer,ParserCursor)
StitchingServiceManager com.google.android.apps.lightcycle.panorama.StitchingServiceManager.getStitchingServiceManager(Context)
StitchingServiceManager$StitchSession com.google.android.apps.lightcycle.panorama.StitchingServiceManager.popNextSession()
StopWatch com.android.contacts.util.StopWatch.getNullStopWatch()
StopWatchMap android.filterfw.core.GLFrameTimer.get()
StopwatchFragment$ImageLabelAdapter com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter.getShowAllAdapter()
StorageManager com.android.providers.downloads.StorageManager.getInstance(Context)
StorageManager com.google.android.apps.lightcycle.storage.StorageManagerFactory.getStorageManager()
StorageVolume android.os.storage.StorageManager.getPrimaryVolume()
StorageVolume android.os.storage.StorageManager.getPrimaryVolume(StorageVolume[])
StorageVolume[] android.os.storage.IMountService$Stub$Proxy.getVolumeList()
StorageVolume[] com.android.server.MountService.getVolumeList()
Store com.android.email.mail.Store.getInstance(Account,Context)
StrictMode$ThreadPolicy android.os.StrictMode.getThreadPolicy()
StrictMode$VmPolicy android.os.StrictMode.getVmPolicy()
StrictMode$VmPolicy$Builder android.os.StrictMode$VmPolicy$Builder.setClassInstanceLimit(Class,int)
String android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy.getInterfaceDescriptor()
String android.accounts.AccountAndUser.toString()
String android.accounts.AccountManager.getPassword(Account)
String android.accounts.AccountManager.getUserData(Account,String)
String android.accounts.AccountManager.peekAuthToken(Account,String)
String android.accounts.AccountManagerService$Session.toDebugString()
String android.accounts.AccountManagerService.getPassword(Account)
String android.accounts.AccountManagerService.getUserData(Account,String)
String android.accounts.AccountManagerService.peekAuthToken(Account,String)
String android.accounts.AccountManagerService.readAuthTokenInternal(AccountManagerService$UserAccounts,Account,String)
String android.accounts.AccountManagerService.readUserDataInternal(AccountManagerService$UserAccounts,Account,String)
String android.accounts.IAccountAuthenticator$Stub$Proxy.getInterfaceDescriptor()
String android.accounts.IAccountAuthenticatorResponse$Stub$Proxy.getInterfaceDescriptor()
String android.app.ActivityManagerProxy.getProviderMimeType(Uri,int)
String android.app.ActivityOptions.getPackageName()
String android.app.IStopUserCallback$Stub$Proxy.getInterfaceDescriptor()
String android.app.IUserSwitchObserver$Stub$Proxy.getInterfaceDescriptor()
String android.app.LoadedApk.getLibDir()
String android.app.PendingIntent.getCreatorPackage()
String android.app.WallpaperManager.access$200()
String android.bluetooth.BluetoothTetheringDataTracker.getTcpBufferSizesPropName()
String android.bluetooth.IBluetooth$Stub$Proxy.getRemoteAlias(BluetoothDevice)
String android.bluetooth.IBluetooth$Stub$Proxy.getRemoteName(BluetoothDevice)
String android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.getInterfaceDescriptor()
String android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.getNetworkOperator()
String android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.getSubscriberNumber()
String android.bluetooth.IBluetoothHealth$Stub$Proxy.getInterfaceDescriptor()
String android.bluetooth.IBluetoothInputDevice$Stub$Proxy.getInterfaceDescriptor()
String android.bluetooth.IBluetoothManager$Stub$Proxy.getAddress()
String android.bluetooth.IBluetoothManager$Stub$Proxy.getInterfaceDescriptor()
String android.bluetooth.IBluetoothManager$Stub$Proxy.getName()
String android.bluetooth.IBluetoothManagerCallback$Stub$Proxy.getInterfaceDescriptor()
String android.bluetooth.IBluetoothPan$Stub$Proxy.getInterfaceDescriptor()
String android.bluetooth.IBluetoothPbap$Stub$Proxy.getInterfaceDescriptor()
String android.content.ClipData$Item.getHtmlText()
String android.content.CursorLoader.getSelection()
String android.content.CursorLoader.getSortOrder()
String android.content.IntentSender.getCreatorPackage()
String android.content.pm.ContainerEncryptionParams.getEncryptionAlgorithm()
String android.content.pm.ContainerEncryptionParams.getMacAlgorithm()
String android.content.pm.LabeledIntent.getSourcePackage()
String android.content.pm.PackageManager.getDataDirForUser(int,String)
String android.database.sqlite.SQLiteConnection.describeCurrentOperationUnsafe()
String android.database.sqlite.SQLiteConnection.executeForString(String,Object[],CancellationSignal)
String android.database.sqlite.SQLiteDatabase.getLabel()
String android.database.sqlite.SQLiteGlobal.getDefaultJournalMode()
String android.database.sqlite.SQLiteGlobal.getDefaultSyncMode()
String android.database.sqlite.SQLiteGlobal.getWALSyncMode()
String android.database.sqlite.SQLiteProgram.getSql()
String android.drm.DrmEvent.getMessage()
String android.drm.DrmInfo.getMimeType()
String android.drm.DrmInfoRequest.getMimeType()
String android.drm.DrmManagerClient.getOriginalMimeType(String)
String android.drm.DrmManagerClient.getOriginalMimeType(Uri)
String android.drm.DrmRights.getAccountId()
String android.drm.DrmRights.getMimeType()
String android.drm.DrmRights.getSubscriptionId()
String android.drm.DrmSupportInfo.getDescriprition()
String android.drm.DrmSupportInfo.getDescription()
String android.drm.DrmUtils$ExtendedMetadataParser.get(String)
String android.drm.ProcessedData.getAccountId()
String android.drm.ProcessedData.getSubscriptionId()
String android.filterfw.core.Filter.getFilterClassName()
String android.filterfw.core.Filter.getName()
String android.filterfw.core.Filter.toString()
String android.filterfw.core.FilterPort.getName()
String android.filterfw.core.FilterPort.toString()
String android.filterfw.core.KeyValueMap.getString(String)
String android.hardware.ISerialManager$Stub$Proxy.getInterfaceDescriptor()
String android.hardware.SerialPort.getName()
String android.hardware.display.IDisplayManager$Stub$Proxy.getInterfaceDescriptor()
String android.hardware.display.IDisplayManagerCallback$Stub$Proxy.getInterfaceDescriptor()
String android.hardware.display.WifiDisplay.getDeviceAddress()
String android.hardware.display.WifiDisplay.getDeviceAlias()
String android.hardware.display.WifiDisplay.getDeviceName()
String android.hardware.display.WifiDisplay.getFriendlyDisplayName()
String android.hardware.input.IInputDevicesChangedListener$Stub$Proxy.getInterfaceDescriptor()
String android.hardware.input.IInputManager$Stub$Proxy.getCurrentKeyboardLayoutForInputDevice(String)
String android.hardware.input.IInputManager$Stub$Proxy.getInterfaceDescriptor()
String android.hardware.input.InputManager.getCurrentKeyboardLayoutForInputDevice(String)
String android.hardware.input.KeyboardLayout.getCollection()
String android.hardware.input.KeyboardLayout.getDescriptor()
String android.hardware.input.KeyboardLayout.getLabel()
String android.location.IGeocodeProvider$Stub$Proxy.getFromLocation(double,double,int,GeocoderParams,List)
String android.location.IGeocodeProvider$Stub$Proxy.getFromLocationName(String,double,double,double,double,int,GeocoderParams,List)
String android.location.IGeocodeProvider$Stub$Proxy.getInterfaceDescriptor()
String android.location.IGpsStatusProvider$Stub$Proxy.getInterfaceDescriptor()
String android.location.INetInitiatedListener$Stub$Proxy.getInterfaceDescriptor()
String android.location.LocationRequest.getProvider()
String android.media.AudioManager.getProperty(String)
String android.media.AudioService$VolumeStreamState.getSettingNameForDevice(boolean,int)
String android.media.AudioSystem.getDeviceName(int)
String android.media.IAudioRoutesObserver$Stub$Proxy.getInterfaceDescriptor()
String android.media.IRemoteVolumeObserver$Stub$Proxy.getInterfaceDescriptor()
String android.media.IRingtonePlayer$Stub$Proxy.getInterfaceDescriptor()
String android.media.MediaPlayer$TrackInfo.getLanguage()
String android.media.MediaScanner$MyMediaScannerClient.getGenreName(String)
String android.media.Metadata.getString(int)
String android.media.TimedText.getText()
String android.media.audiofx.Equalizer.getPresetName(short)
String android.media.effect.FilterEffect.getName()
String android.media.videoeditor.AudioTrack.getAudioWaveformFilename()
String android.media.videoeditor.AudioTrack.getFilename()
String android.media.videoeditor.AudioTrack.getId()
String android.media.videoeditor.Effect.getId()
String android.media.videoeditor.MediaArtistNativeHelper.getProjectAudioTrackPCMFilePath()
String android.media.videoeditor.MediaArtistNativeHelper.getProjectPath()
String android.media.videoeditor.MediaImageItem.getDecodedImageFileName()
String android.media.videoeditor.MediaImageItem.getGeneratedImageClip()
String android.media.videoeditor.MediaImageItem.getScaledImageFileName()
String android.media.videoeditor.MediaItem.getFilename()
String android.media.videoeditor.MediaItem.getGeneratedImageClip()
String android.media.videoeditor.MediaItem.getId()
String android.media.videoeditor.MediaVideoItem.getAudioWaveformFilename()
String android.media.videoeditor.Overlay.getId()
String android.media.videoeditor.OverlayFrame.getBitmapImageFileName()
String android.media.videoeditor.OverlayFrame.getFilename()
String android.media.videoeditor.Transition.getFilename()
String android.media.videoeditor.Transition.getId()
String android.media.videoeditor.TransitionAlpha.getMaskFilename()
String android.media.videoeditor.TransitionAlpha.getPNGMaskFilename()
String android.media.videoeditor.VideoEditorImpl.getPath()
String android.mtp.MtpDevice.getDeviceName()
String android.mtp.MtpDeviceInfo.getManufacturer()
String android.mtp.MtpDeviceInfo.getModel()
String android.mtp.MtpDeviceInfo.getSerialNumber()
String android.mtp.MtpDeviceInfo.getVersion()
String android.mtp.MtpObjectInfo.getKeywords()
String android.mtp.MtpObjectInfo.getName()
String android.mtp.MtpStorage.getDescription()
String android.mtp.MtpStorage.getPath()
String android.mtp.MtpStorageInfo.getDescription()
String android.mtp.MtpStorageInfo.getVolumeIdentifier()
String android.net.DummyDataStateTracker.getTcpBufferSizesPropName()
String android.net.EthernetDataTracker.getTcpBufferSizesPropName()
String android.net.INetworkManagementEventObserver$Stub$Proxy.getInterfaceDescriptor()
String android.net.INetworkStatsSession$Stub$Proxy.getInterfaceDescriptor()
String android.net.InterfaceConfiguration.getHardwareAddress()
String android.net.MobileDataStateTracker.getTcpBufferSizesPropName()
String android.net.NetworkIdentity.getNetworkId()
String android.net.NetworkTemplate.getNetworkId()
String android.net.Uri.access$300()
String android.net.Uri.access$600()
String android.net.nsd.DnsSdTxtRecord.get(String)
String android.net.nsd.INsdManager$Stub$Proxy.getInterfaceDescriptor()
String android.net.nsd.NsdServiceInfo.getServiceName()
String android.net.nsd.NsdServiceInfo.getServiceType()
String android.net.sip.SimpleSessionDescription$Media.getAddress()
String android.net.sip.SimpleSessionDescription$Media.getAttribute(String)
String android.net.sip.SimpleSessionDescription$Media.getEncryptionKey()
String android.net.sip.SimpleSessionDescription$Media.getEncryptionMethod()
String android.net.wifi.WifiConfigStore.getConfigFile()
String android.net.wifi.WifiConfiguration.getPrintableSsid()
String android.net.wifi.WifiNative.getMacAddress()
String android.net.wifi.WifiNative.getNetworkVariable(int,String)
String android.net.wifi.WifiSsid.getHexString()
String android.net.wifi.WifiStateMachine.getConfigFile()
String android.net.wifi.WifiStateTracker.getTcpBufferSizesPropName()
String android.net.wifi.p2p.WifiP2pGroupList.getOwnerAddr(int)
String android.net.wifi.p2p.WifiP2pWfdInfo.getDeviceInfoHex()
String android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse.getDnsQueryName()
String android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse.getInstanceName()
String android.net.wifi.p2p.nsd.WifiP2pServiceRequest.getSupplicantQuery()
String android.nfc.INfcAdapterExtras$Stub$Proxy.getDriverName(String)
String android.os.CommonTimeConfig.getInterfaceBinding()
String android.os.CommonTimeUtils.transactGetString(int,String)
String android.os.Debug.getCaller()
String android.os.Debug.getCallers(int)
String android.os.Debug.getCallers(int,String)
String android.os.ICancellationSignal$Stub$Proxy.getInterfaceDescriptor()
String android.os.IHardwareService$Stub$Proxy.getInterfaceDescriptor()
String android.os.INetworkManagementService$Stub$Proxy.getInterfaceDescriptor()
String android.os.ISchedulingPolicyService$Stub$Proxy.getInterfaceDescriptor()
String android.os.IUpdateLock$Stub$Proxy.getInterfaceDescriptor()
String android.os.IUserManager$Stub$Proxy.getInterfaceDescriptor()
String android.os.UEventObserver$UEvent.get(String)
String android.os.UEventObserver$UEvent.get(String,String)
String android.os.UEventObserver.access$100()
String android.os.UserManager.getUserName()
String android.os.storage.StorageVolume.getDescription(Context)
String android.provider.Settings$Global.getBluetoothA2dpSinkPriorityKey(String)
String android.provider.Settings$Global.getBluetoothHeadsetPriorityKey(String)
String android.provider.Settings$Global.getBluetoothInputDevicePriorityKey(String)
String android.provider.Settings$Global.getString(ContentResolver,String)
String android.provider.Settings$Global.getStringForUser(ContentResolver,String,int)
String android.provider.Settings$NameValueCache.getStringForUser(ContentResolver,String,int)
String android.provider.Settings$Secure.getStringForUser(ContentResolver,String,int)
String android.provider.Settings$System.getStringForUser(ContentResolver,String,int)
String android.renderscript.Program.getTextureName(int)
String android.sax.BadXmlException.getMessage()
String android.security.IKeyChainService$Stub$Proxy.requestPrivateKey(String)
String android.service.dreams.IDreamManager$Stub$Proxy.getInterfaceDescriptor()
String android.service.dreams.IDreamService$Stub$Proxy.getInterfaceDescriptor()
String android.service.textservice.SpellCheckerService$InternalISpellCheckerSession.getLocale()
String android.service.textservice.SpellCheckerService$Session.getLocale()
String android.service.wallpaper.IWallpaperConnection$Stub$Proxy.getInterfaceDescriptor()
String android.service.wallpaper.IWallpaperEngine$Stub$Proxy.getInterfaceDescriptor()
String android.service.wallpaper.IWallpaperService$Stub$Proxy.getInterfaceDescriptor()
String android.speech.tts.SynthesisRequest.getCountry()
String android.speech.tts.SynthesisRequest.getLanguage()
String android.speech.tts.SynthesisRequest.getText()
String android.speech.tts.SynthesisRequest.getVariant()
String android.speech.tts.TextToSpeechService$SpeechItem.getStringParam(String,String)
String android.speech.tts.TextToSpeechService$SpeechItem.getUtteranceId()
String android.speech.tts.TextToSpeechService$SynthesisSpeechItem.getLanguage()
String android.speech.tts.TextToSpeechService$SynthesisSpeechItem.getText()
String android.telephony.CellInfo.toString()
String android.telephony.SmsCbCmasInfo.toString()
String android.telephony.SmsCbEtwsInfo.toString()
String android.telephony.SmsCbLocation.getPlmn()
String android.telephony.SmsCbLocation.toString()
String android.telephony.SmsCbMessage.getLanguageCode()
String android.telephony.SmsCbMessage.getMessageBody()
String android.telephony.SmsCbMessage.toString()
String android.telephony.cdma.CdmaSmsCbProgramData.getCategoryName()
String android.test.IsolatedContext$MockAccountManager.getPassword(Account)
String android.test.IsolatedContext$MockAccountManager.peekAuthToken(Account,String)
String android.text.util.Rfc822Token.getAddress()
String android.text.util.Rfc822Token.getComment()
String android.text.util.Rfc822Token.getName()
String android.view.AccessibilityInteractionController$PrivateHandler.getMessageName(Message)
String android.view.Display.getAddress()
String android.view.Display.getName()
String android.view.IDisplayContentChangeListener$Stub$Proxy.getInterfaceDescriptor()
String android.view.IInputFilter$Stub$Proxy.getInterfaceDescriptor()
String android.view.IInputFilterHost$Stub$Proxy.getInterfaceDescriptor()
String android.view.InputDevice.getDescriptor()
String android.view.ViewRootImpl$ViewRootHandler.getMessageName(Message)
String android.view.textservice.SpellCheckerSubtype.getExtraValueOf(String)
String android.webkit.CallbackProxy$UploadFileMessageData.getCapture()
String android.webkit.CookieManagerClassic.getCookie(String)
String android.webkit.CookieManagerClassic.getCookie(String,boolean)
String android.webkit.CookieManagerClassic.getCookie(WebAddress)
String android.webkit.DateSorter.getLabel(int)
String android.webkit.WebHistoryItemClassic.getOriginalUrl()
String android.webkit.WebHistoryItemClassic.getTitle()
String android.webkit.WebHistoryItemClassic.getTouchIconUrl()
String android.webkit.WebHistoryItemClassic.getUrl()
String android.webkit.WebSettings.getDefaultUserAgent(Context)
String android.webkit.WebSettingsClassic$AutoFillProfile.getAddressLine1()
String android.webkit.WebSettingsClassic$AutoFillProfile.getAddressLine2()
String android.webkit.WebSettingsClassic$AutoFillProfile.getCity()
String android.webkit.WebSettingsClassic$AutoFillProfile.getCompanyName()
String android.webkit.WebSettingsClassic$AutoFillProfile.getCountry()
String android.webkit.WebSettingsClassic$AutoFillProfile.getEmailAddress()
String android.webkit.WebSettingsClassic$AutoFillProfile.getFullName()
String android.webkit.WebSettingsClassic$AutoFillProfile.getPhoneNumber()
String android.webkit.WebSettingsClassic$AutoFillProfile.getState()
String android.webkit.WebSettingsClassic$AutoFillProfile.getZipCode()
String android.webkit.WebSettingsClassic.getAcceptLanguage()
String android.webkit.WebSettingsClassic.getCursiveFontFamily()
String android.webkit.WebSettingsClassic.getDatabasePath()
String android.webkit.WebSettingsClassic.getDefaultTextEncodingName()
String android.webkit.WebSettingsClassic.getDefaultUserAgentForLocale(Context,Locale)
String android.webkit.WebSettingsClassic.getFantasyFontFamily()
String android.webkit.WebSettingsClassic.getFixedFontFamily()
String android.webkit.WebSettingsClassic.getPluginsPath()
String android.webkit.WebSettingsClassic.getProperty(String)
String android.webkit.WebSettingsClassic.getSansSerifFontFamily()
String android.webkit.WebSettingsClassic.getSerifFontFamily()
String android.webkit.WebSettingsClassic.getStandardFontFamily()
String android.webkit.WebSettingsClassic.getUserAgentString()
String android.webkit.WebViewClassic$Factory.getDefaultUserAgent(Context)
String android.webkit.WebViewClassic.getOriginalUrl()
String android.webkit.WebViewClassic.getSelection()
String android.webkit.WebViewClassic.getTitle()
String android.webkit.WebViewClassic.getTouchIconUrl()
String android.webkit.WebViewClassic.getUrl()
String android.widget.Chronometer.getFormat()
String android.widget.RemoteViews$Action.getUniqueKey()
String android.widget.RemoteViews$BitmapReflectionAction.getActionName()
String android.widget.RemoteViews$ReflectionAction.getActionName()
String android.widget.RemoteViews$ReflectionActionWithoutParams.getActionName()
String android.widget.RemoteViews$SetDrawableParameters.getActionName()
String android.widget.RemoteViews$SetEmptyView.getActionName()
String android.widget.RemoteViews$SetOnClickFillInIntent.getActionName()
String android.widget.RemoteViews$SetOnClickPendingIntent.getActionName()
String android.widget.RemoteViews$SetPendingIntentTemplate.getActionName()
String android.widget.RemoteViews$SetRemoteViewsAdapterIntent.getActionName()
String android.widget.RemoteViews$TextViewDrawableAction.getActionName()
String android.widget.RemoteViews$TextViewSizeAction.getActionName()
String android.widget.RemoteViews$ViewGroupAction.getActionName()
String android.widget.RemoteViews$ViewPaddingAction.getActionName()
String com.adobe.xmp.XMPMetaFactory$1.getMessage()
String com.adobe.xmp.impl.ByteBuffer.getEncoding()
String com.adobe.xmp.impl.QName.getPrefix()
String com.adobe.xmp.impl.XMPDateTimeImpl.getISO8601String()
String com.adobe.xmp.impl.XMPMetaImpl.getPacketHeader()
String com.adobe.xmp.impl.XMPMetaImpl.getPropertyString(String,String)
String com.adobe.xmp.impl.XMPNode.getName()
String com.adobe.xmp.impl.XMPNode.getValue()
String com.adobe.xmp.impl.XMPNodeUtils.serializeNodeValue(Object)
String com.adobe.xmp.impl.XMPSchemaRegistryImpl$1.getNamespace()
String com.adobe.xmp.impl.XMPSchemaRegistryImpl$1.getPrefix()
String com.adobe.xmp.impl.XMPSchemaRegistryImpl$1.getPropName()
String com.adobe.xmp.impl.XMPSchemaRegistryImpl.getNamespacePrefix(String)
String com.adobe.xmp.impl.XMPSchemaRegistryImpl.getNamespaceURI(String)
String com.adobe.xmp.impl.XMPSchemaRegistryImpl.registerNamespace(String,String)
String com.adobe.xmp.impl.xpath.XMPPathSegment.getName()
String com.adobe.xmp.options.Options.toString()
String com.adobe.xmp.options.SerializeOptions.getEncoding()
String com.adobe.xmp.options.SerializeOptions.getIndent()
String com.adobe.xmp.options.SerializeOptions.getNewline()
String com.android.bluetooth.Utils.getAddressStringFromByte(byte[])
String com.android.bluetooth.a2dp.A2dpService.getName()
String com.android.bluetooth.btservice.AdapterProperties.getName()
String com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getAddress()
String com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getName()
String com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getRemoteAlias(BluetoothDevice)
String com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getRemoteName(BluetoothDevice)
String com.android.bluetooth.btservice.AdapterService.getAddress()
String com.android.bluetooth.btservice.AdapterService.getName()
String com.android.bluetooth.btservice.AdapterService.getRemoteAlias(BluetoothDevice)
String com.android.bluetooth.btservice.AdapterService.getRemoteName(BluetoothDevice)
String com.android.bluetooth.btservice.ProfileService.getName()
String com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getAlias()
String com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getName()
String com.android.bluetooth.hdp.HealthService.getName()
String com.android.bluetooth.hfp.AtPhonebook.getLastDialledNumber()
String com.android.bluetooth.hfp.HeadsetService.getName()
String com.android.bluetooth.hid.HidService.getName()
String com.android.bluetooth.opp.BluetoothOppManager.getDeviceName(BluetoothDevice)
String com.android.bluetooth.opp.BluetoothOppPreference.getName(BluetoothDevice)
String com.android.bluetooth.opp.BluetoothOppRfcommTransport.getRemoteAddress()
String com.android.bluetooth.opp.BluetoothOppUtility.getStatusDescription(Context,int,String)
String com.android.bluetooth.pan.PanService.getName()
String com.android.bluetooth.pbap.BluetoothPbapCallLogComposer.createOneEntry(boolean)
String com.android.bluetooth.pbap.BluetoothPbapCallLogComposer.getErrorReason()
String com.android.bluetooth.pbap.BluetoothPbapService.getLocalPhoneName()
String com.android.bluetooth.pbap.BluetoothPbapService.getLocalPhoneNum()
String com.android.bluetooth.pbap.BluetoothPbapService.getRemoteDeviceName()
String com.android.bluetooth.pbap.BluetoothPbapUtils.createProfileVCard(Context,int,byte[])
String com.android.bluetooth.pbap.BluetoothPbapUtils.getProfileName(Context)
String com.android.bluetooth.pbap.BluetoothPbapVcardManager.getOwnerPhoneNumberVcard(boolean,byte[])
String com.android.browser.BookmarkItem.getName()
String com.android.browser.BookmarkItem.getUrl()
String com.android.browser.BrowserBookmarksPage.getUrl(Cursor)
String com.android.browser.BrowserSettings.getDefaultLinkPrefetchSetting()
String com.android.browser.BrowserSettings.getDefaultPreloadSetting()
String com.android.browser.BrowserSettings.getDefaultTextEncoding()
String com.android.browser.BrowserSettings.getFactoryResetHomeUrl(Context)
String com.android.browser.BrowserSettings.getHomePage()
String com.android.browser.BrowserSettings.getJsEngineFlags()
String com.android.browser.BrowserSettings.getLinkPrefetchAlwaysPreferenceString(Context)
String com.android.browser.BrowserSettings.getLinkPrefetchEnabled()
String com.android.browser.BrowserSettings.getLinkPrefetchOnWifiOnlyPreferenceString(Context)
String com.android.browser.BrowserSettings.getPreloadAlwaysPreferenceString(Context)
String com.android.browser.BrowserSettings.getPreloadEnabled()
String com.android.browser.BrowserSettings.getPreloadOnWifiOnlyPreferenceString(Context)
String com.android.browser.BrowserSettings.getSearchEngineName()
String com.android.browser.DataUri.getMimeType()
String com.android.browser.IntentHandler$UrlData.getSearchBoxQueryToSubmit()
String com.android.browser.SuggestionsAdapter.getSuggestionTitle(SuggestionsAdapter$SuggestItem)
String com.android.browser.SuggestionsAdapter.getSuggestionUrl(SuggestionsAdapter$SuggestItem)
String com.android.browser.Tab.getAppId()
String com.android.browser.Tab.getOriginalUrl()
String com.android.browser.Tab.getTitle()
String com.android.browser.Tab.getUrl()
String com.android.browser.homepages.HomeProvider.getType(Uri)
String com.android.browser.homepages.RequestHandler.getUriResourcePath()
String com.android.browser.preferences.WebsiteSettingsFragment$Site.getOrigin()
String com.android.browser.preferences.WebsiteSettingsFragment$Site.getPrettyOrigin()
String com.android.browser.preferences.WebsiteSettingsFragment$Site.getPrettyTitle()
String com.android.browser.provider.BrowserProvider$MySuggestionCursor.getString(int)
String com.android.browser.provider.BrowserProvider.getClientId(ContentResolver)
String com.android.browser.provider.BrowserProvider.getType(Uri)
String com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getString(int)
String com.android.browser.provider.BrowserProvider2.getType(Uri)
String com.android.browser.provider.SnapshotProvider.getType(Uri)
String com.android.browser.search.DefaultSearchEngine.getName()
String com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getString(int)
String com.android.browser.search.OpenSearchSearchEngine.getName()
String com.android.browser.search.SearchEngineInfo.getLabel()
String com.android.browser.search.SearchEngineInfo.getName()
String com.android.browser.search.SearchEngineInfo.getSearchUriForQuery(String)
String com.android.browser.search.SearchEngineInfo.getSuggestUriForQuery(String)
String com.android.calendar.CalendarEventModel.getAttendeesString()
String com.android.calendar.CalendarUtils$TimeZoneUtils.getTimeZone(Context,Runnable)
String com.android.calendar.Event.getTitleAndLocation()
String com.android.calendar.EventRecurrenceFormatter.getRepeatString(Resources,EventRecurrence)
String com.android.calendar.GeneralPreferences.getRingtoneTitleFromUri(Context,String)
String com.android.calendar.Utils.getDayOfWeekString(int,int,long,Context)
String com.android.calendar.Utils.getDisplayedDatetime(long,long,long,String,boolean,Context)
String com.android.calendar.Utils.getDisplayedTimezone(long,String,String)
String com.android.calendar.Utils.getSearchAuthority(Context)
String com.android.calendar.Utils.getSharedPreference(Context,String,String)
String com.android.calendar.Utils.getTimeZone(Context,Runnable)
String com.android.calendar.Utils.getVersionCode(Context)
String com.android.calendar.Utils.getWidgetScheduledUpdateAction(Context)
String com.android.calendar.Utils.getWidgetUpdateAction(Context)
String com.android.calendar.alerts.AlertUtils.formatTimeLocation(Context,long,boolean,String)
String com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.access$500(CalendarAppWidgetService$CalendarFactory)
String com.android.camera.CameraPreference.getTitle()
String com.android.camera.CameraSettings.getDefaultVideoQuality(int,String)
String com.android.camera.ComboPreferences.getString(String,String)
String com.android.camera.FocusOverlayManager.getFocusMode()
String com.android.camera.ListPreference.getEntry()
String com.android.camera.ListPreference.getKey()
String com.android.camera.ListPreference.getValue()
String com.android.camera.PhotoModule$ImageNamer.getTitle()
String com.android.camera.RecordLocationPreference.getValue()
String com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn.getMessage()
String com.android.commands.monkey.MonkeySourceNetworkVars$1.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$10.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$2.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$3.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$4.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$5.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$6.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$7.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$8.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$9.get()
String com.android.commands.monkey.MonkeySourceNetworkVars$StaticVarGetter.get()
String com.android.commands.monkey.MonkeySourceRandom.getKeyName(int)
String com.android.commands.monkey.MonkeyTouchEvent.getTypeLabel()
String com.android.commands.monkey.MonkeyTrackballEvent.getTypeLabel()
String com.android.commands.svc.Svc$Command.name()
String com.android.commands.uiautomator.Launcher$Command.name()
String com.android.contacts.ContactStatusUtil.getStatusString(Context,int)
String com.android.contacts.ContactsUtils.getCurrentCountryIso(Context)
String com.android.contacts.GroupMetaData.getTitle()
String com.android.contacts.activities.ActionBarAdapter.getQueryString()
String com.android.contacts.activities.DialtactsActivity.getCallOrigin()
String com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener.getCurrentPhotoFile()
String com.android.contacts.calllog.ExtendedCursor.getString(int)
String com.android.contacts.detail.ContactDetailDisplayUtils.getAttribution(Context,Contact)
String com.android.contacts.detail.ContactDetailDisplayUtils.getCompany(Context,Contact)
String com.android.contacts.detail.ContactDetailDisplayUtils.getPhoneticName(Context,Contact)
String com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix.getTitle()
String com.android.contacts.detail.ContactDetailFragment$KindTitleViewEntry.getTitle()
String com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix.getTitle()
String com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener.getCurrentPhotoFile()
String com.android.contacts.editor.KindSectionView.getTitle()
String com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta.getAsString(String)
String com.android.contacts.group.GroupEditorFragment$Member.getDisplayName()
String com.android.contacts.group.GroupListItem.getAccountName()
String com.android.contacts.group.GroupListItem.getAccountType()
String com.android.contacts.group.GroupListItem.getDataSet()
String com.android.contacts.group.GroupListItem.getTitle()
String com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember.getDisplayName()
String com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember.getExtraInfo()
String com.android.contacts.list.ContactEntryListAdapter.getContactsCount()
String com.android.contacts.list.ContactEntryListAdapter.getQuantityText(int,int,int)
String com.android.contacts.list.ContactEntryListAdapter.getQueryString()
String com.android.contacts.list.ContactEntryListFragment.getQueryString()
String com.android.contacts.list.ContactListAdapter.getSelectedContactLookupKey()
String com.android.contacts.list.ContactListFilter.getId()
String com.android.contacts.list.ContactsRequest.getQueryString()
String com.android.contacts.list.DirectoryPartition.getDirectoryType()
String com.android.contacts.list.DirectoryPartition.getDisplayName()
String com.android.contacts.model.Contact.getAltDisplayName()
String com.android.contacts.model.Contact.getCustomRingtone()
String com.android.contacts.model.Contact.getDirectoryAccountName()
String com.android.contacts.model.Contact.getDirectoryAccountType()
String com.android.contacts.model.Contact.getDirectoryDisplayName()
String com.android.contacts.model.Contact.getDirectoryType()
String com.android.contacts.model.Contact.getDisplayName()
String com.android.contacts.model.Contact.getLookupKey()
String com.android.contacts.model.Contact.getPhoneticName()
String com.android.contacts.model.Contact.getPhotoUri()
String com.android.contacts.model.RawContact.getAccountName()
String com.android.contacts.model.RawContact.getAccountTypeString()
String com.android.contacts.model.RawContact.getDataSet()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getAsString(String)
String com.android.contacts.model.RawContactDelta$ValuesDelta.getDisplayName()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getEmailData()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getEmailLabel()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getMimetype()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneLabel()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneNormalizedNumber()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneNumber()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneticFamilyName()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneticGivenName()
String com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneticMiddleName()
String com.android.contacts.model.RawContactDelta.getAccountName()
String com.android.contacts.model.RawContactDelta.getAccountType()
String com.android.contacts.model.RawContactDelta.getDataSet()
String com.android.contacts.model.account.AccountType.getCreateContactActivityClassName()
String com.android.contacts.model.account.AccountType.getEditContactActivityClassName()
String com.android.contacts.model.account.AccountType.getInviteContactActivityClassName()
String com.android.contacts.model.account.AccountType.getViewContactNotifyServiceClassName()
String com.android.contacts.model.account.AccountType.getViewContactNotifyServicePackageName()
String com.android.contacts.model.account.AccountType.getViewGroupActivity()
String com.android.contacts.model.account.AccountType.getViewStreamItemActivity()
String com.android.contacts.model.account.AccountType.getViewStreamItemPhotoActivity()
String com.android.contacts.model.account.BaseAccountType$CommonInflater.getLabelColumn()
String com.android.contacts.model.account.BaseAccountType$CommonInflater.getTypeColumn()
String com.android.contacts.model.account.BaseAccountType$CommonInflater.toString()
String com.android.contacts.model.account.BaseAccountType$EmailKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$EventKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$GroupMembershipKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$ImActionInflater.getLabelColumn()
String com.android.contacts.model.account.BaseAccountType$ImActionInflater.getTypeColumn()
String com.android.contacts.model.account.BaseAccountType$ImKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$NameKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$NicknameKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$NoteKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$OrganizationKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$PhoneKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$PhotoKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$SimpleInflater.getColumnNameForTest()
String com.android.contacts.model.account.BaseAccountType$SipAddressKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$StructuredPostalKindBuilder.getTagName()
String com.android.contacts.model.account.BaseAccountType$WebsiteKindBuilder.getTagName()
String com.android.contacts.model.account.ExternalAccountType.getCreateContactActivityClassName()
String com.android.contacts.model.account.ExternalAccountType.getEditContactActivityClassName()
String com.android.contacts.model.account.ExternalAccountType.getInviteContactActivityClassName()
String com.android.contacts.model.account.ExternalAccountType.getViewContactNotifyServiceClassName()
String com.android.contacts.model.account.ExternalAccountType.getViewGroupActivity()
String com.android.contacts.model.account.ExternalAccountType.getViewStreamItemActivity()
String com.android.contacts.model.account.ExternalAccountType.getViewStreamItemPhotoActivity()
String com.android.contacts.model.account.GoogleAccountType.getViewContactNotifyServiceClassName()
String com.android.contacts.model.account.GoogleAccountType.getViewContactNotifyServicePackageName()
String com.android.contacts.model.dataitem.DataItem.getKindString()
String com.android.contacts.model.dataitem.DataItem.getMimeType()
String com.android.contacts.model.dataitem.EmailDataItem.getData()
String com.android.contacts.model.dataitem.ImDataItem.getCustomProtocol()
String com.android.contacts.model.dataitem.ImDataItem.getData()
String com.android.contacts.model.dataitem.OrganizationDataItem.getCompany()
String com.android.contacts.model.dataitem.OrganizationDataItem.getTitle()
String com.android.contacts.model.dataitem.PhoneDataItem.getFormattedPhoneNumber()
String com.android.contacts.model.dataitem.PhoneDataItem.getNormalizedNumber()
String com.android.contacts.model.dataitem.PhoneDataItem.getNumber()
String com.android.contacts.model.dataitem.SipAddressDataItem.getSipAddress()
String com.android.contacts.model.dataitem.StructuredNameDataItem.getDisplayName()
String com.android.contacts.model.dataitem.StructuredNameDataItem.getPhoneticFamilyName()
String com.android.contacts.model.dataitem.StructuredNameDataItem.getPhoneticGivenName()
String com.android.contacts.model.dataitem.StructuredNameDataItem.getPhoneticMiddleName()
String com.android.contacts.model.dataitem.StructuredPostalDataItem.getFormattedAddress()
String com.android.contacts.model.dataitem.WebsiteDataItem.getUrl()
String com.android.contacts.quickcontact.DataAction.getAlternateIconDescription()
String com.android.contacts.quickcontact.DataAction.getMimeType()
String com.android.contacts.util.LocalizedNameResolver.getAllContactsName(Context,String)
String com.android.contacts.util.StreamItemEntry.getAccountType()
String com.android.contacts.util.StreamItemEntry.getDataSet()
String com.android.contacts.util.StreamItemEntry.getLabelRes()
String com.android.contacts.util.StreamItemEntry.getResPackage()
String com.android.contacts.util.StreamItemEntry.getText()
String com.android.contacts.util.StreamItemPhotoEntry.getPhotoUri()
String com.android.contacts.vcard.ImportVCardActivity$VCardFile.getCanonicalPath()
String com.android.contacts.vcard.ImportVCardActivity$VCardFile.getName()
String com.android.deskclock.Alarm.getLabelOrDefault(Context)
String com.android.deskclock.Utils.getCityName(CityObj,CityObj)
String com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter.getClassName(int)
String com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter.getPackageName(int)
String com.android.deskclock.stopwatch.Stopwatches.getShareTitle(Context)
String com.android.deskclock.stopwatch.Stopwatches.getTimeText(long)
String com.android.deskclock.timer.CountingTimerView.getTimeString()
String com.android.deskclock.widget.swipeablelistview.LogTag.getLogTag()
String com.android.email.Controller.getMailboxServerName(Context,int)
String com.android.email.Email.getMessageDecodeErrorString()
String com.android.email.FolderProperties.getCombinedMailboxName(long)
String com.android.email.FolderProperties.getDisplayName(Cursor)
String com.android.email.FolderProperties.getDisplayName(Mailbox)
String com.android.email.FolderProperties.getDisplayName(int,long,String)
String com.android.email.MessagingExceptionStrings.getErrorString(Context,MessagingException)
String com.android.email.Preferences.getDeviceUID()
String com.android.email.Preferences.getLegacyBackupPreference(Context)
String com.android.email.VendorPolicyLoader.getImapIdValues(String,String,String)
String com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getAccountDisplayName()
String com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getMailboxDisplayName()
String com.android.email.activity.AccountSelectorAdapter.getDisplayName(Cursor)
String com.android.email.activity.UIControllerBase.getSearchHint()
String com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback.getMessageSubject()
String com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback.getSearchHint()
String com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback.getMessageSubject()
String com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback.getSearchHint()
String com.android.email.activity.UiUtilities.getMessageCountForUi(Context,int,boolean)
String com.android.email.activity.setup.AccountSettingsFragment.getTitleFromArgs(Bundle)
String com.android.email.activity.setup.SetupData.getPassword()
String com.android.email.activity.setup.SetupData.getUsername()
String com.android.email.mail.store.ImapConnection.sendCommand(String,boolean)
String com.android.email.mail.store.ImapConnection.sendComplexCommand(List,boolean)
String com.android.email.mail.store.ImapFolder.getName()
String com.android.email.mail.store.ImapStore$ImapException.getAlertText()
String com.android.email.mail.store.ImapStore.getImapId(Context,String,String,String)
String com.android.email.mail.store.Pop3Store$Pop3Folder.getName()
String com.android.email.mail.store.imap.ImapMemoryLiteral.getString()
String com.android.email.mail.store.imap.ImapResponseParser.readUntilEol()
String com.android.email.mail.store.imap.ImapSimpleString.getString()
String com.android.email.mail.store.imap.ImapString$1.getString()
String com.android.email.mail.store.imap.ImapTempFileLiteral.getString()
String com.android.email.mail.transport.MailTransport.getHost()
String com.android.email.provider.ContentCache$CacheToken.getId()
String com.android.email.provider.EmailProvider.getType(Uri)
String com.android.email.service.AccountService$1.getDeviceId()
String com.android.email.service.EasAuthenticatorService$EasAuthenticator.getAuthTokenLabel(String)
String com.android.email.service.EasTestAuthenticatorService$EasAuthenticator.getAuthTokenLabel(String)
String com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator.getAuthTokenLabel(String)
String com.android.email.view.CertificateSelector.getCertificate()
String com.android.email.widget.EmailWidgetLoader$WidgetCursor.getAccountName()
String com.android.email.widget.EmailWidgetLoader$WidgetCursor.getMailboxName()
String com.android.emailcommon.internet.MimeBodyPart.getContentType()
String com.android.emailcommon.internet.MimeBodyPart.getDisposition()
String com.android.emailcommon.internet.MimeBodyPart.getFirstHeader(String)
String com.android.emailcommon.internet.MimeBodyPart.getMimeType()
String com.android.emailcommon.internet.MimeHeader.getFirstHeader(String)
String com.android.emailcommon.internet.MimeMessage.getContentType()
String com.android.emailcommon.internet.MimeMessage.getDisposition()
String com.android.emailcommon.internet.MimeMessage.getFirstHeader(String)
String com.android.emailcommon.internet.MimeMessage.getMimeType()
String com.android.emailcommon.internet.MimeMultipart.getContentType()
String com.android.emailcommon.internet.MimeMultipart.getSubTypeForTest()
String com.android.emailcommon.internet.MimeUtility.getHeaderParameter(String,String)
String com.android.emailcommon.internet.Rfc822Output.getHtmlAlternate(EmailContent$Body,boolean)
String com.android.emailcommon.internet.Rfc822Output.getHtmlBody(String)
String com.android.emailcommon.internet.Rfc822Output.getNextBoundary()
String com.android.emailcommon.mail.Address.getAddress()
String com.android.emailcommon.mail.Folder.toString()
String com.android.emailcommon.mail.Message.toString()
String com.android.emailcommon.mail.Multipart.getContentType()
String com.android.emailcommon.mail.PackedString$Builder.get(String)
String com.android.emailcommon.mail.PackedString.get(String)
String com.android.emailcommon.provider.Account.getProtocol(Context)
String com.android.emailcommon.service.AccountServiceProxy.getDeviceId()
String com.android.emailcommon.service.IAccountService$Stub$Proxy.getDeviceId()
String com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager.chooseClientAlias(String[],Principal[],Socket)
String com.android.ex.chips.RecipientEntry.getDestination()
String com.android.ex.chips.RecipientEntry.getDestinationLabel()
String com.android.ex.chips.RecipientEntry.getDisplayName()
String com.android.exchange.EasSyncService.getTargetCollectionClassFromCursor(Cursor)
String com.android.exchange.ExchangeService$AccountObserver.getAccountKeyWhere()
String com.android.exchange.ExchangeService$AccountObserver.getSyncableEasMailboxWhere()
String com.android.exchange.ExchangeService.getDeviceId(Context)
String com.android.exchange.ExchangeService.getEasAccountSelector()
String com.android.exchange.adapter.AbstractSyncAdapter.getSyncKey()
String com.android.exchange.adapter.AccountSyncAdapter.getCollectionName()
String com.android.exchange.adapter.AccountSyncAdapter.getSyncKey()
String com.android.exchange.adapter.CalendarSyncAdapter.getCollectionName()
String com.android.exchange.adapter.CalendarSyncAdapter.getSyncKey()
String com.android.exchange.adapter.ContactsSyncAdapter.getCollectionName()
String com.android.exchange.adapter.ContactsSyncAdapter.getSyncKey()
String com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser.getMimeTypeFromFileName(String)
String com.android.exchange.adapter.EmailSyncAdapter.getCollectionName()
String com.android.exchange.adapter.EmailSyncAdapter.getSyncKey()
String com.android.exchange.adapter.MoveItemsParser.getNewServerId()
String com.android.exchange.adapter.Parser.getValue()
String com.android.exchange.adapter.ProvisionParser.getSecuritySyncKey()
String com.android.exchange.provider.ExchangeDirectoryProvider.getType(Uri)
String com.android.exchange.provider.GalResult$GalData.get(String)
String com.android.exchange.utility.CalendarUtilities.getString(byte[],int,int)
String com.android.exchange.utility.CalendarUtilities.getUidFromGlobalObjId(String)
String com.android.exchange.utility.CalendarUtilities.timeZoneToTziString(TimeZone)
String com.android.gallery3d.app.GalleryActionBar.getClusterByTypeString(Context,int)
String com.android.gallery3d.common.EntrySchema.getTableName()
String com.android.gallery3d.common.Utils.getUserAgent(Context)
String com.android.gallery3d.data.ActionImage.getMimeType()
String com.android.gallery3d.data.BucketHelper.getBucketName(ContentResolver,int)
String com.android.gallery3d.data.ClusterAlbum.getName()
String com.android.gallery3d.data.ClusterAlbumSet.getName()
String com.android.gallery3d.data.ComboAlbum.getName()
String com.android.gallery3d.data.ComboAlbumSet.getName()
String com.android.gallery3d.data.DataManager.getTopSetPath(int)
String com.android.gallery3d.data.Face.getName()
String com.android.gallery3d.data.FaceClustering.getClusterName(int)
String com.android.gallery3d.data.FilterDeleteSet.getName()
String com.android.gallery3d.data.FilterEmptyPromptSet.getName()
String com.android.gallery3d.data.FilterTypeSet.getName()
String com.android.gallery3d.data.LocalAlbum.getLocalizedName(Resources,int,String)
String com.android.gallery3d.data.LocalAlbum.getName()
String com.android.gallery3d.data.LocalAlbumSet.getName()
String com.android.gallery3d.data.LocalImage.getFilePath()
String com.android.gallery3d.data.LocalMediaItem.getMimeType()
String com.android.gallery3d.data.LocalMediaItem.getName()
String com.android.gallery3d.data.LocalMergeAlbum.getName()
String com.android.gallery3d.data.LocalVideo.getFilePath()
String com.android.gallery3d.data.LocationClustering.getClusterName(int)
String com.android.gallery3d.data.MediaItem.getFilePath()
String com.android.gallery3d.data.MediaItem.getName()
String com.android.gallery3d.data.MediaObject.getTypeString(int)
String com.android.gallery3d.data.MediaSource.getPrefix()
String com.android.gallery3d.data.MtpDevice.getName()
String com.android.gallery3d.data.MtpDeviceSet.getDeviceName(MtpContext,int)
String com.android.gallery3d.data.MtpDeviceSet.getName()
String com.android.gallery3d.data.MtpImage.getMimeType()
String com.android.gallery3d.data.Path.getPrefix()
String com.android.gallery3d.data.Path.getSuffix()
String com.android.gallery3d.data.PathMatcher.getVar(int)
String com.android.gallery3d.data.SecureAlbum.getName()
String com.android.gallery3d.data.SingleItemAlbum.getName()
String com.android.gallery3d.data.SizeClustering.getClusterName(int)
String com.android.gallery3d.data.SnailItem.getMimeType()
String com.android.gallery3d.data.TagClustering.getClusterName(int)
String com.android.gallery3d.data.TimeClustering.getClusterName(int)
String com.android.gallery3d.data.UriImage.getMimeType()
String com.android.gallery3d.exif.ExifTag.getString()
String com.android.gallery3d.filtershow.filters.ImageFilter.getName()
String com.android.gallery3d.filtershow.imageshow.ImageCrop.getName()
String com.android.gallery3d.filtershow.imageshow.ImageFlip.getName()
String com.android.gallery3d.filtershow.imageshow.ImageGeometry.getName()
String com.android.gallery3d.filtershow.imageshow.ImageRotate.getName()
String com.android.gallery3d.filtershow.imageshow.ImageStraighten.getName()
String com.android.gallery3d.filtershow.provider.SharedImageProvider.getType(Uri)
String com.android.gallery3d.filtershow.ui.ImageButtonTitle.getText()
String com.android.gallery3d.picasasource.FaceImage.getMimeType()
String com.android.gallery3d.picasasource.PicasaAlbum$CoverItem.getMimeType()
String com.android.gallery3d.picasasource.PicasaAlbum.getName()
String com.android.gallery3d.picasasource.PicasaAlbumSet.getName()
String com.android.gallery3d.picasasource.PicasaImage.getMimeType()
String com.android.gallery3d.picasasource.PicasaImage.getName()
String com.android.gallery3d.picasasource.PicasaPostAlbum.getName()
String com.android.gallery3d.picasasource.PicasaSource.getContentType(MediaObject)
String com.android.gallery3d.picasasource.PicasaSource.getImageTitle(MediaObject)
String com.android.gallery3d.picasasource.PicasaSource.getUserAccount(Context,MediaObject)
String com.android.gallery3d.provider.GalleryProvider.getAuthority(Context)
String com.android.gallery3d.provider.GalleryProvider.getType(Uri)
String com.android.gallery3d.ui.DetailsHelper.getDetailsName(Context,int)
String com.android.gallery3d.ui.MenuExecutor.getMimeType(int)
String com.android.i18n.phonenumbers.PhoneNumberUtil.getNationalSignificantNumber(Phonenumber$PhoneNumber)
String com.android.i18n.phonenumbers.PhoneNumberUtil.getRegionCodeForNumber(Phonenumber$PhoneNumber)
String com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder.getDescriptionForNumber(Phonenumber$PhoneNumber,Locale)
String com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder.getDescriptionForNumber(Phonenumber$PhoneNumber,Locale,String)
String com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder.getDescriptionForValidNumber(Phonenumber$PhoneNumber,Locale)
String com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder.getDescriptionForValidNumber(Phonenumber$PhoneNumber,Locale,String)
String com.android.inputmethod.accessibility.KeyCodeDescriptionMapper.getDescriptionForKey(Context,Keyboard,Key,boolean)
String com.android.inputmethod.keyboard.Key.getOutputText()
String com.android.inputmethod.keyboard.MainKeyboardView.getFullDisplayName(InputMethodSubtype,Resources)
String com.android.inputmethod.keyboard.MainKeyboardView.getMiddleDisplayName(InputMethodSubtype)
String com.android.inputmethod.keyboard.MainKeyboardView.getShortDisplayName(InputMethodSubtype)
String com.android.inputmethod.keyboard.internal.KeySpecParser.getLabel(String)
String com.android.inputmethod.keyboard.internal.KeySpecParser.getOutputText(String)
String com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle.getString(TypedArray,int)
String com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle.getString(TypedArray,int)
String com.android.inputmethod.keyboard.internal.KeyboardIconsSet.getIconName(int)
String com.android.inputmethod.keyboard.internal.KeyboardTextsSet.getText(String)
String com.android.inputmethod.latin.BinaryDictionaryGetter.getCacheFileName(String,String,Context)
String com.android.inputmethod.latin.BinaryDictionaryGetter.getTempFileName(String,Context)
String com.android.inputmethod.latin.ExpandableBinaryDictionary.getFilenameWithLocale(String,String)
String com.android.inputmethod.latin.ImfUtils.getInputMethodIdOfThisIme(Context)
String com.android.inputmethod.latin.ResourceUtils.getDeviceOverrideValue(Resources,int,String)
String com.android.inputmethod.latin.RichInputConnection.getWordAtCursor(String)
String com.android.inputmethod.latin.SettingsValues.getInputAttributesDebugString()
String com.android.inputmethod.latin.SettingsValues.getPrefAdditionalSubtypes(SharedPreferences,Resources)
String com.android.inputmethod.latin.SubtypeLocale.getKeyboardLayoutSetDisplayName(InputMethodSubtype)
String com.android.inputmethod.latin.SubtypeLocale.getKeyboardLayoutSetDisplayName(String)
String com.android.inputmethod.latin.SubtypeLocale.getKeyboardLayoutSetName(InputMethodSubtype)
String com.android.inputmethod.latin.SubtypeLocale.getSubtypeDisplayName(InputMethodSubtype,Resources)
String com.android.inputmethod.latin.SubtypeLocale.getSubtypeLocaleDisplayName(String)
String com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo.getDebugString()
String com.android.inputmethod.latin.SuggestedWords.getWord(int)
String com.android.inputmethod.latin.Utils$RingCharBuffer.getLastWord(int)
String com.android.inputmethod.latin.Utils.getDebugInfo(SuggestedWords,int)
String com.android.inputmethod.latin.Utils.getStackTrace()
String com.android.inputmethod.latin.Utils.getStackTrace(int)
String com.android.inputmethod.latin.WordComposer.getTypedWord()
String com.android.internal.app.IBatteryStats$Stub$Proxy.getInterfaceDescriptor()
String com.android.internal.app.IMediaContainerService$Stub$Proxy.copyResourceToContainer(Uri,String,String,String,String,boolean,boolean)
String com.android.internal.app.IMediaContainerService$Stub$Proxy.getInterfaceDescriptor()
String com.android.internal.app.LocalePicker$LocaleInfo.getLabel()
String com.android.internal.backup.IBackupTransport$Stub$Proxy.getInterfaceDescriptor()
String com.android.internal.content.PackageHelper.getSdDir(String)
String com.android.internal.content.PackageHelper.getSdFilesystem(String)
String com.android.internal.location.GpsNetInitiatedHandler.getDialogTitle(GpsNetInitiatedHandler$GpsNiNotification,Context)
String com.android.internal.location.ILocationProvider$Stub$Proxy.getInterfaceDescriptor()
String com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher.access$300()
String com.android.internal.policy.impl.keyguard.KeyguardMessageArea.getOwnerInfo()
String com.android.internal.telephony.CallManager.toString()
String com.android.internal.telephony.CallTracker.checkForTestEmergencyNumber(String)
String com.android.internal.telephony.CsimFileHandler.getEFPath(int)
String com.android.internal.telephony.DataConnection.getWhatToString(int)
String com.android.internal.telephony.GsmAlphabet$TextEncodingDetails.toString()
String com.android.internal.telephony.IccCardApplicationStatus.toString()
String com.android.internal.telephony.IccCardProxy.getServiceProviderName()
String com.android.internal.telephony.IccProvider.getType(Uri)
String com.android.internal.telephony.IccRefreshResponse.toString()
String com.android.internal.telephony.RetryManager.toString()
String com.android.internal.telephony.UiccCardApplication.getAid()
String com.android.internal.telephony.UsimFileHandler.getEFPath(int)
String com.android.internal.telephony.cdma.RuimRecords$EfCsimCdmaHomeLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords$EfCsimEprlLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords$EfCsimImsimLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords$EfCsimLiLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords$EfCsimMdnLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords$EfCsimSpnLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords$EfPlLoaded.getEfName()
String com.android.internal.telephony.cdma.RuimRecords.getIMSI()
String com.android.internal.telephony.cdma.RuimRecords.getMdn()
String com.android.internal.telephony.cdma.RuimRecords.getMin()
String com.android.internal.telephony.cdma.RuimRecords.getNid()
String com.android.internal.telephony.cdma.RuimRecords.getSid()
String com.android.internal.telephony.cdma.sms.BearerData.getLanguage()
String com.android.internal.telephony.ims.IsimFileHandler.getEFPath(int)
String com.android.internal.telephony.sip.SipPhone.getDeviceId()
String com.android.internal.telephony.sip.SipPhone.getDeviceSvn()
String com.android.internal.telephony.sip.SipPhone.getEsn()
String com.android.internal.telephony.sip.SipPhone.getIccSerialNumber()
String com.android.internal.telephony.sip.SipPhone.getImei()
String com.android.internal.telephony.sip.SipPhone.getLine1AlphaTag()
String com.android.internal.telephony.sip.SipPhone.getLine1Number()
String com.android.internal.telephony.sip.SipPhone.getMeid()
String com.android.internal.telephony.sip.SipPhone.getSubscriberId()
String com.android.internal.telephony.sip.SipPhone.getVoiceMailAlphaTag()
String com.android.internal.telephony.sip.SipPhone.getVoiceMailNumber()
String com.android.internal.telephony.test.LineReader.getNextLine()
String com.android.internal.telephony.test.LineReader.getNextLine(boolean)
String com.android.internal.telephony.test.LineReader.getNextLineCtrlZ()
String com.android.internal.textservice.ISpellCheckerService$Stub$Proxy.getInterfaceDescriptor()
String com.android.internal.util.StateMachine$LogRec.getInfo()
String com.android.internal.util.StateMachine.getLogRecString(Message)
String com.android.internal.util.StateMachine.getWhatToString(int)
String com.android.internal.widget.ILockSettings$Stub$Proxy.getInterfaceDescriptor()
String com.android.internal.widget.ILockSettings$Stub$Proxy.getString(String,String,int)
String com.android.internal.widget.LockPatternUtils.getNextAlarm()
String com.android.internal.widget.LockPatternView$SavedState.getSerializedPattern()
String com.android.internal.widget.LockSettingsService.getString(String,String,int)
String com.android.launcher2.AppsCustomizePagedView.getCurrentPageDescription()
String com.android.launcher2.AppsCustomizeTabHost.getTabTagForContentType(AppsCustomizePagedView$ContentType)
String com.android.launcher2.Cling.getDrawIdentifier()
String com.android.launcher2.LauncherApplication.getSharedPreferencesKey()
String com.android.launcher2.LauncherProvider.getType(Uri)
String com.android.launcher2.PagedView.getCurrentPageDescription()
String com.android.launcher2.ShortcutInfo.getPackageName()
String com.android.launcher2.Workspace.getCurrentPageDescription()
String com.android.mms.MmsApp.getCurrentCountryIso()
String com.android.mms.MmsConfig.getEmailGateway()
String com.android.mms.MmsConfig.getHttpParams()
String com.android.mms.MmsConfig.getHttpParamsLine1Key()
String com.android.mms.MmsConfig.getUaProfTagName()
String com.android.mms.MmsConfig.getUaProfUrl()
String com.android.mms.MmsConfig.getUserAgent()
String com.android.mms.TempFileProvider.getScrapPath(Context)
String com.android.mms.TempFileProvider.getScrapPath(Context,String)
String com.android.mms.TempFileProvider.getType(Uri)
String com.android.mms.data.Contact.getName()
String com.android.mms.data.Contact.getNameAndNumber()
String com.android.mms.data.Contact.getNumber()
String com.android.mms.data.Conversation.getRecipients(Uri)
String com.android.mms.data.Conversation.getSnippet()
String com.android.mms.data.Conversation.verifySingleRecipient(Context,long,String)
String com.android.mms.data.RecipientIdCache.getSingleAddressFromCanonicalAddressInDb(Context,String)
String com.android.mms.data.WorkingMessage.getWorkingRecipients()
String com.android.mms.dom.AttrImpl.getName()
String com.android.mms.dom.AttrImpl.getNodeName()
String com.android.mms.dom.AttrImpl.getValue()
String com.android.mms.dom.DocumentImpl.getDocumentURI()
String com.android.mms.dom.DocumentImpl.getInputEncoding()
String com.android.mms.dom.DocumentImpl.getNodeName()
String com.android.mms.dom.DocumentImpl.getXmlEncoding()
String com.android.mms.dom.DocumentImpl.getXmlVersion()
String com.android.mms.dom.ElementImpl.getAttribute(String)
String com.android.mms.dom.ElementImpl.getAttributeNS(String,String)
String com.android.mms.dom.ElementImpl.getNodeName()
String com.android.mms.dom.ElementImpl.getTagName()
String com.android.mms.dom.NodeImpl.getBaseURI()
String com.android.mms.dom.NodeImpl.getLocalName()
String com.android.mms.dom.NodeImpl.getNamespaceURI()
String com.android.mms.dom.NodeImpl.getNodeValue()
String com.android.mms.dom.NodeImpl.getPrefix()
String com.android.mms.dom.NodeImpl.getTextContent()
String com.android.mms.dom.events.EventImpl.getType()
String com.android.mms.dom.smil.ElementParallelTimeContainerImpl.getEndSync()
String com.android.mms.dom.smil.SmilElementImpl.getId()
String com.android.mms.dom.smil.SmilMediaElementImpl.getSrc()
String com.android.mms.dom.smil.SmilRegionElementImpl.getBackgroundColor()
String com.android.mms.dom.smil.SmilRegionElementImpl.getFit()
String com.android.mms.dom.smil.SmilRegionElementImpl.getId()
String com.android.mms.dom.smil.SmilRootLayoutElementImpl.getBackgroundColor()
String com.android.mms.drm.DrmUtils.getConvertExtension(String)
String com.android.mms.model.LayoutModel.getBackgroundColor()
String com.android.mms.model.MediaModel.getContentType()
String com.android.mms.model.MediaModel.getSrc()
String com.android.mms.model.RegionModel.getBackgroundColor()
String com.android.mms.model.RegionModel.getFit()
String com.android.mms.model.RegionModel.getRegionId()
String com.android.mms.model.TextModel.getText()
String com.android.mms.transaction.HttpUtils.getCurrentAcceptLanguage(Locale)
String com.android.mms.transaction.Transaction.toString()
String com.android.mms.transaction.TransactionBundle.getMmscUrl()
String com.android.mms.transaction.TransactionBundle.getProxyAddress()
String com.android.mms.transaction.TransactionBundle.getUri()
String com.android.mms.transaction.TransactionSettings.getMmscUrl()
String com.android.mms.transaction.TransactionSettings.getProxyAddress()
String com.android.mms.ui.DeliveryReportActivity$MmsReportRequest.getRecipient()
String com.android.mms.ui.IconListAdapter$IconListItem.getTitle()
String com.android.mms.ui.MessageUtils.getLocalNumber()
String com.android.mms.ui.MessageUtils.getMessageDetails(Context,Cursor,int)
String com.android.mms.ui.UriImage.getContentType()
String com.android.mms.ui.UriImage.getPath()
String com.android.mms.ui.UriImage.getSrc()
String com.android.mms.util.AddressUtils.getFrom(Context,Uri)
String com.android.mms.util.PduLoaderManager.getTag()
String com.android.mms.util.ThumbnailManager.getTag()
String com.android.musicfx.ControlPanelEffect.getParameterString(Context,String,int,ControlPanelEffect$Key,int)
String com.android.musicfx.ControlPanelEffect.getParameterString(Context,String,int,String)
String com.android.nfc.NfcService$NfcAdapterExtrasService.getDriverName(String)
String com.android.nfc.P2pLinkManager.getMessageType(NdefMessage)
String com.android.nfc.dhimpl.NativeNfcManager.dump()
String com.android.nfc.dhimpl.NativeNfcManager.getName()
String com.android.nfc.handover.BluetoothOppHandover.getMimeTypeForUri(Context,Uri)
String com.android.org.bouncycastle.asn1.ASN1Null.toString()
String com.android.org.bouncycastle.asn1.ASN1OctetString.toString()
String com.android.org.bouncycastle.asn1.ASN1Sequence.toString()
String com.android.org.bouncycastle.asn1.ASN1Set.toString()
String com.android.org.bouncycastle.asn1.ASN1TaggedObject.toString()
String com.android.org.bouncycastle.asn1.DERBMPString.getString()
String com.android.org.bouncycastle.asn1.DERBitString.getString()
String com.android.org.bouncycastle.asn1.DERGeneralString.getString()
String com.android.org.bouncycastle.asn1.DERGeneralizedTime.getTime()
String com.android.org.bouncycastle.asn1.DERGeneralizedTime.getTimeString()
String com.android.org.bouncycastle.asn1.DERIA5String.getString()
String com.android.org.bouncycastle.asn1.DERNumericString.getString()
String com.android.org.bouncycastle.asn1.DERObjectIdentifier.getId()
String com.android.org.bouncycastle.asn1.DERPrintableString.getString()
String com.android.org.bouncycastle.asn1.DERT61String.getString()
String com.android.org.bouncycastle.asn1.DERUTCTime.getAdjustedTime()
String com.android.org.bouncycastle.asn1.DERUTCTime.getTime()
String com.android.org.bouncycastle.asn1.DERUTF8String.getString()
String com.android.org.bouncycastle.asn1.DERUniversalString.getString()
String com.android.org.bouncycastle.asn1.DERVisibleString.getString()
String com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest.getChallenge()
String com.android.org.bouncycastle.util.io.pem.PemHeader.getName()
String com.android.org.bouncycastle.util.io.pem.PemHeader.getValue()
String com.android.org.bouncycastle.util.io.pem.PemObject.getType()
String com.android.phone.BluetoothPhoneService$3.getNetworkOperator()
String com.android.phone.BluetoothPhoneService$3.getSubscriberNumber()
String com.android.phone.EditPhoneNumberPreference.getPhoneNumber()
String com.android.phone.EditPhoneNumberPreference.getRawPhoneNumber()
String com.android.phone.EditPhoneNumberPreference.getStringValue()
String com.android.phone.PhoneInterfaceManager.getCdmaEriText()
String com.android.phone.PhoneUtils.getCompactNameFromCallerInfo(CallerInfo,Context)
String com.android.phone.PhoneUtils.getInitialNumber(Intent)
String com.android.phone.PhoneUtils.getPresentationString(Context,int)
String com.android.phone.sip.SipEditor$PreferenceKey.getValue()
String com.android.phone.sip.SipSharedPreferences.getPrimaryAccount()
String com.android.phone.sip.SipSharedPreferences.getSipCallOption()
String com.android.providers.applications.ApplicationsProvider.getType(Uri)
String com.android.providers.calendar.CalendarCache.readDataLocked(SQLiteDatabase,String)
String com.android.providers.calendar.CalendarInstancesHelper.getSyncIdKey(String,long)
String com.android.providers.calendar.CalendarProvider2.getTimezoneDatabaseVersion()
String com.android.providers.calendar.CalendarProvider2.getType(Uri)
String com.android.providers.calendar.QueryParameterUtils.getQueryParameter(Uri,String)
String com.android.providers.contacts.AccountWithDataSet.getAccountName()
String com.android.providers.contacts.AccountWithDataSet.getAccountType()
String com.android.providers.contacts.AccountWithDataSet.getDataSet()
String com.android.providers.contacts.CallLogProvider.getType(Uri)
String com.android.providers.contacts.ContactDirectoryManager.providerDescription(ProviderInfo)
String com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils.getSortKey(String)
String com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase.getSortKey(String)
String com.android.providers.contacts.ContactLocaleUtils.getSortKey(String,int)
String com.android.providers.contacts.ContactsDatabaseHelper.getCountryIso()
String com.android.providers.contacts.ContactsDatabaseHelper.getCurrentCountryIso()
String com.android.providers.contacts.ContactsDatabaseHelper.getDataMimeType(long)
String com.android.providers.contacts.ContactsDatabaseHelper.getProperty(String,String)
String com.android.providers.contacts.ContactsDatabaseHelper.getUseStrictPhoneNumberComparisonParameter()
String com.android.providers.contacts.ContactsProvider2.getQueryParameter(Uri,String)
String com.android.providers.contacts.ContactsProvider2.getType(Uri)
String com.android.providers.contacts.CountryMonitor.getCountryIso()
String com.android.providers.contacts.DefaultCallLogInsertionHelper.getGeocodedLocationFor(String,String)
String com.android.providers.contacts.LegacyApiSupport.getType(Uri)
String com.android.providers.contacts.NameLookupBuilder.normalizeName(String)
String com.android.providers.contacts.NameSplitter$Name.getFamilyName()
String com.android.providers.contacts.NameSplitter$Name.getGivenNames()
String com.android.providers.contacts.NameSplitter$Name.getMiddleName()
String com.android.providers.contacts.NameSplitter$Name.getPrefix()
String com.android.providers.contacts.NameSplitter$Name.getSuffix()
String com.android.providers.contacts.ProfileProvider.getType(Uri)
String com.android.providers.contacts.ReorderingCursorWrapper.getString(int)
String com.android.providers.contacts.SearchIndexManager$IndexBuilder.getContent()
String com.android.providers.contacts.SearchIndexManager$IndexBuilder.getName()
String com.android.providers.contacts.SearchIndexManager$IndexBuilder.getString(String)
String com.android.providers.contacts.SearchIndexManager$IndexBuilder.getTokens()
String com.android.providers.contacts.SearchIndexManager.getFtsMatchQuery(String,SearchIndexManager$FtsQueryBuilder)
String com.android.providers.contacts.VoicemailContentProvider$UriData.getId()
String com.android.providers.contacts.VoicemailContentProvider$UriData.getSourcePackage()
String com.android.providers.contacts.VoicemailContentProvider$UriData.getWhereClause()
String com.android.providers.contacts.VoicemailContentProvider.getType(Uri)
String com.android.providers.contacts.VoicemailContentTable.getType(VoicemailContentProvider$UriData)
String com.android.providers.contacts.VoicemailStatusTable.getType(VoicemailContentProvider$UriData)
String com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder.getSelection()
String com.android.providers.contacts.util.DbQueryUtils.getEqualityClause(String,String)
String com.android.providers.contacts.util.DbQueryUtils.getEqualityClause(String,long)
String com.android.providers.contacts.util.DbQueryUtils.getInequalityClause(String,long)
String com.android.providers.downloads.DownloadDrmHelper.getOriginalMimeType(Context,String,String)
String com.android.providers.downloads.DownloadInfo.getLogMessageForNetworkError(int)
String com.android.providers.downloads.DownloadProvider$SqlSelection.getSelection()
String com.android.providers.downloads.DownloadProvider.getType(Uri)
String com.android.providers.downloads.Helpers.getFullPath(String,String,int,File)
String com.android.providers.media.MediaProvider.getType(Uri)
String com.android.providers.telephony.MmsProvider.getType(Uri)
String com.android.providers.telephony.MmsSmsProvider.getType(Uri)
String com.android.providers.telephony.SmsProvider.getType(Uri)
String com.android.providers.userdictionary.UserDictionaryProvider.getType(Uri)
String com.android.server.BackupManagerService.getCurrentTransport()
String com.android.server.BackupManagerService.getDestinationString(String)
String com.android.server.BackupManagerService.selectBackupTransport(String)
String com.android.server.BluetoothManagerService.getAddress()
String com.android.server.BluetoothManagerService.getName()
String com.android.server.CertBlacklister$BlacklistObserver.getValue()
String com.android.server.InputMethodManagerService$InputMethodSettings.getDisabledSystemInputMethods()
String com.android.server.InputMethodManagerService$InputMethodSettings.getLastSubtypeForInputMethodLocked(String)
String com.android.server.InputMethodManagerService$InputMethodSettings.getSelectedInputMethod()
String com.android.server.LocationManagerService.getBestProvider(Criteria,boolean)
String com.android.server.LocationManagerService.getFromLocation(double,double,int,GeocoderParams,List)
String com.android.server.LocationManagerService.getFromLocationName(String,double,double,double,double,int,GeocoderParams,List)
String com.android.server.MountService.buildObbPath(String,int,boolean)
String com.android.server.MountService.getMountedObbPath(String)
String com.android.server.MountService.getSecureContainerFilesystemPath(String)
String com.android.server.MountService.getSecureContainerPath(String)
String com.android.server.MountService.getVolumeState(String)
String com.android.server.NativeDaemonConnectorException.getCmd()
String com.android.server.NativeDaemonEvent.getField(int)
String com.android.server.NativeDaemonEvent.getMessage()
String com.android.server.NativeDaemonEvent.getRawEvent()
String com.android.server.NsdService$NsdStateMachine.getWhatToString(int)
String com.android.server.PreferredComponent.getParseError()
String com.android.server.ServiceWatcher.getBestPackageName()
String com.android.server.TextServicesManagerService$TextServicesSettings.getSelectedSpellChecker()
String com.android.server.TextServicesManagerService$TextServicesSettings.getSelectedSpellCheckerSubtype()
String com.android.server.ThrottleService.getHelpUri()
String com.android.server.WallpaperManagerService.getName()
String com.android.server.WifiService.getConfigFile()
String com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo.getDevName()
String com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo.getDevPath()
String com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo.getSwitchStatePath()
String com.android.server.am.ActivityManagerService.getCallingPackage(IBinder)
String com.android.server.am.ActivityManagerService.getPackageForIntentSender(IIntentSender)
String com.android.server.am.ActivityManagerService.getPackageForToken(IBinder)
String com.android.server.am.ActivityManagerService.getProviderMimeType(Uri,int)
String com.android.server.connectivity.Vpn.getTcpBufferSizesPropName()
String com.android.server.display.DisplayAdapter.getName()
String com.android.server.display.DisplayDevice.getNameLocked()
String com.android.server.input.InputManagerService.getCurrentKeyboardLayoutForInputDevice(String)
String com.android.server.input.PersistentDataStore$InputDeviceState.getCurrentKeyboardLayout()
String com.android.server.input.PersistentDataStore.getCurrentKeyboardLayout(String)
String com.android.server.location.GeocoderProxy.getConnectedPackageName()
String com.android.server.location.GeocoderProxy.getFromLocation(double,double,int,GeocoderParams,List)
String com.android.server.location.GeocoderProxy.getFromLocationName(String,double,double,double,double,int,GeocoderParams,List)
String com.android.server.location.GpsLocationProvider.getName()
String com.android.server.location.LocationBasedCountryDetector.getCountryFromLocation(Location)
String com.android.server.location.LocationProviderProxy.getConnectedPackageName()
String com.android.server.location.LocationProviderProxy.getName()
String com.android.server.location.MockProvider.getName()
String com.android.server.location.PassiveProvider.getName()
String com.android.server.pm.PackageManagerService$AsecInstallArgs.getCodePath()
String com.android.server.pm.PackageManagerService$AsecInstallArgs.getNativeLibraryPath()
String com.android.server.pm.PackageManagerService$AsecInstallArgs.getPackageName()
String com.android.server.pm.PackageManagerService$AsecInstallArgs.getResourcePath()
String com.android.server.pm.PackageManagerService$FileInstallArgs.getCodePath()
String com.android.server.pm.PackageManagerService$FileInstallArgs.getNativeLibraryPath()
String com.android.server.pm.PackageManagerService$FileInstallArgs.getResourcePath()
String com.android.server.pm.PackageManagerService.getApkName(String)
String com.android.server.pm.PackageManagerService.getAsecPackageName(String)
String com.android.server.pm.PackageManagerService.getInstallerPackageName(String)
String com.android.server.pm.PackageManagerService.getNameForUid(int)
String com.android.server.pm.PackageManagerService.getTempContainerId()
String com.android.server.pm.PackageSettingBase.getInstallerPackageName()
String com.android.server.pm.Settings.getInstallerPackageNameLPr(String)
String com.android.server.sip.SipSessionGroup$MakeCallCommand.getSessionDescription()
String com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1.getPassword()
String com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1.getSipDomain()
String com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1.getUserName()
String com.android.server.sip.SipSessionGroup$SipSessionImpl.getCallId()
String com.android.server.sip.SipSessionGroup$SipSessionImpl.getLocalIp()
String com.android.server.sip.SipSessionGroup.getLocalProfileUri()
String com.android.server.usb.UsbDeviceManager.access$400()
String com.android.uiautomator.core.QueryController.getCurrentActivityName()
String com.android.uiautomator.core.QueryController.getCurrentPackageName()
String com.android.uiautomator.core.QueryController.getLastTraversedText()
String com.android.uiautomator.core.UiDevice.getCurrentActivityName()
String com.android.uiautomator.core.UiDevice.getCurrentPackageName()
String com.android.uiautomator.core.UiDevice.getLastTraversedText()
String com.android.uiautomator.core.UiDevice.getProductName()
String com.android.uiautomator.core.UiSelector.getString(int)
String com.android.vcard.VCardComposer.createOneEntry()
String com.android.vcard.VCardComposer.createOneEntry(Method)
String com.android.vcard.VCardEntry$OrganizationData.getFormattedString()
String com.android.vcard.VCardEntry$PostalData.getFormattedAddress(int)
String com.android.vcard.VCardEntry.getDisplayName()
String com.android.vcard.VCardParserImpl_V21.getBase64(String)
String com.android.vcard.VCardParserImpl_V21.getLine()
String com.android.vcard.VCardParserImpl_V21.getNonEmptyLine()
String com.android.vcard.VCardParserImpl_V21.getVersionString()
String com.android.vcard.VCardParserImpl_V30.getBase64(String)
String com.android.vcard.VCardParserImpl_V30.getLine()
String com.android.vcard.VCardParserImpl_V30.getNonEmptyLine()
String com.android.vcard.VCardParserImpl_V30.getVersionString()
String com.android.vcard.VCardParserImpl_V40.getVersionString()
String com.android.vcard.VCardProperty.getName()
String com.android.vcard.VCardProperty.getRawValue()
String com.android.vcard.VCardSourceDetector.getEstimatedCharset()
String com.android.vcard.VCardUtils.getPhoneTypeString(Integer)
String com.android.vcard.VCardUtils.getPropertyNameForIm(int)
String com.android.videoeditor.OverlayType.getName()
String com.android.videoeditor.TransitionType.getName()
String com.android.videoeditor.service.MovieAudioTrack.getFilename()
String com.android.videoeditor.service.MovieAudioTrack.getId()
String com.android.videoeditor.service.MovieEffect.getId()
String com.android.videoeditor.service.MovieMediaItem.getFilename()
String com.android.videoeditor.service.MovieMediaItem.getId()
String com.android.videoeditor.service.MovieOverlay.getId()
String com.android.videoeditor.service.MovieOverlay.getSubtitle()
String com.android.videoeditor.service.MovieOverlay.getSubtitle(Bundle)
String com.android.videoeditor.service.MovieOverlay.getTitle()
String com.android.videoeditor.service.MovieOverlay.getTitle(Bundle)
String com.android.videoeditor.service.MovieTheme.getId()
String com.android.videoeditor.service.MovieTransition.getAlphaMaskFilename()
String com.android.videoeditor.service.MovieTransition.getId()
String com.android.videoeditor.service.VideoEditorProject$Download.getFilename()
String com.android.videoeditor.service.VideoEditorProject$Download.getMediaUri()
String com.android.videoeditor.service.VideoEditorProject$Download.getMimeType()
String com.android.videoeditor.service.VideoEditorProject.getLastMediaItemId()
String com.android.videoeditor.service.VideoEditorProject.getName()
String com.android.videoeditor.service.VideoEditorProject.getPath()
String com.android.videoeditor.service.VideoEditorProject.getTheme()
String com.android.videoeditor.util.FileUtils.getAudioTrackFilename(Context,int)
String com.android.videoeditor.util.FileUtils.getMaskFilename(Context,int)
String com.android.videoeditor.util.FileUtils.getSimpleName(String)
String com.android.videoeditor.util.StringUtils.getDurationAsString(Context,long)
String com.android.videoeditor.util.StringUtils.getSimpleTimestampAsString(Context,long)
String com.android.videoeditor.util.StringUtils.getTimestampAsString(Context,long)
String com.coremedia.iso.IsoTypeReader.readString(ByteBuffer)
String com.coremedia.iso.PropertyBoxParserImpl$FourCcToBox.getClazzName()
String com.coremedia.iso.boxes.ChunkOffsetBox.toString()
String com.coremedia.iso.boxes.FileTypeBox.getMajorBrand()
String com.coremedia.iso.boxes.HandlerBox.getHandlerType()
String com.coremedia.iso.boxes.HandlerBox.getName()
String com.coremedia.iso.boxes.MediaHeaderBox.getLanguage()
String com.coremedia.iso.boxes.mdat.MediaDataBox.getType()
String com.google.android.apps.lightcycle.LightCycleApp.getAppVersion()
String com.google.android.apps.lightcycle.camera.CameraUtility.getFlashMode(CameraApiProxy$CameraProxy)
String com.google.android.apps.lightcycle.camera.CameraUtility.getFocusMode(CameraApiProxy$CameraProxy)
String com.google.android.gms.panorama.internal.PanoramaClientImpl.getServiceDescriptor()
String com.google.android.gms.panorama.internal.PanoramaClientImpl.getStartServiceAction()
String com.google.android.gsf.Gservices.getString(ContentResolver,String)
String com.google.android.gsf.Gservices.getString(ContentResolver,String,String)
String com.google.android.mms.pdu.CharacterSets.getMimeName(int)
String com.google.android.mms.pdu.EncodedStringValue.getString()
String com.google.android.mms.pdu.PduPersister.convertUriToPath(Context,Uri)
String com.google.android.mms.util.DownloadDrmHelper.getOriginalMimeType(Context,String,String)
String com.google.android.picasastore.FIFEUtil.getImageUriOptions(Uri)
String com.google.android.picasastore.FIFEUtil.getImageUrlOptions(String)
String com.google.android.picasastore.ImageProxyUtil.setImageUrlSize(int,String)
String com.google.android.picasastore.PicasaStoreFacade.getAlbumCoverKey(long,String)
String com.google.android.picasastore.PicasaStoreFacade.getAuthority()
String com.google.android.picasasync.Authorizer.getAuthToken(String)
String com.google.android.picasasync.Authorizer.getFreshAuthToken(String,String)
String com.google.android.picasasync.PicasaDatabaseHelper.getRealAlbumId(String,String)
String com.google.android.picasasync.PicasaDatabaseHelper.getUserAccount(long)
String com.google.android.picasasync.PicasaFacade.getAuthority()
String com.google.android.picasasync.SyncTask.toString()
String com.google.android.picasasync.UploadTaskEntry.getAccount()
String com.google.android.picasasync.UploadTaskEntry.getAlbumId()
String com.google.android.picasasync.UploadTaskEntry.getAlbumTitle()
String com.google.android.picasasync.UploadTaskEntry.getAuthTokenType()
String com.google.android.picasasync.UploadTaskEntry.getCaption()
String com.google.android.picasasync.UploadTaskEntry.getDisplayName()
String com.google.android.picasasync.UploadTaskEntry.getMimeType()
String com.google.android.picasasync.UploadTaskEntry.getRequestTemplate()
String com.google.android.picasasync.UploadTaskEntry.getUploadUrl()
String com.google.common.base.CharMatcher.trimFrom(CharSequence)
String com.google.common.collect.ForwardingCollection.standardToString()
String com.google.common.collect.ForwardingMultiset.standardToString()
String com.google.common.collect.ForwardingObject.toString()
String com.google.common.collect.ImmutableCollection.toString()
String com.google.common.collect.ImmutableMap.toString()
String com.googlecode.mp4parser.AbstractBox.getType()
String com.googlecode.mp4parser.AbstractContainerBox.toString()
String com.googlecode.mp4parser.FullContainerBox.toString()
String com.googlecode.mp4parser.authoring.Mp4TrackImpl.getHandler()
String com.googlecode.mp4parser.authoring.TrackMetaData.getLanguage()
String com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat.getType()
String com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getHandler()
String java.security.cert.CertPathValidator.getAlgorithm()
String java.security.cert.CertPathValidator.getDefaultType()
String java.security.cert.CertStore.getDefaultType()
String java.security.cert.CertStore.getType()
String java.security.cert.PKIXParameters.getSigProvider()
String java.security.cert.TrustAnchor.getCAName()
String java.util.jar.Attributes.getValue(Attributes$Name)
String javax.crypto.ExemptionMechanism.getName()
String javax.obex.ClientOperation.getEncoding()
String javax.obex.ClientOperation.getType()
String javax.obex.ServerOperation.getEncoding()
String javax.obex.ServerOperation.getType()
String junit.framework.ComparisonFailure.getActual()
String junit.framework.ComparisonFailure.getExpected()
String libcore.net.UriCodec.decode(String,boolean,Charset,boolean)
String org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getAlgorithm()
String org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getFormat()
String org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getPkeyAlias()
String org.apache.harmony.xnet.provider.jsse.OpenSSLKey.getAlias()
String org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getAlgorithm()
String org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getFormat()
String org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getPkeyAlias()
String org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.getPeerHostName()
String org.apache.harmony.xnet.provider.jsse.PinListEntry.getCommonName()
String org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.getPeerHostName()
String org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.getWrappedHostName()
String org.apache.http.client.methods.HttpHead.getMethod()
String org.apache.http.client.methods.HttpOptions.getMethod()
String org.apache.http.client.methods.HttpPut.getMethod()
String org.apache.http.impl.auth.RFC2617Scheme.getParameter(String)
String org.apache.http.impl.cookie.BasicClientCookie.getAttribute(String)
String org.apache.http.impl.cookie.CookieSpecBase.getDefaultDomain(CookieOrigin)
String org.apache.http.impl.cookie.CookieSpecBase.getDefaultPath(CookieOrigin)
String org.apache.http.util.EncodingUtils.getAsciiString(byte[])
String org.apache.http.util.EncodingUtils.getAsciiString(byte[],int,int)
String org.apache.http.util.EncodingUtils.getString(byte[],String)
String org.apache.http.util.EncodingUtils.getString(byte[],int,int,String)
String org.apache.james.mime4j.BodyDescriptor.getBoundary()
String org.apache.james.mime4j.BodyDescriptor.getCharset()
String org.apache.james.mime4j.BodyDescriptor.getMimeType()
String org.apache.james.mime4j.BodyDescriptor.getTransferEncoding()
String org.apache.james.mime4j.field.Field.getName()
String org.apache.james.mime4j.field.Field.toString()
String org.apache.james.mime4j.field.address.DomainList.get(int)
String org.apache.james.mime4j.field.address.Mailbox.getAddressString()
String org.apache.james.mime4j.field.address.Mailbox.getAddressString(boolean)
String org.apache.james.mime4j.field.address.Mailbox.getDomain()
String org.apache.james.mime4j.field.address.Mailbox.getLocalPart()
String org.apache.james.mime4j.field.address.NamedMailbox.getAddressString(boolean)
String org.apache.james.mime4j.field.address.parser.ParseException.getMessage()
String org.apache.james.mime4j.field.address.parser.TokenMgrError.getMessage()
String org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser.getSubType()
String org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser.getType()
String org.apache.james.mime4j.field.contenttype.parser.ParseException.getMessage()
String org.apache.james.mime4j.field.contenttype.parser.TokenMgrError.getMessage()
String org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date.getYear()
String org.apache.james.mime4j.field.datetime.parser.ParseException.getMessage()
String org.apache.james.mime4j.field.datetime.parser.TokenMgrError.getMessage()
StringReader com.google.common.io.CharStreams$1.getInput()
String[] android.content.CursorLoader.getProjection()
String[] android.content.CursorLoader.getSelectionArgs()
String[] android.content.res.AssetManager.getResourceStringArray(int)
String[] android.database.sqlite.SQLiteProgram.getColumnNames()
String[] android.drm.DrmManagerClient.getAvailableDrmEngines()
String[] android.hardware.ISerialManager$Stub$Proxy.getSerialPorts()
String[] android.hardware.SerialManager.getSerialPorts()
String[] android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayoutsForInputDevice(String)
String[] android.hardware.input.InputManager.getKeyboardLayoutsForInputDevice(String)
String[] android.net.INetworkStatsService$Stub$Proxy.getMobileIfaces()
String[] android.net.sip.SimpleSessionDescription$Media.getAttributeNames()
String[] android.net.sip.SimpleSessionDescription$Media.getBandwidthTypes()
String[] android.os.INetworkManagementService$Stub$Proxy.getDnsForwarders()
String[] android.os.INetworkManagementService$Stub$Proxy.listInterfaces()
String[] android.os.INetworkManagementService$Stub$Proxy.listTetheredInterfaces()
String[] android.os.INetworkManagementService$Stub$Proxy.listTtys()
String[] android.speech.tts.TextToSpeechService$1.getFeaturesForLanguage(String,String,String)
String[] android.speech.tts.TextToSpeechService$1.getLanguage()
String[] android.webkit.WebViewClassic.getHttpAuthUsernamePassword(String,String)
String[] android.webkit.WebViewDatabaseClassic.getHttpAuthUsernamePassword(String,String)
String[] android.webkit.WebViewDatabaseClassic.getUsernamePassword(String)
String[] com.android.browser.DeviceAccountLogin.getAccountNames()
String[] com.android.browser.provider.BrowserProvider$MySuggestionCursor.getColumnNames()
String[] com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getColumnNames()
String[] com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getColumnNames()
String[] com.android.calendar.Utils.getQuickResponses(Context)
String[] com.android.calendar.Utils.getSharedPreference(Context,String,String[])
String[] com.android.contacts.calllog.ExtendedCursor.getColumnNames()
String[] com.android.contacts.editor.ContactEditorUtils.getWritableAccountTypeStrings()
String[] com.android.contacts.list.ContactListAdapter.getProjection(boolean)
String[] com.android.email.activity.ShortcutPickerFragment$AccountShortcutPickerFragment.getFromColumns()
String[] com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment.getFromColumns()
String[] com.android.email.mail.store.ImapFolder.getSearchUids(List)
String[] com.android.email.mail.store.imap.ImapUtility.getImapRangeValues(String)
String[] com.android.email.mail.store.imap.ImapUtility.getImapSequenceValues(String)
String[] com.android.email.mail.transport.DiscourseLogger.getLines()
String[] com.android.emailcommon.internet.MimeBodyPart.getHeader(String)
String[] com.android.emailcommon.internet.MimeHeader.getHeader(String)
String[] com.android.emailcommon.internet.MimeMessage.getHeader(String)
String[] com.android.emailcommon.utility.SSLUtils$StubKeyManager.getClientAliases(String,Principal[])
String[] com.android.emailcommon.utility.SSLUtils$StubKeyManager.getServerAliases(String,Principal[])
String[] com.android.emailcommon.utility.Utility.getRowColumns(Context,Uri,String[],String,String[])
String[] com.android.emailcommon.utility.Utility.getRowColumns(Context,Uri,long,String[])
String[] com.android.ex.chips.Queries$Query.getProjection()
String[] com.android.gallery3d.common.EntrySchema.getProjection()
String[] com.android.gallery3d.data.MediaItem.getTags()
String[] com.android.gallery3d.filtershow.provider.SharedImageProvider.getStreamTypes(Uri,String)
String[] com.android.gallery3d.picasasource.PicasaImage.getTags()
String[] com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle.getStringArray(TypedArray,int)
String[] com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle.getStringArray(TypedArray,int)
String[] com.android.inputmethod.latin.LatinImeLogger$LogEntry.getLogStrings()
String[] com.android.inputmethod.latin.LogEntries$AutoCorrectionCancelledEntry.getLogStrings()
String[] com.android.inputmethod.latin.LogEntries$DeviceInfoEntry.getLogStrings()
String[] com.android.inputmethod.latin.SubtypeLocale.getPredefinedKeyboardLayoutSet()
String[] com.android.internal.content.PackageHelper.getSecureContainerList()
String[] com.android.mms.data.ContactList.getNumbers()
String[] com.android.mms.data.ContactList.getNumbers(boolean)
String[] com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameLookupBuilder.getCommonNicknameClusters(String)
String[] com.android.providers.contacts.ContactsProvider2$StructuredNameLookupBuilder.getCommonNicknameClusters(String)
String[] com.android.providers.contacts.ContactsProvider2.getDefaultProjection(Uri)
String[] com.android.providers.contacts.MemoryCursor.getColumnNames()
String[] com.android.providers.contacts.ReorderingCursorWrapper.getColumnNames()
String[] com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder.getCommonNicknameClusters(String)
String[] com.android.providers.contacts.aggregation.util.CommonNicknameCache.getCommonNicknameClusters(String)
String[] com.android.providers.downloads.DownloadProvider$SqlSelection.getParameters()
String[] com.android.server.ConnectivityService.getTetherableBluetoothRegexs()
String[] com.android.server.ConnectivityService.getTetherableIfaces()
String[] com.android.server.ConnectivityService.getTetherableUsbRegexs()
String[] com.android.server.ConnectivityService.getTetherableWifiRegexs()
String[] com.android.server.ConnectivityService.getTetheredIfacePairs()
String[] com.android.server.ConnectivityService.getTetheredIfaces()
String[] com.android.server.ConnectivityService.getTetheringErroredIfaces()
String[] com.android.server.MountService.getSecureContainerList()
String[] com.android.server.NativeDaemonConnector.doListCommand(String,int)
String[] com.android.server.NetworkManagementService.getDnsForwarders()
String[] com.android.server.SerialService.getSerialPorts()
String[] com.android.server.am.ProcessRecord.getPackageList()
String[] com.android.server.connectivity.Tethering.getErroredIfaces()
String[] com.android.server.connectivity.Tethering.getTetherableBluetoothRegexs()
String[] com.android.server.connectivity.Tethering.getTetherableIfaces()
String[] com.android.server.connectivity.Tethering.getTetherableUsbRegexs()
String[] com.android.server.connectivity.Tethering.getTetherableWifiRegexs()
String[] com.android.server.connectivity.Tethering.getTetheredIfacePairs()
String[] com.android.server.connectivity.Tethering.getTetheredIfaces()
String[] com.android.server.input.InputManagerService.getKeyboardLayoutsForInputDevice(String)
String[] com.android.server.input.PersistentDataStore$InputDeviceState.getKeyboardLayouts()
String[] com.android.server.input.PersistentDataStore.getKeyboardLayouts(String)
String[] com.android.server.net.NetworkStatsService.getMobileIfaces()
String[] com.android.server.pm.PackageManagerService.getPackagesForUid(int)
String[] com.android.server.pm.PackageManagerService.getSystemSharedLibraryNames()
String[] com.coremedia.iso.PropertyBoxParserImpl$FourCcToBox.getParam()
String[] org.apache.harmony.xnet.provider.jsse.NativeCrypto.getDefaultProtocols()
SubjectPublicKeyInfo com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getInstance(ASN1TaggedObject,boolean)
SubjectPublicKeyInfo com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getInstance(Object)
SubtypeSwitcher com.android.inputmethod.latin.SubtypeSwitcher.getInstance()
SuggestedWords com.android.inputmethod.latin.Suggest.getSuggestedWords(WordComposer,CharSequence,ProximityInfo,boolean,int)
SuggestedWords com.android.inputmethod.latin.suggestions.SuggestionStripView.getSuggestions()
SuggestedWords$SuggestedWordInfo com.android.inputmethod.latin.SuggestedWords.getInfo(int)
SuggestedWords$SuggestedWordInfo com.android.inputmethod.latin.SuggestedWords.getWordInfo(int)
SuggestionsAdapter$SuggestItem com.android.browser.SuggestionsAdapter$CombinedCursor.getItem()
SuggestionsAdapter$SuggestItem com.android.browser.SuggestionsAdapter$SuggestCursor.getItem()
SuggestionsAdapter$SuggestItem com.android.browser.SuggestionsAdapter.getItem(int)
SuggestionsAdapter$SuggestionResults com.android.browser.SuggestionsAdapter.buildSuggestionResults()
SuggestionsInfo android.view.textservice.SentenceSuggestionsInfo.getSuggestionsInfoAt(int)
SuggestionsInfo com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService.getInDictEmptySuggestions()
SuggestionsInfo com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService.getNotInDictEmptySuggestions()
SuggestionsInfo com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession.onGetSuggestions(TextInfo,String,int)
SuggestionsInfo[] android.service.textservice.SpellCheckerService$Session.onGetSuggestionsMultiple(TextInfo[],int,boolean)
SuggestionsInfo[] com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerSession.onGetSuggestionsMultiple(TextInfo[],int,boolean)
Surface android.renderscript.Allocation.getSurface()
SurfaceHolder android.service.wallpaper.WallpaperService$Engine.getSurfaceHolder()
SurfaceHolder$Callback[] com.android.internal.view.BaseSurfaceHolder.getCallbacks()
SurfaceTexture android.renderscript.Allocation.getSurfaceTexture()
SurfaceTexture android.view.TextureView.getSurfaceTexture()
SurfaceTexture com.android.camera.MosaicPreviewRenderer.getInputSurfaceTexture()
SurfaceTexture com.android.gallery3d.ui.SurfaceTextureScreenNail.getSurfaceTexture()
SyncAdapterType[] android.content.ContentService.getSyncAdapterTypes()
SyncAdapterType[] android.content.SyncManager.getSyncAdapterTypes(int)
SyncInfo android.app.ContextImpl$ApplicationContentResolver.getCurrentSync()
SyncInfo android.test.mock.MockContentResolver.getCurrentSync()
SyncSampleBox com.coremedia.iso.boxes.SampleTableBox.getSyncSampleBox()
SyncStateContentProviderHelper com.android.providers.calendar.CalendarDatabaseHelper.getSyncState()
SyncStateContentProviderHelper com.android.providers.contacts.ContactsDatabaseHelper.getSyncState()
SyncStatusInfo android.content.ContentService.getSyncStatus(Account,String)
SyncStatusInfo android.content.SyncStorageEngine.getOrCreateSyncStatus(SyncStorageEngine$AuthorityInfo)
SyncStatusInfo android.content.SyncStorageEngine.getStatusByAccountAndAuthority(Account,int,String)
SyncStatusInfo android.test.mock.MockContentResolver.getSyncStatus(Account,String)
SyncStorageEngine$AuthorityInfo android.content.SyncStorageEngine.getAuthority(int)
SyncStorageEngine$AuthorityInfo android.content.SyncStorageEngine.getOrCreateAuthority(Account,int,String)
SyncStorageEngine$DayStats[] android.content.SyncStorageEngine.getDayStatistics()
SyncTaskProvider com.google.android.picasasync.UploadsManager.getManualPhotoUploadTaskProvider()
SyncTaskProvider com.google.android.picasasync.UploadsManager.getManualVideoUploadTaskProvider()
SystemKeyStore android.security.SystemKeyStore.getInstance()
SystemService$State android.os.SystemService.getState(String)
Tab com.android.browser.BaseUi.getActiveTab()
Tab com.android.browser.Controller.getCurrentTab()
Tab com.android.browser.Controller.openTab(IntentHandler$UrlData)
Tab com.android.browser.Controller.openTab(String,Tab,boolean,boolean)
Tab com.android.browser.Controller.openTab(String,boolean,boolean,boolean,Tab)
Tab com.android.browser.NavScreen$TabAdapter.getItem(int)
Tab com.android.browser.PieControl$TabAdapter.getItem(int)
Tab com.android.browser.PreloadedTabControl.getTab()
Tab com.android.browser.SnapshotTab.getParent()
Tab com.android.browser.Tab.getParent()
Tab com.android.browser.TabControl.createNewTab(Bundle,boolean)
Tab com.android.browser.TabControl.createNewTab(boolean)
Tab com.android.browser.TabControl.getCurrentTab()
Tab com.android.browser.TabControl.getLeastUsedTab(Tab)
Tab com.android.browser.TabControl.getTab(int)
Tab com.android.browser.TabControl.getTabFromAppId(String)
Tab com.android.browser.TabControl.getTabFromView(WebView)
Tab$SecurityState com.android.browser.Tab.getSecurityState()
TabControl com.android.browser.Controller.getTabControl()
TabControl com.android.browser.PreloadController.getTabControl()
TabControl$OnThumbnailUpdatedListener com.android.browser.TabControl.getOnThumbnailUpdatedListener()
TabHost$TabSpec android.widget.TabHost$TabSpec.setContent(Intent)
TabHost$TabSpec android.widget.TabHost$TabSpec.setContent(int)
TabHost$TabSpec android.widget.TabHost$TabSpec.setIndicator(View)
Tag android.nfc.tech.IsoDep.getTag()
Tag android.nfc.tech.MifareClassic.getTag()
Tag android.nfc.tech.MifareUltralight.getTag()
Tag android.nfc.tech.Ndef.getTag()
Tag android.nfc.tech.NdefFormatable.getTag()
Tag android.nfc.tech.NfcA.getTag()
Tag android.nfc.tech.NfcB.getTag()
Tag android.nfc.tech.NfcBarcode.getTag()
Tag android.nfc.tech.NfcF.getTag()
Tag android.nfc.tech.NfcV.getTag()
Tag com.android.nfc.NfcService$TagService.rediscover(int)
TaskAccessInfo com.android.server.am.ActivityStack.getTaskAccessInfoLocked(int,boolean)
TaskDescription com.android.systemui.recent.RecentTasksLoader.createTaskDescription(int,int,Intent,ComponentName,CharSequence)
TaskDescription com.android.systemui.recent.RecentTasksLoader.getFirstTask()
TaskDescription com.android.systemui.recent.RecentTasksLoader.loadFirstTask()
TaskStackBuilder android.app.TaskStackBuilder.addParentStack(ComponentName)
TelephonyManager com.android.internal.policy.impl.PhoneFallbackEventHandler.getTelephonyManager()
TelephonyManager com.android.mms.MmsApp.getTelephonyManager()
Template com.android.browser.homepages.Template.copy()
Template com.android.browser.homepages.Template.getCachedTemplate(Context,int)
Template$ListEntityIterator com.android.browser.homepages.RequestHandler$4.getListIterator(String)
Template$ListEntityIterator com.android.browser.homepages.Template$CursorListEntityWrapper.getListIterator(String)
Template$ListEntityIterator com.android.browser.homepages.Template$HashMapEntityData.getListIterator(String)
TestCaseCollector com.android.uiautomator.testrunner.UiAutomatorTestRunner.getTestCaseCollector(ClassLoader)
TextDirectionHeuristic android.widget.TextView.getTextDirectionHeuristic()
TextFieldsEditorView com.android.contacts.editor.RawContactEditorView.getNameEditor()
TextFieldsEditorView com.android.contacts.editor.RawContactEditorView.getPhoneticNameEditor()
TextKeyListener android.text.method.TextKeyListener.getInstance(boolean,TextKeyListener$Capitalize)
TextKeyListener$NullKeyListener android.text.method.TextKeyListener$NullKeyListener.getInstance()
TextModel com.android.mms.model.SlideModel.getText()
TextPaint com.android.gallery3d.ui.StringTexture.getDefaultPaint(float,int)
TextToSpeech$EngineInfo android.speech.tts.TtsEngines.getEngineInfo(String)
TextToSpeechService$UtteranceProgressDispatcher android.speech.tts.PlaybackQueueItem.getDispatcher()
TextUtils$TruncateAt android.widget.TextView.getEllipsize()
TextView com.android.contacts.list.ContactListItemView.getCountView()
TextView com.android.contacts.list.ContactListItemView.getDataView()
TextView com.android.contacts.list.ContactListItemView.getLabelView()
TextView com.android.contacts.list.ContactListItemView.getNameTextView()
TextView com.android.contacts.list.ContactListItemView.getPhoneticNameTextView()
TextView com.android.contacts.list.ContactListItemView.getSnippetView()
TextView com.android.contacts.list.ContactListItemView.getStatusView()
TextureView$SurfaceTextureListener android.view.TextureView.getSurfaceTextureListener()
Thread com.android.internal.view.WindowManagerPolicyThread.getThread()
Thread$State java.lang.Thread.getState()
Thread$UncaughtExceptionHandler java.lang.Thread.getDefaultUncaughtExceptionHandler()
Thread$UncaughtExceptionHandler java.lang.Thread.getUncaughtExceptionHandler()
ThreadLocal com.android.providers.contacts.ContactsProvider2.getTransactionHolder()
ThreadLocal com.android.providers.contacts.ProfileProvider.getTransactionHolder()
ThreadPool com.android.gallery3d.app.AbstractGalleryActivity.getThreadPool()
Throwable com.android.org.bouncycastle.asn1.ASN1Exception.getCause()
Throwable com.android.org.bouncycastle.asn1.ASN1ParsingException.getCause()
Throwable com.android.org.bouncycastle.util.io.pem.PemGenerationException.getCause()
Throwable com.google.android.picasasync.UploadTaskEntry.getError()
ThumbnailManager com.android.mms.MmsApp.getThumbnailManager()
Ticker com.google.common.collect.MapMaker.getTicker()
TileImageView$Tile com.android.gallery3d.ui.TileImageView$Tile.getParentTile()
TiledTexture com.android.gallery3d.ui.TiledScreenNail.getTexture()
Time com.android.calendar.DayView.getSelectedTime()
Time com.android.calendar.DayView.getSelectedTimeForAccessibility()
Time com.android.calendar.month.MonthWeekEventsView.getDayFromLocation(float)
Time com.android.calendar.month.SimpleWeekView.getDayFromLocation(float)
Time com.android.calendar.month.SimpleWeeksAdapter.getSelectedDay()
TimeList com.android.mms.dom.smil.ElementTimeImpl.getBegin()
TimeList com.android.mms.dom.smil.ElementTimeImpl.getEnd()
TimeList com.android.mms.dom.smil.SmilDocumentImpl.getBegin()
TimeList com.android.mms.dom.smil.SmilDocumentImpl.getEnd()
TimeList com.android.mms.dom.smil.SmilMediaElementImpl.getBegin()
TimeList com.android.mms.dom.smil.SmilMediaElementImpl.getEnd()
TimeList com.android.mms.dom.smil.SmilParElementImpl$1.getBegin()
TimeList com.android.mms.dom.smil.SmilParElementImpl.getBegin()
TimeList com.android.mms.dom.smil.SmilParElementImpl.getEnd()
TimeToSampleBox com.coremedia.iso.boxes.SampleTableBox.getTimeToSampleBox()
TimeZone com.adobe.xmp.impl.XMPDateTimeImpl.getTimeZone()
TimeZone com.android.exchange.utility.CalendarUtilities.tziStringToTimeZone(String,int)
TimerFragment$TimersListAdapter com.android.deskclock.timer.TimerFragment.createAdapter(Context,SharedPreferences)
TitleBar com.android.browser.BaseUi.getTitleBar()
Token org.apache.james.mime4j.field.address.parser.AddressListParser.getToken(int)
Token org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager.getNextToken()
Token org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager.jjFillToken()
Token org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.getNextToken()
Token org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjFillToken()
Token org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager.getNextToken()
Token org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjFillToken()
Tracer com.android.uiautomator.core.Tracer.getInstance()
Track com.googlecode.mp4parser.authoring.Movie.getTrackByTrackId(long)
TrackFragmentHeaderBox com.coremedia.iso.boxes.fragment.TrackFragmentBox.getTrackFragmentHeaderBox()
TrackHeaderBox com.coremedia.iso.boxes.TrackBox.getTrackHeaderBox()
TrackMetaData com.googlecode.mp4parser.authoring.Mp4TrackImpl.getTrackMetaData()
TrackMetaData com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getTrackMetaData()
TransactionSettings com.android.mms.transaction.Transaction.getConnectionSettings()
TransactionState com.android.mms.transaction.Transaction.getState()
Transformation com.android.server.wm.ScreenRotationAnimation.getEnterTransformation()
Transition android.media.videoeditor.MediaItem.getBeginTransition()
Transition android.media.videoeditor.MediaItem.getEndTransition()
Transition android.media.videoeditor.VideoEditorImpl.getTransition(String)
TransitionStore com.android.gallery3d.app.AbstractGalleryActivity.getTransitionStore()
TransitionType[] com.android.videoeditor.TransitionType.getTransitions(Context)
TransitionType[] com.android.videoeditor.TransitionsAdapter.getTransitions()
Transport com.android.email.mail.store.ImapStore.cloneTransport()
TreeMap$Node java.util.TreeMap.find(Object,TreeMap$Relation)
TwilightService$TwilightState com.android.server.TwilightService.getCurrentState()
Type android.renderscript.Allocation.typeFromBitmap(RenderScript,Bitmap,Allocation$MipmapControl)
Type android.renderscript.Program.getConstant(int)
Type android.renderscript.ProgramVertexFixedFunction$Builder.getConstantInputType(RenderScript)
Type android.renderscript.Script$FieldBase.getType()
TypeInfo com.android.mms.dom.AttrImpl.getSchemaTypeInfo()
TypeInfo com.android.mms.dom.ElementImpl.getSchemaTypeInfo()
UI com.android.browser.Controller.getUi()
URI libcore.net.http.HttpEngine.getUri()
URI org.apache.http.client.utils.URIUtils.resolve(URI,String)
URI org.apache.http.client.utils.URIUtils.resolve(URI,URI)
URI org.apache.http.impl.client.DefaultRedirectHandler.getLocationURI(HttpResponse,HttpContext)
URL java.security.CodeSource.getLocation()
UiAutomatorBridge com.android.uiautomator.core.UiDevice.getAutomatorBridge()
UiAutomatorTestCaseFilter com.android.uiautomator.testrunner.UiAutomatorTestRunner.getTestCaseFilter()
UiAutomatorTestRunner com.android.commands.uiautomator.RunTestCommand.getRunner()
UiController com.android.browser.TitleBar.getUiController()
UiDevice com.android.uiautomator.core.UiDevice.getInstance()
UiDevice com.android.uiautomator.testrunner.UiAutomatorTestCase.getUiDevice()
UiSelector com.android.uiautomator.core.UiSelector.getChildSelector()
UiSelector com.android.uiautomator.core.UiSelector.getContainerSelector()
UiSelector com.android.uiautomator.core.UiSelector.getParentSelector()
UiSelector com.android.uiautomator.core.UiSelector.getPatternSelector()
UiccCard com.android.internal.telephony.uicc.UiccController.getUiccCard()
UiccCardApplication com.android.internal.telephony.UiccCard.getApplication(int)
UiccCardApplication com.android.internal.telephony.UiccCard.getApplicationIndex(int)
UiccCardApplication com.android.internal.telephony.uicc.UiccController.getUiccCardApplication(int)
UiccController com.android.internal.telephony.uicc.UiccController.getInstance()
UnmodifiableIterator com.google.common.collect.ImmutableList.iterator()
UnmodifiableIterator com.google.common.collect.ImmutableSortedMap.valueIterator()
UnmodifiableListIterator com.google.common.collect.ImmutableList.listIterator()
UpdateLock com.android.phone.PhoneGlobals.getUpdateLock()
UploadTaskEntry com.google.android.picasasync.UploadTaskEntry.createNew(ContentValues,int)
UploadTaskEntry com.google.android.picasasync.UploadsManager$UploadTask.getNextUpload()
UploadsDatabaseHelper com.google.android.picasasync.UploadsManager.getUploadsDatabaseHelper()
UploadsManager com.google.android.picasasync.UploadsManager.getInstance(Context)
Uri android.content.CursorLoader.getUri()
Uri android.content.pm.VerificationParams.getOriginatingURI()
Uri android.content.pm.VerificationParams.getReferrer()
Uri android.content.pm.VerificationParams.getVerificationURI()
Uri android.media.Ringtone.getUri()
Uri android.net.Uri.getCanonicalUri()
Uri android.net.Uri.normalizeScheme()
Uri android.provider.Settings$Global.getUriFor(String)
Uri com.android.browser.BookmarkUtils.getBookmarksUri(Context)
Uri com.android.browser.provider.SQLiteContentProvider.insert(Uri,ContentValues)
Uri com.android.browser.provider.SnapshotProvider.insert(Uri,ContentValues)
Uri com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.access$200(CalendarAppWidgetService$CalendarFactory)
Uri com.android.camera.PhotoModule$ImageNamer.getUri()
Uri com.android.camera.Storage.addImage(ContentResolver,String,long,Location,int,int,String,int,int)
Uri com.android.camera.Storage.newImage(ContentResolver,String,long,int,int)
Uri com.android.camera.VideoModule$VideoNamer.getUri()
Uri com.android.contacts.ContactPhotoManagerImpl$Request.getUri()
Uri com.android.contacts.ContactsUtils.getCallUri(String)
Uri com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag.getStreamItemPhotoUri()
Uri com.android.contacts.detail.ContactDetailFragment.getUri()
Uri com.android.contacts.group.GroupBrowseListAdapter$GroupListItemViewCache.getUri()
Uri com.android.contacts.group.GroupBrowseListAdapter.getSelectedGroup()
Uri com.android.contacts.group.GroupDetailFragment.getGroupUri()
Uri com.android.contacts.group.GroupEditorFragment$Member.getLookupUri()
Uri com.android.contacts.group.GroupEditorFragment$Member.getPhotoUri()
Uri com.android.contacts.list.ContactBrowseListFragment.getSelectedContactUri()
Uri com.android.contacts.list.ContactEntryListAdapter.getContactUri(int,Cursor,int,int)
Uri com.android.contacts.list.ContactListAdapter.getContactUri(int)
Uri com.android.contacts.list.ContactListAdapter.getContactUri(int,Cursor)
Uri com.android.contacts.list.ContactListAdapter.getFirstContactUri()
Uri com.android.contacts.list.ContactTileView.getLookupUri()
Uri com.android.contacts.list.ContactsRequest.getContactUri()
Uri com.android.contacts.list.EmailAddressListAdapter.getDataUri(int)
Uri com.android.contacts.list.JoinContactListAdapter.getContactUri(int,Cursor)
Uri com.android.contacts.list.LegacyContactListAdapter.getPersonUri(int)
Uri com.android.contacts.list.LegacyPhoneNumberListAdapter.getPhoneUri(int)
Uri com.android.contacts.list.LegacyPostalAddressListAdapter.getContactMethodUri(int)
Uri com.android.contacts.list.PhoneNumberListAdapter.getDataUri(int)
Uri com.android.contacts.list.PostalAddressListAdapter.getDataUri(int)
Uri com.android.contacts.model.Contact.getLookupUri()
Uri com.android.contacts.model.Contact.getRequestedUri()
Uri com.android.contacts.model.ContactLoader.getLookupUri()
Uri com.android.contacts.socialwidget.SocialWidgetSettings.getContactUri(Context,int)
Uri com.android.contacts.util.StructuredPostalUtils.getPostalAddressUri(String)
Uri com.android.deskclock.AlarmPreference.getAlert()
Uri com.android.email.AttachmentInfo.getUriForIntent(Context,long)
Uri com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo.getUriForIntent(Context,long)
Uri com.android.email.provider.EmailProvider.insert(Uri,ContentValues)
Uri com.android.emailcommon.provider.Account.save(Context)
Uri com.android.emailcommon.provider.EmailContent$Message.save(Context)
Uri com.android.emailcommon.provider.EmailContent.getUri()
Uri com.android.emailcommon.provider.EmailContent.save(Context)
Uri com.android.emailcommon.provider.Policy.save(Context)
Uri com.android.emailcommon.utility.AttachmentUtilities.getAttachmentUri(long,long)
Uri com.android.ex.chips.Queries$Query.getContentFilterUri()
Uri com.android.ex.chips.Queries$Query.getContentUri()
Uri com.android.ex.chips.RecipientEntry.getPhotoThumbnailUri()
Uri com.android.gallery3d.data.ActionImage.getContentUri()
Uri com.android.gallery3d.data.DataManager.getContentUri(Path)
Uri com.android.gallery3d.data.LocalAlbum.getContentUri()
Uri com.android.gallery3d.data.LocalImage.getContentUri()
Uri com.android.gallery3d.data.LocalMergeAlbum.getContentUri()
Uri com.android.gallery3d.data.LocalVideo.getContentUri()
Uri com.android.gallery3d.data.LocalVideo.getPlayUri()
Uri com.android.gallery3d.data.MediaObject.getContentUri()
Uri com.android.gallery3d.data.MediaObject.getPlayUri()
Uri com.android.gallery3d.data.MtpImage.getContentUri()
Uri com.android.gallery3d.data.UriImage.getContentUri()
Uri com.android.gallery3d.filtershow.cache.ImageLoader.getUri()
Uri com.android.gallery3d.filtershow.tools.SaveCopyTask.doInBackground(ImagePreset[])
Uri com.android.gallery3d.filtershow.tools.SaveCopyTask.insertContent(Context,Uri,File,String)
Uri com.android.gallery3d.gadget.LocalPhotoSource.getContentUri(int)
Uri com.android.gallery3d.gadget.MediaSetSource.getContentUri(int)
Uri com.android.gallery3d.gadget.WidgetService$EmptySource.getContentUri(int)
Uri com.android.gallery3d.picasasource.PicasaImage.getContentUri()
Uri com.android.gallery3d.picasasource.PicasaImage.getPlayUri()
Uri com.android.gallery3d.provider.GalleryProvider.getUriFor(Context,Path)
Uri com.android.launcher2.LauncherProvider.insert(Uri,ContentValues)
Uri com.android.launcher2.LauncherSettings$Favorites.getContentUri(long,boolean)
Uri com.android.mms.data.Contact.getPhoneUri()
Uri com.android.mms.data.Contact.getUri()
Uri com.android.mms.data.Conversation.getUri()
Uri com.android.mms.data.Conversation.getUri(long)
Uri com.android.mms.data.WorkingMessage.access$1300(PduPersister,SendReq,SlideshowModel,Uri,Context,HashMap)
Uri com.android.mms.model.MediaModel.getUri()
Uri com.android.mms.transaction.TransactionState.getContentUri()
Uri com.android.phone.ContactsAsyncHelper$ImageTracker.getPhotoUri()
Uri com.android.phone.PhoneUtils.getProviderGatewayUri(Intent)
Uri com.android.providers.calendar.CalendarProvider2.insertInTransaction(Uri,ContentValues,boolean)
Uri com.android.providers.calendar.SQLiteContentProvider.insert(Uri,ContentValues)
Uri com.android.providers.contacts.AbstractContactsProvider.insert(Uri,ContentValues)
Uri com.android.providers.contacts.ContactsProvider2.insertInTransaction(Uri,ContentValues)
Uri com.android.providers.contacts.VoicemailContentProvider$UriData.getUri()
Uri com.android.providers.downloads.DownloadInfo.getAllDownloadsUri()
Uri com.android.providers.downloads.DownloadInfo.getMyDownloadsUri()
Uri com.android.providers.downloads.DownloadProvider.insert(Uri,ContentValues)
Uri com.android.providers.media.MediaProvider.getAlbumArtOutputUri(MediaProvider$DatabaseHelper,SQLiteDatabase,long,Uri)
Uri com.android.providers.media.MediaThumbRequest.updateDatabase(Bitmap)
Uri com.android.providers.telephony.MmsProvider.insert(Uri,ContentValues)
Uri com.android.providers.telephony.SmsProvider.insert(Uri,ContentValues)
Uri com.android.server.pm.PackageManagerService$InstallParams.getPackageUri()
Uri com.android.videoeditor.service.VideoEditorProject.getExportedMovieUri()
Uri com.google.android.apps.lightcycle.panorama.StitchingService.access$700(StitchingService,String,Uri)
Uri com.google.android.mms.pdu.PduPart.getDataUri()
Uri com.google.android.mms.pdu.PduPersister.move(Uri,Uri)
Uri com.google.android.mms.pdu.PduPersister.persist(GenericPdu,Uri,boolean,boolean,HashMap)
Uri com.google.android.mms.pdu.PduPersister.persistPart(PduPart,long,HashMap)
Uri com.google.android.mms.util.SqliteWrapper.insert(Context,ContentResolver,Uri,ContentValues)
Uri com.google.android.picasastore.FIFEUtil.setImageUriOptions(String,Uri)
Uri com.google.android.picasastore.FIFEUtil.setImageUrlOptions(String,String)
Uri com.google.android.picasastore.PicasaStoreFacade.getAlbumCoverUri(long,String)
Uri com.google.android.picasastore.PicasaStoreFacade.getPhotoUri(long,String,String)
Uri com.google.android.picasasync.PicasaFacade.getAlbumUri(long)
Uri com.google.android.picasasync.PicasaFacade.getAlbumsUri()
Uri com.google.android.picasasync.PicasaFacade.getPhotosUri()
Uri com.google.android.picasasync.PicasaFacade.getPostAlbumsUri()
Uri com.google.android.picasasync.PicasaFacade.getPostPhotosUri()
Uri com.google.android.picasasync.PicasaFacade.getSettingsUri()
Uri com.google.android.picasasync.PicasaFacade.getSyncRequestUri()
Uri com.google.android.picasasync.PicasaFacade.getUploadRecordsUri()
Uri com.google.android.picasasync.PicasaFacade.getUploadUri(long)
Uri com.google.android.picasasync.PicasaFacade.getUploadsUri()
Uri com.google.android.picasasync.PicasaFacade.getUsersUri()
Uri com.google.android.picasasync.PicasaFacade.requestImmediateSyncOnAlbum(long)
Uri com.google.android.picasasync.PicasaFacade.requestImmediateSyncOnAlbumList(String)
Uri com.google.android.picasasync.UploadTaskEntry.getContentUri()
Uri com.google.android.picasasync.UploadTaskEntry.getUrl()
Uri$Builder android.net.Uri$Builder.clearQuery()
Uri$Builder android.net.Uri$Builder.encodedQuery(String)
Uri$Builder android.net.Uri$HierarchicalUri.buildUpon()
Uri$Builder android.net.Uri$StringUri.buildUpon()
Uri$PathSegments android.net.Uri$PathPart.getPathSegments()
Uri$PathSegments android.net.Uri$PathSegmentsBuilder.build()
UriPermissionOwner com.android.server.am.ActivityRecord.getUriPermissionsLocked()
UriPermissionOwner com.android.server.am.ServiceRecord$StartItem.getUriPermissionsLocked()
UriPermissionOwner com.android.server.am.UriPermissionOwner$ExternalToken.getOwner()
Uri[] android.nfc.INdefPushCallback$Stub$Proxy.getUris()
Uri[] android.nfc.NfcActivityManager.getUris()
Uri[] com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread.getSourceUris()
UsbAccessory com.android.server.usb.UsbDeviceManager$UsbHandler.getCurrentAccessory()
UsbAccessory com.android.server.usb.UsbDeviceManager.getCurrentAccessory()
UsbAccessory com.android.server.usb.UsbService.getCurrentAccessory()
UserHandle android.app.PendingIntent.getCreatorUserHandle()
UserHandle android.content.IntentSender.getCreatorUserHandle()
UserHandle android.content.pm.UserInfo.getUserHandle()
UserHandle android.os.Binder.getCallingUserHandle()
UserHandle android.os.UserManager.getUserForSerialNumber(long)
UserHandle android.os.storage.StorageVolume.getOwner()
UserHandle com.android.server.DevicePolicyManagerService$ActiveAdmin.getUserHandle()
UserHandle com.android.server.pm.PackageManagerService$HandlerParams.getUser()
UserHandle com.android.server.pm.PackageManagerService$InstallArgs.getUser()
UserHistoryDictionary com.android.inputmethod.latin.UserHistoryDictionary.getInstance(Context,String,SharedPreferences)
UserHistoryForgettingCurveUtils$ForgettingCurveParams com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord.getFcParams()
UserHistoryForgettingCurveUtils$ForgettingCurveParams com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord.getFcParams()
UserInfo android.app.ActivityManagerProxy.getCurrentUser()
UserInfo android.os.IUserManager$Stub$Proxy.createUser(String,int)
UserInfo android.os.IUserManager$Stub$Proxy.getUserInfo(int)
UserInfo android.os.UserManager.createUser(String,int)
UserInfo android.os.UserManager.getUserInfo(int)
UserInfo com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar.getUserInfo()
UserInfo com.android.server.am.ActivityManagerService.getCurrentUser()
UserInfo com.android.server.pm.UserManagerService.createUser(String,int)
UserInfo com.android.server.pm.UserManagerService.getUserInfo(int)
UserManagerService com.android.server.am.ActivityManagerService.getUserManagerLocked()
UserManagerService com.android.server.pm.UserManagerService.getInstance()
Utils$UsabilityStudyLogUtils com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils.getInstance()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$AndroidCustomData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$AnniversaryData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$BirthdayData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$EmailData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$ImData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$NameData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$NicknameData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$NoteData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$OrganizationData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$PhoneData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$PhotoData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$PostalData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$SipData.getEntryLabel()
VCardEntry$EntryLabel com.android.vcard.VCardEntry$WebsiteData.getEntryLabel()
VCardService com.android.contacts.vcard.VCardService$MyBinder.getService()
ValueAnimator com.android.launcher2.InterruptibleInOutAnimator.getAnimator()
Vector com.android.org.bouncycastle.asn1.x509.X509Name.getOIDs()
Vector com.android.org.bouncycastle.asn1.x509.X509Name.getValues()
Vector com.android.org.bouncycastle.asn1.x509.X509Name.getValues(ASN1ObjectIdentifier)
Vector3 com.google.android.apps.lightcycle.sensor.SensorReader.getFilteredAcceleration()
VendorPolicyLoader com.android.email.VendorPolicyLoader.getInstance(Context)
VerifierDeviceIdentity com.android.server.pm.PackageManagerService.getVerifierDeviceIdentity()
VerifierDeviceIdentity com.android.server.pm.Settings.getVerifierDeviceIdentityLPw()
Vibrator android.hardware.input.InputManager.getInputDeviceVibrator(int)
Vibrator android.view.InputDevice.getVibrator()
VibratorUtils com.android.inputmethod.latin.VibratorUtils.getInstance(Context)
VideoEditorProfile android.media.videoeditor.VideoEditorProfile.get()
VideoModel com.android.mms.model.SlideModel.getVideo()
View android.accounts.ChooseAccountTypeActivity$AccountArrayAdapter.getView(int,View,ViewGroup)
View android.view.FocusFinder.findNextFocusInAbsoluteDirection(ArrayList,ViewGroup,View,Rect,int)
View android.view.ViewGroup$ChildListForAccessibility.getChildAt(int)
View android.view.ViewRootImpl.getAccessibilityFocusedHost()
View android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter.getView(int,View,ViewGroup)
View android.webkit.WebViewClassic.getZoomControls()
View android.widget.AbsListView$RecycleBin.getTransientStateView(int)
View android.widget.CursorTreeAdapter.getChildView(int,int,boolean,View,ViewGroup)
View android.widget.CursorTreeAdapter.getGroupView(int,boolean,View,ViewGroup)
View android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter.getView(int,View,ViewGroup)
View android.widget.RemoteViews.apply(Context,ViewGroup,RemoteViews$OnClickHandler)
View android.widget.ViewSwitcher.getNextView()
View com.android.browser.BaseUi.getVideoLoadingProgressView()
View com.android.browser.BrowserHistoryPage$HistoryAdapter.getChildView(int,int,boolean,View,ViewGroup)
View com.android.browser.BrowserHistoryPage$HistoryAdapter.getGroupView(int,boolean,View,ViewGroup)
View com.android.browser.BrowserHistoryPage$HistoryChildWrapper.getView(int,View,ViewGroup)
View com.android.browser.BrowserHistoryPage$HistoryGroupWrapper.getView(int,View,ViewGroup)
View com.android.browser.BrowserHistoryPage.getTargetView(ContextMenu$ContextMenuInfo)
View com.android.browser.BrowserSnapshotPage.onCreateView(LayoutInflater,ViewGroup,Bundle)
View com.android.browser.Controller.getVideoLoadingProgressView()
View com.android.browser.DateSortedExpandableListAdapter.getChildView(int,int,boolean,View,ViewGroup)
View com.android.browser.DateSortedExpandableListAdapter.getGroupView(int,boolean,View,ViewGroup)
View com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList.getView(int,View,ViewGroup)
View com.android.browser.NavScreen$TabAdapter.getView(int,View,ViewGroup)
View com.android.browser.PieControl$TabAdapter.getView(int,View,ViewGroup)
View com.android.browser.PreloadController.getVideoLoadingProgressView()
View com.android.browser.SuggestionsAdapter.getView(int,View,ViewGroup)
View com.android.browser.Tab$3.getVideoLoadingProgressView()
View com.android.browser.Tab.getSubViewContainer()
View com.android.browser.Tab.getViewContainer()
View com.android.browser.TabScrollView.getSelectedTab()
View com.android.browser.addbookmark.FolderSpinnerAdapter.getDropDownView(int,View,ViewGroup)
View com.android.browser.addbookmark.FolderSpinnerAdapter.getView(int,View,ViewGroup)
View com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter.getView(int,View,ViewGroup)
View com.android.browser.util.ThreadedCursorAdapter.getView(int,View,ViewGroup)
View com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getChildView(int,int,boolean,View,ViewGroup)
View com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getGroupView(int,boolean,View,ViewGroup)
View com.android.browser.view.PieItem.getView()
View com.android.calendar.CalendarViewAdapter.getDropDownView(int,View,ViewGroup)
View com.android.calendar.CalendarViewAdapter.getView(int,View,ViewGroup)
View com.android.calendar.agenda.AgendaByDayAdapter.getView(int,View,ViewGroup)
View com.android.calendar.agenda.AgendaFragment.onCreateView(LayoutInflater,ViewGroup,Bundle)
View com.android.calendar.agenda.AgendaListView.getFirstVisibleView()
View com.android.calendar.agenda.AgendaWindowAdapter.getView(int,View,ViewGroup)
View com.android.calendar.event.EditEventFragment.onCreateView(LayoutInflater,ViewGroup,Bundle)
View com.android.calendar.month.MonthByWeekAdapter.getView(int,View,ViewGroup)
View com.android.calendar.month.SimpleWeeksAdapter.getView(int,View,ViewGroup)
View com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.getView(int,View,ViewGroup)
View com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.getView(int,View,ViewGroup)
View com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.newChildView(Context,Cursor,boolean,ViewGroup)
View com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.newGroupView(Context,Cursor,boolean,ViewGroup)
View com.android.camera.ui.MoreSettingPopup$MoreSettingAdapter.getView(int,View,ViewGroup)
View com.android.contacts.ContactsActivity.getView(int)
View com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter.getDropDownView(int,View,ViewGroup)
View com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter.getView(int,View,ViewGroup)
View com.android.contacts.calllog.CallDetailHistoryAdapter.getView(int,View,ViewGroup)
View com.android.contacts.detail.ContactDetailDisplayUtils.addStreamItemText(Context,StreamItemEntry,View)
View com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter.getView(int,View,ViewGroup)
View com.android.contacts.detail.ContactDetailFragment$ViewAdapter.getView(int,View,ViewGroup)
View com.android.contacts.detail.StreamItemAdapter.getView(int,View,ViewGroup)
View com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter.getView(int,View,ViewGroup)
View com.android.contacts.dialpad.DialpadFragment.onCreateView(LayoutInflater,ViewGroup,Bundle)
View com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter.getView(int,View,ViewGroup)
View com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter.getView(int,View,ViewGroup)
View com.android.contacts.editor.LabeledEditorView$EditTypeAdapter.getDropDownView(int,View,ViewGroup)
View com.android.contacts.editor.LabeledEditorView$EditTypeAdapter.getView(int,View,ViewGroup)
View com.android.contacts.group.GroupBrowseListAdapter.getView(int,View,ViewGroup)
View com.android.contacts.group.GroupDetailDisplayUtils.getNewGroupSourceView(Context)
View com.android.contacts.group.GroupEditorFragment$MemberListAdapter.getView(int,View,ViewGroup)
View com.android.contacts.group.SuggestedMemberListAdapter.getView(int,View,ViewGroup)
View com.android.contacts.interactions.ImportExportDialogFragment$1.getView(int,View,ViewGroup)
View com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter.getView(int,View,ViewGroup)
View com.android.contacts.list.AccountFilterActivity$FilterListAdapter.getView(int,View,ViewGroup)
View com.android.contacts.list.ContactEntryListAdapter.createPinnedSectionHeaderView(Context,ViewGroup)
View com.android.contacts.list.ContactEntryListAdapter.newHeaderView(Context,int,Cursor,ViewGroup)
View com.android.contacts.list.ContactEntryListFragment.getView()
View com.android.contacts.list.ContactListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.list.ContactTileAdapter.getDivider()
View com.android.contacts.list.ContactTileAdapter.getView(int,View,ViewGroup)
View com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getChildView(int,int,boolean,View,ViewGroup)
View com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getGroupView(int,boolean,View,ViewGroup)
View com.android.contacts.list.EmailAddressListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.list.LegacyContactListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.list.LegacyPhoneNumberListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.list.LegacyPostalAddressListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.list.PhoneFavoriteMergedAdapter.getView(int,View,ViewGroup)
View com.android.contacts.list.PhoneNumberListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.list.PostalAddressListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.contacts.quickcontact.QuickContactListFragment$1.getView(int,View,ViewGroup)
View com.android.contacts.util.AccountSelectionUtil$1.getView(int,View,ViewGroup)
View com.android.contacts.util.AccountsListAdapter.getView(int,View,ViewGroup)
View com.android.contacts.widget.IndexerListAdapter.getPinnedHeaderView(int,View,ViewGroup)
View com.android.contacts.widget.PinnedHeaderListAdapter.getPinnedHeaderView(int,View,ViewGroup)
View com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter.getPinnedHeaderView(int,View,ViewGroup)
View com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter.newHeaderView(Context,int,Cursor,ViewGroup)
View com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter.newView(Context,int,Cursor,int,ViewGroup)
View com.android.deskclock.AlarmClock$AlarmItemAdapter.getView(int,View,ViewGroup)
View com.android.deskclock.Utils.setClockStyle(Context,View,View,String)
View com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter.getView(int,View,ViewGroup)
View com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.getView(int,View,ViewGroup)
View com.android.deskclock.timer.TimerFragment$TimersListAdapter.getView(int,View,ViewGroup)
View com.android.deskclock.timer.TimerFragment.onCreateView(LayoutInflater,ViewGroup,Bundle)
View com.android.deskclock.widget.swipeablelistview.SwipeableListView.getChildAtPosition(MotionEvent)
View com.android.deskclock.widget.swipeablelistview.SwipeableListView.getChildContentView(View)
View com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getView(int,View,ViewGroup)
View com.android.deskclock.worldclock.WorldClockAdapter.getView(int,View,ViewGroup)
View com.android.email.activity.AccountSelectorAdapter.getView(int,View,ViewGroup)
View com.android.email.activity.MessageCompose$ActionSpinnerAdapter.getDropDownView(int,View,ViewGroup)
View com.android.email.activity.MessageCompose$ActionSpinnerAdapter.getView(int,View,ViewGroup)
View com.android.email.activity.UiUtilities.getView(Activity,int)
View com.android.email.activity.UiUtilities.getView(View,int)
View com.android.email.activity.UiUtilities.getViewOrNull(Activity,int)
View com.android.email.activity.UiUtilities.getViewOrNull(View,int)
View com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$ArrayAdapterWithButtons.getView(int,View,ViewGroup)
View com.android.ex.chips.BaseRecipientAdapter.getView(int,View,ViewGroup)
View com.android.ex.chips.RecipientAlternatesAdapter.getView(int,View,ViewGroup)
View com.android.ex.chips.SingleRecipientArrayAdapter.getView(int,View,ViewGroup)
View com.android.gallery3d.app.CommonControllerOverlay.getView()
View com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter.getDropDownView(int,View,ViewGroup)
View com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter.getView(int,View,ViewGroup)
View com.android.gallery3d.app.GalleryActionBar$ClusterAdapter.getView(int,View,ViewGroup)
View com.android.gallery3d.filtershow.HistoryAdapter.getView(int,View,ViewGroup)
View com.android.gallery3d.filtershow.ImageStateAdapter.getView(int,View,ViewGroup)
View com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter.getView(int,View,ViewGroup)
View com.android.gallery3d.ui.PopupList$ItemDataAdapter.getView(int,View,ViewGroup)
View com.android.internal.app.LocalePicker$1.getView(int,View,ViewGroup)
View com.android.internal.app.ResolverActivity$ResolveListAdapter.getView(int,View,ViewGroup)
View com.android.internal.policy.impl.GlobalActions$MyAdapter.getView(int,View,ViewGroup)
View com.android.internal.policy.impl.GlobalActions$SinglePressAction.create(Context,View,ViewGroup,LayoutInflater)
View com.android.internal.policy.impl.GlobalActions$ToggleAction.create(Context,View,ViewGroup,LayoutInflater)
View com.android.internal.policy.impl.PhoneWindowManager.addStartingWindow(IBinder,String,int,CompatibilityInfo,CharSequence,int,int,int)
View com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getContent()
View com.android.internal.policy.impl.keyguard.PagedView.getPageAt(int)
View com.android.internal.policy.impl.keyguard.PagedView.getScrollingIndicator()
View com.android.internal.widget.SizeAdaptiveLayout.getModestyPanel()
View com.android.launcher2.AppsCustomizePagedView.getContent()
View com.android.launcher2.AppsCustomizePagedView.getPageAt(int)
View com.android.launcher2.AppsCustomizeTabHost.getContent()
View com.android.launcher2.CellLayout.getChildAt(int,int)
View com.android.launcher2.DragLayer.getAnimatedView()
View com.android.launcher2.FocusOnlyTabWidget.getSelectedTab()
View com.android.launcher2.Folder.getEditTextRegion()
View com.android.launcher2.Folder.getItemAt(int)
View com.android.launcher2.Launcher.createShortcut(ShortcutInfo)
View com.android.launcher2.LauncherAppWidgetHostView.getErrorView()
View com.android.launcher2.PagedView.getPageAt(int)
View com.android.launcher2.PagedView.getScrollingIndicator()
View com.android.launcher2.PagedViewCellLayout.getChildOnPageAt(int)
View com.android.launcher2.PagedViewGridLayout.getChildOnPageAt(int)
View com.android.launcher2.ShortcutAndWidgetContainer.getChildAt(int,int)
View com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter.getView(int,View,ViewGroup)
View com.android.launcher2.Workspace.getContent()
View com.android.launcher2.Workspace.getViewForTag(Object)
View com.android.mms.ui.DeliveryReportAdapter.getView(int,View,ViewGroup)
View com.android.mms.ui.IconListAdapter.getView(int,View,ViewGroup)
View com.android.mms.ui.MessageListItem$5.getView(int,View,ViewGroup)
View com.android.mms.ui.RecipientListActivity$RecipientListAdapter.getView(int,View,ViewGroup)
View com.android.mms.ui.SlideshowEditActivity$SlideListAdapter.getView(int,View,ViewGroup)
View com.android.server.InputMethodManagerService$ImeSubtypeListAdapter.getView(int,View,ViewGroup)
View com.android.systemui.recent.RecentsHorizontalScrollView.getChildAtPosition(MotionEvent)
View com.android.systemui.recent.RecentsHorizontalScrollView.getChildContentView(View)
View com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter.getView(int,View,ViewGroup)
View com.android.systemui.recent.RecentsVerticalScrollView.getChildAtPosition(MotionEvent)
View com.android.systemui.recent.RecentsVerticalScrollView.getChildContentView(View)
View com.android.systemui.statusbar.BaseStatusBar.updateNotificationVetoButton(View,StatusBarNotification)
View com.android.systemui.statusbar.NotificationData$Entry.getLargeView()
View com.android.systemui.statusbar.phone.NavigationBarView.getBackButton()
View com.android.systemui.statusbar.phone.NavigationBarView.getHomeButton()
View com.android.systemui.statusbar.phone.NavigationBarView.getMenuButton()
View com.android.systemui.statusbar.phone.NavigationBarView.getRecentsButton()
View com.android.systemui.statusbar.phone.NavigationBarView.getSearchLight()
View com.android.systemui.statusbar.phone.PhoneStatusBar.getStatusBarView()
View com.android.systemui.statusbar.policy.NotificationRowLayout.getChildAtPosition(MotionEvent)
View com.android.systemui.statusbar.policy.NotificationRowLayout.getChildAtPosition(float,float)
View com.android.systemui.statusbar.policy.NotificationRowLayout.getChildAtRawPosition(float,float)
View com.android.systemui.statusbar.policy.NotificationRowLayout.getChildContentView(View)
View com.android.systemui.statusbar.tablet.NotificationPanel.getClearButton()
View com.android.systemui.statusbar.tablet.TabletStatusBar.getStatusBarView()
View com.android.videoeditor.OverlaysAdapter.getView(int,View,ViewGroup)
View com.android.videoeditor.ProjectPickerAdapter.getView(int,View,ViewGroup)
View com.android.videoeditor.TransitionsAdapter.getView(int,View,ViewGroup)
View com.android.videoeditor.widgets.MediaLinearLayout.addTransition(MovieTransition,String)
View$AccessibilityDelegate android.view.View.getAccessibilityDelegate()
View$AttachInfo$InvalidateInfo android.view.View$AttachInfo$InvalidateInfo.getNextPoolable()
View$DragShadowBuilder com.android.videoeditor.widgets.MediaItemView.getShadowBuilder()
View$ListenerInfo android.view.View.getListenerInfo()
View$OnClickListener com.android.contacts.detail.ContactDetailPhotoSetter.setupContactPhotoForClick(Context,Contact,ImageView,boolean)
View$OnClickListener com.android.contacts.list.ContactTileView.createClickListener()
View$OnFocusChangeListener android.view.View.getOnFocusChangeListener()
View$OnLongClickListener com.android.systemui.statusbar.BaseStatusBar.getNotificationLongClicker()
ViewGroup$LayoutParams android.view.View.getLayoutParams()
ViewGroup$LayoutParams android.view.ViewGroup.generateDefaultLayoutParams()
ViewGroup$LayoutParams android.view.ViewGroup.generateLayoutParams(ViewGroup$LayoutParams)
ViewGroup$LayoutParams android.widget.AbsListView.generateDefaultLayoutParams()
ViewGroup$LayoutParams android.widget.AbsSpinner.generateDefaultLayoutParams()
ViewGroup$LayoutParams android.widget.AdapterViewAnimator.createOrReuseLayoutParams(View)
ViewInterface com.android.mms.ui.Presenter.getView()
ViewManager android.webkit.WebViewClassic.getViewManager()
ViewManager$ChildView android.webkit.ViewManager.createView()
ViewParent android.view.View.getParentForAccessibility()
ViewParent android.view.ViewRootImpl.getParentForAccessibility()
ViewRootImpl$RunQueue android.view.ViewRootImpl.getRunQueue()
Virtualizer$Settings android.media.audiofx.Virtualizer.getProperties()
VoicemailContentProvider$UriData com.android.providers.contacts.VoicemailContentProvider$UriData.createUriData(Uri)
VoicemailStatusHelperImpl$Action com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState.getAction()
VoicemailUriType com.android.providers.contacts.VoicemailContentProvider$UriData.getUriType()
Void com.android.mms.transaction.PushReceiver$ReceivePushTask.doInBackground(Intent[])
VolumePreference$VolumeStore android.preference.VolumePreference$SavedState.getVolumeStore()
VpnConfig com.android.server.connectivity.Vpn.getLegacyVpnConfig()
WallpaperInfo com.android.server.WallpaperManagerService.getWallpaperInfo()
WallpaperService$Engine com.android.wallpaper.RenderScriptWallpaper.onCreateEngine()
Watchdog com.android.server.Watchdog.getInstance()
WaveformData android.media.videoeditor.AudioTrack.getWaveformData()
WaveformData android.media.videoeditor.MediaVideoItem.getWaveformData()
WaveformData com.android.videoeditor.service.MovieAudioTrack.getWaveformData()
WaveformData com.android.videoeditor.service.MovieMediaItem.getWaveformData()
WaveformData com.android.videoeditor.widgets.AudioTrackView.getWaveformData()
WeakHashMap$Entry java.util.WeakHashMap.getEntry(Object)
WebBackForwardList android.webkit.WebViewClassic.restoreState(Bundle)
WebBackForwardListClassic android.webkit.CallbackProxy.getBackForwardList()
WebBackForwardListClient android.webkit.WebViewClassic.getWebBackForwardListClient()
WebChromeClient android.webkit.WebViewClassic.getWebChromeClient()
WebHistoryItem android.webkit.WebBackForwardListClassic.getCurrentItem()
WebHistoryItem android.webkit.WebBackForwardListClassic.getItemAtIndex(int)
WebIconDatabase android.webkit.WebViewClassic$Factory.getWebIconDatabase()
WebIconDatabaseClassic android.webkit.WebIconDatabaseClassic.getInstance()
WebSettings android.webkit.WebViewClassic.getSettings()
WebSettings$LayoutAlgorithm android.webkit.WebSettings.getLayoutAlgorithm()
WebSettings$LayoutAlgorithm android.webkit.WebSettingsClassic.getLayoutAlgorithm()
WebSettings$LayoutAlgorithm com.android.browser.BrowserSettings.getLayoutAlgorithm()
WebSettings$PluginState android.webkit.WebSettings.getPluginState()
WebSettings$PluginState android.webkit.WebSettingsClassic.getPluginState()
WebSettings$PluginState com.android.browser.BrowserSettings.getPluginState()
WebSettings$TextSize android.webkit.WebSettings.getTextSize()
WebSettings$ZoomDensity android.webkit.WebSettings.getDefaultZoom()
WebSettings$ZoomDensity android.webkit.WebSettingsClassic.getDefaultZoom()
WebSettings$ZoomDensity com.android.browser.BrowserSettings.getDefaultZoom()
WebSettingsClassic android.webkit.WebViewCore.getSettings()
WebSettingsClassic$AutoFillProfile android.webkit.WebSettingsClassic.getAutoFillProfile()
WebSettingsClassic$AutoFillProfile com.android.browser.AutofillHandler.getAutoFillProfile()
WebSettingsClassic$AutoFillProfile com.android.browser.BrowserSettings.getAutoFillProfile()
WebStorage android.webkit.WebViewClassic$Factory.getWebStorage()
WebStorageClassic android.webkit.WebStorageClassic.getInstance()
WebStorageSizeManager com.android.browser.BrowserSettings.getWebStorageSizeManager()
WebView android.webkit.WebViewClassic.getWebView()
WebView android.webkit.WebViewFragment.getWebView()
WebView com.android.browser.BaseUi.getWebView()
WebView com.android.browser.Controller.getCurrentTopWebView()
WebView com.android.browser.Controller.getCurrentWebView()
WebView com.android.browser.Preloader$PreloaderSession.getWebView()
WebView com.android.browser.Tab.getSubWebView()
WebView com.android.browser.Tab.getTopWindow()
WebView com.android.browser.Tab.getWebView()
WebView com.android.browser.TabControl.getCurrentSubWindow()
WebView com.android.browser.TabControl.getCurrentTopWebView()
WebView com.android.browser.TabControl.getCurrentWebView()
WebView com.android.browser.TitleBar.getCurrentWebView()
WebView$HitTestResult android.webkit.WebView.getHitTestResult()
WebView$HitTestResult android.webkit.WebViewClassic.getHitTestResult()
WebViewClassic android.webkit.HTML5VideoViewProxy.getWebView()
WebViewClassic android.webkit.WebViewCore.getWebViewClassic()
WebViewClassic com.android.browser.Tab.getWebViewClassic()
WebViewClient android.webkit.WebViewClassic.getWebViewClient()
WebViewCore android.webkit.WebViewClassic.getWebViewCore()
WebViewDatabase android.webkit.WebViewClassic$Factory.getWebViewDatabase(Context)
WebViewDatabaseClassic android.webkit.WebViewDatabaseClassic.getInstance(Context)
WebViewFactory com.android.browser.Controller.getWebViewFactory()
WebViewFactory com.android.browser.PreloadController.getWebViewFactory()
WebViewFactoryProvider android.webkit.WebViewFactory.getProvider()
WebViewFactoryProvider$Statics android.webkit.WebViewClassic$Factory.getStatics()
WebViewInputDispatcher$WebKitCallbacks android.webkit.WebViewCore.getInputDispatcherCallbacks()
WebViewProvider android.webkit.WebView.getWebViewProvider()
WebViewProvider$ScrollDelegate android.webkit.WebViewClassic.getScrollDelegate()
WebViewProvider$ViewDelegate android.webkit.WebViewClassic.getViewDelegate()
WebViewTimersControl com.android.browser.WebViewTimersControl.getInstance()
WidgetManager com.android.email.widget.WidgetManager.getInstance()
WifiConfiguration com.android.server.WifiService.getWifiApConfiguration()
WifiDisplay android.hardware.display.WifiDisplayStatus.getActiveDisplay()
WifiDisplay com.android.server.display.PersistentDataStore.getRememberedWifiDisplay(String)
WifiDisplay com.android.server.display.WifiDisplayController.access$2200(WifiP2pDevice)
WifiDisplayStatus android.hardware.display.DisplayManager.getWifiDisplayStatus()
WifiDisplayStatus android.hardware.display.DisplayManagerGlobal.getWifiDisplayStatus()
WifiDisplayStatus android.hardware.display.IDisplayManager$Stub$Proxy.getWifiDisplayStatus()
WifiDisplayStatus android.hardware.display.WifiDisplayStatus$1.createFromParcel(Parcel)
WifiDisplayStatus com.android.server.display.DisplayManagerService.getWifiDisplayStatus()
WifiDisplayStatus com.android.server.display.WifiDisplayAdapter.getWifiDisplayStatusLocked()
WifiDisplay[] android.hardware.display.WifiDisplayStatus.getAvailableDisplays()
WifiDisplay[] android.hardware.display.WifiDisplayStatus.getRememberedDisplays()
WifiDisplay[] com.android.server.display.PersistentDataStore.getRememberedWifiDisplays()
WifiInfo com.android.server.WifiService.getConnectionInfo()
WifiManager$MulticastLock android.net.wifi.WifiManager.createMulticastLock(String)
WifiManager$WifiLock android.net.wifi.WifiManager.createWifiLock(String)
WifiManager$WifiLock android.net.wifi.WifiManager.createWifiLock(int,String)
WifiP2pDevice android.net.wifi.p2p.WifiP2pDeviceList.get(String)
WifiP2pDevice android.net.wifi.p2p.nsd.WifiP2pServiceResponse.getSrcDevice()
WifiP2pManager$Channel android.net.wifi.p2p.WifiP2pManager.initialize(Context,Looper,WifiP2pManager$ChannelListener)
WifiSsid android.net.wifi.WifiInfo.getWifiSsid()
WifiSsid android.net.wifi.WifiSsid$1.createFromParcel(Parcel)
WifiSsid android.net.wifi.WifiSsid.createFromHex(String)
WifiWatchdogStateMachine android.net.wifi.WifiWatchdogStateMachine.makeWifiWatchdogStateMachine(Context)
Window$Callback android.view.Window.getCallback()
WindowInfo android.view.IWindowManager$Stub$Proxy.getWindowInfo(IBinder)
WindowInfo com.android.server.wm.WindowManagerService.getWindowInfo(IBinder)
WindowList com.android.server.wm.DisplayContent.getWindowList()
WindowList com.android.server.wm.WindowManagerService.getDefaultWindowListLocked()
WindowList com.android.server.wm.WindowManagerService.getTokenWindowsOnDisplay(WindowToken,DisplayContent)
WindowList com.android.server.wm.WindowManagerService.getWindowListLocked(Display)
WindowList com.android.server.wm.WindowState.getWindowList()
WindowManager$LayoutParams android.view.Window.getAttributes()
WindowManager$LayoutParams com.android.server.wm.WindowState.getAttrs()
WindowManager$LayoutParams com.android.systemui.statusbar.phone.PhoneStatusBar.getSearchLayoutParams(ViewGroup$LayoutParams)
WindowManager$LayoutParams com.android.systemui.statusbar.tablet.TabletStatusBar.getSearchLayoutParams(ViewGroup$LayoutParams)
WindowManagerGlobal android.view.WindowManagerGlobal.getInstance()
WordIterator android.widget.Editor.getWordIterator()
WorkingMessage com.android.mms.data.WorkingMessage.loadDraft(ComposeMessageActivity,Conversation,Runnable)
Workspace com.android.launcher2.Launcher.getWorkspace()
WpsResult android.net.wifi.WifiConfigStore.startWpsPbc(WpsInfo)
WpsResult android.net.wifi.WifiConfigStore.startWpsWithPinFromAccessPoint(WpsInfo)
WpsResult android.net.wifi.WifiConfigStore.startWpsWithPinFromDevice(WpsInfo)
X500Name com.android.org.bouncycastle.asn1.x500.X500Name.getInstance(ASN1TaggedObject,boolean)
X500Name com.android.org.bouncycastle.asn1.x500.X500Name.getInstance(Object)
X500NameStyle com.android.org.bouncycastle.asn1.x500.X500Name.getDefaultStyle()
X500Principal java.security.cert.TrustAnchor.getCA()
X509Certificate java.security.cert.TrustAnchor.getTrustedCert()
X509Certificate[] com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager.getCertificateChain(String)
X509Certificate[] com.android.emailcommon.utility.SSLUtils$TrackingKeyManager.getCertificateChain(String)
X509Certificate[] org.apache.harmony.xnet.provider.jsse.TrustManagerImpl.getAcceptedIssuers()
X509Name com.android.org.bouncycastle.asn1.x509.X509Name.getInstance(ASN1TaggedObject,boolean)
X509Name com.android.org.bouncycastle.asn1.x509.X509Name.getInstance(Object)
XMPMeta com.android.gallery3d.filtershow.cache.ImageLoader.getXmpObject()
XMPMeta com.google.android.apps.lightcycle.xmp.XmpUtil.createXMPMeta()
XMPNode com.adobe.xmp.impl.XMPMetaImpl.getRoot()
XMPNode com.adobe.xmp.impl.XMPNode.findChildByName(String)
XMPNode com.adobe.xmp.impl.XMPNode.getChild(int)
XMPNode com.adobe.xmp.impl.XMPNode.getParent()
XMPNode com.adobe.xmp.impl.XMPNode.getQualifier(int)
XMPNode com.adobe.xmp.impl.XMPNodeUtils.findSchemaNode(XMPNode,String,String,boolean)
XMPPathSegment com.adobe.xmp.impl.xpath.XMPPath.getSegment(int)
XMPSchemaRegistry com.adobe.xmp.XMPMetaFactory.getSchemaRegistry()
XMPVersionInfo com.adobe.xmp.XMPMetaFactory.getVersionInfo()
ZoomControlExternal$ExtendedZoomControls android.webkit.ZoomControlExternal.getControls()
boolean android.accessibilityservice.AccessibilityService.bindService(Intent,ServiceConnection,int)
boolean android.accessibilityservice.AccessibilityService.performGlobalAction(int)
boolean android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.performAccessibilityAction(int,long,int,Bundle,int,IAccessibilityInteractionConnectionCallback,long)
boolean android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.performGlobalAction(int)
boolean android.accessibilityservice.UiTestAutomationBridge.performAccessibilityAction(int,long,int,Bundle)
boolean android.accessibilityservice.UiTestAutomationBridge.performAccessibilityActionInActiveWindow(long,int,Bundle)
boolean android.accounts.AccountManagerService.access$1100(AccountManagerService,AccountManagerService$UserAccounts,Account,String,String)
boolean android.accounts.AccountManagerService.addAccount(Account,String,Bundle)
boolean android.accounts.IAccountAuthenticator$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.app.Activity.navigateUpTo(Intent)
boolean android.app.Activity.startActivityIfNeeded(Intent,int,Bundle)
boolean android.app.Activity.startNextMatchingActivity(Intent,Bundle)
boolean android.app.ActivityManagerProxy.clearApplicationUserData(String,IPackageDataObserver,int)
boolean android.app.ActivityManagerProxy.dumpHeap(String,int,boolean,String,ParcelFileDescriptor)
boolean android.app.ActivityManagerProxy.finishActivityAffinity(IBinder)
boolean android.app.ActivityManagerProxy.handleApplicationWtf(IBinder,String,ApplicationErrorReport$CrashInfo)
boolean android.app.ActivityManagerProxy.isIntentSenderAnActivity(IIntentSender)
boolean android.app.ActivityManagerProxy.isUserRunning(int,boolean)
boolean android.app.ActivityManagerProxy.killProcessesBelowForeground(String)
boolean android.app.ActivityManagerProxy.navigateUpTo(IBinder,Intent,int,Intent)
boolean android.app.ActivityManagerProxy.profileControl(String,int,boolean,String,ParcelFileDescriptor,int)
boolean android.app.ActivityManagerProxy.refContentProvider(IBinder,int,int)
boolean android.app.ActivityManagerProxy.startInstrumentation(ComponentName,String,int,Bundle,IInstrumentationWatcher,int)
boolean android.app.ActivityManagerProxy.startNextMatchingActivity(IBinder,Intent,Bundle)
boolean android.app.ActivityManagerProxy.targetTaskAffinityMatchesActivity(IBinder,String)
boolean android.app.Application.bindService(Intent,ServiceConnection,int)
boolean android.app.ContextImpl$ApplicationContentResolver.getSyncAutomatically(Account,String)
boolean android.app.ContextImpl.bindService(Intent,ServiceConnection,int,int)
boolean android.app.INotificationManager$Stub$Proxy.areNotificationsEnabledForPackage(String)
boolean android.app.IWallpaperManager$Stub$Proxy.hasNamedWallpaper(String)
boolean android.app.admin.DevicePolicyManager.getCameraDisabled(ComponentName,int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.getCameraDisabled(ComponentName,int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.getStorageEncryption(ComponentName,int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.hasGrantedPolicy(ComponentName,int,int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.isActivePasswordSufficient(int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.isAdminActive(ComponentName,int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.packageHasActiveAdmins(String,int)
boolean android.app.admin.IDevicePolicyManager$Stub$Proxy.resetPassword(String,int,int)
boolean android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int,ComponentName)
boolean android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int,ComponentName,Bundle)
boolean android.bluetooth.BluetoothAdapter.getProfileProxy(Context,BluetoothProfile$ServiceListener,int)
boolean android.bluetooth.BluetoothInputDevice.getProtocolMode(BluetoothDevice)
boolean android.bluetooth.BluetoothInputDevice.getReport(BluetoothDevice,byte,byte,int)
boolean android.bluetooth.BluetoothInputDevice.sendData(BluetoothDevice,String)
boolean android.bluetooth.BluetoothInputDevice.setProtocolMode(BluetoothDevice,int)
boolean android.bluetooth.BluetoothInputDevice.setReport(BluetoothDevice,byte,String)
boolean android.bluetooth.BluetoothTetheringDataTracker.setRadio(boolean)
boolean android.bluetooth.IBluetooth$Stub$Proxy.setPairingConfirmation(BluetoothDevice,boolean)
boolean android.bluetooth.IBluetooth$Stub$Proxy.setPasskey(BluetoothDevice,boolean,int,byte[])
boolean android.bluetooth.IBluetooth$Stub$Proxy.setPin(BluetoothDevice,boolean,int,byte[])
boolean android.bluetooth.IBluetooth$Stub$Proxy.setRemoteAlias(BluetoothDevice,String)
boolean android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.processChld(int)
boolean android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy.sendDtmf(int)
boolean android.bluetooth.IBluetoothHealth$Stub$Proxy.connectChannelToSink(BluetoothDevice,BluetoothHealthAppConfiguration,int)
boolean android.bluetooth.IBluetoothHealth$Stub$Proxy.disconnectChannel(BluetoothDevice,BluetoothHealthAppConfiguration,int)
boolean android.bluetooth.IBluetoothHealth$Stub$Proxy.registerAppConfiguration(BluetoothHealthAppConfiguration,IBluetoothHealthCallback)
boolean android.bluetooth.IBluetoothHealth$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.bluetooth.IBluetoothInputDevice$Stub$Proxy.getReport(BluetoothDevice,byte,byte,int)
boolean android.bluetooth.IBluetoothInputDevice$Stub$Proxy.sendData(BluetoothDevice,String)
boolean android.bluetooth.IBluetoothInputDevice$Stub$Proxy.setPriority(BluetoothDevice,int)
boolean android.bluetooth.IBluetoothInputDevice$Stub$Proxy.setProtocolMode(BluetoothDevice,int)
boolean android.bluetooth.IBluetoothInputDevice$Stub$Proxy.setReport(BluetoothDevice,byte,String)
boolean android.bluetooth.IBluetoothInputDevice$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.bluetooth.IBluetoothPan$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.bluetooth.IBluetoothPbap$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.content.Context.bindService(Intent,ServiceConnection,int,int)
boolean android.content.ContextWrapper.bindService(Intent,ServiceConnection,int,int)
boolean android.content.SyncManager$ActiveSyncContext.bindToSyncAdapter(RegisteredServicesCache$ServiceInfo,int)
boolean android.content.pm.IPackageManager$Stub$Proxy.isPermissionEnforced(String)
boolean android.filterfw.core.FilterGraph.addFilter(Filter)
boolean android.graphics.Matrix$1.setConcat(Matrix,Matrix)
boolean android.graphics.Matrix$1.setPolyToPoly(float[],int,float[],int,int)
boolean android.graphics.Matrix$1.setRectToRect(RectF,RectF,Matrix$ScaleToFit)
boolean android.graphics.Matrix.setRectToRect(RectF,RectF,Matrix$ScaleToFit)
boolean android.hardware.ISerialManager$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.hardware.display.IDisplayManager$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.hardware.input.IInputManager$Stub$Proxy.hasKeys(int,int,int[],boolean[])
boolean android.hardware.input.IInputManager$Stub$Proxy.injectInputEvent(InputEvent,int)
boolean android.hardware.input.IInputManager$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.hardware.usb.IUsbManager$Stub$Proxy.hasDefaults(String,int)
boolean android.inputmethodservice.KeyboardView.onLongPress(Keyboard$Key)
boolean android.location.IGeocodeProvider$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.location.INetInitiatedListener$Stub$Proxy.sendNiResponse(int,int)
boolean android.location.LocationManager.addGpsStatusListener(GpsStatus$Listener)
boolean android.location.LocationManager.addNmeaListener(GpsStatus$NmeaListener)
boolean android.media.AudioManager.isSpeechRecognitionActive()
boolean android.media.AudioService$VolumeStreamState.setIndex(int,int,boolean)
boolean android.media.AudioService.onTransact(int,Parcel,Parcel,int)
boolean android.media.IRingtonePlayer$Stub$Proxy.isPlaying(IBinder)
boolean android.media.ToneGenerator.startTone(int)
boolean android.media.audiofx.AudioEffect.getEnabled()
boolean android.media.audiofx.BassBoost.getStrengthSupported()
boolean android.media.audiofx.Virtualizer.getStrengthSupported()
boolean android.media.videoeditor.MediaArtistNativeHelper.getAudioflag()
boolean android.media.videoeditor.MediaArtistNativeHelper.getGeneratePreview()
boolean android.media.videoeditor.MediaItem.getRegenerateClip()
boolean android.net.BaseNetworkStateTracker.setRadio(boolean)
boolean android.net.CaptivePortalTracker$ActiveNetworkState.processMessage(Message)
boolean android.net.CaptivePortalTracker$DefaultState.processMessage(Message)
boolean android.net.CaptivePortalTracker$DelayedCaptiveCheckState.processMessage(Message)
boolean android.net.CaptivePortalTracker$NoActiveNetworkState.processMessage(Message)
boolean android.net.DhcpStateMachine$DefaultState.processMessage(Message)
boolean android.net.DhcpStateMachine$RunningState.processMessage(Message)
boolean android.net.DhcpStateMachine$StoppedState.processMessage(Message)
boolean android.net.DhcpStateMachine$WaitBeforeRenewalState.processMessage(Message)
boolean android.net.DhcpStateMachine$WaitBeforeStartState.processMessage(Message)
boolean android.net.DummyDataStateTracker.setRadio(boolean)
boolean android.net.EthernetDataTracker.setRadio(boolean)
boolean android.net.INetworkStatsSession$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.net.MobileDataStateTracker.setRadio(boolean)
boolean android.net.NetworkPolicyManager.getRestrictBackground()
boolean android.net.SntpClient.requestTime(String,int)
boolean android.net.nsd.INsdManager$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.net.wifi.SupplicantStateTracker$CompletedState.processMessage(Message)
boolean android.net.wifi.SupplicantStateTracker$DefaultState.processMessage(Message)
boolean android.net.wifi.SupplicantStateTracker$HandshakeState.processMessage(Message)
boolean android.net.wifi.WifiApConfigStore$ActiveState.processMessage(Message)
boolean android.net.wifi.WifiApConfigStore$DefaultState.processMessage(Message)
boolean android.net.wifi.WifiApConfigStore$InactiveState.processMessage(Message)
boolean android.net.wifi.WifiConfigStore.disableNetwork(int,int)
boolean android.net.wifi.WifiConfigStore.enableNetwork(int,boolean)
boolean android.net.wifi.WifiConfigStore.enableNetworkWithoutBroadcast(int,boolean)
boolean android.net.wifi.WifiConfigStore.selectNetwork(int)
boolean android.net.wifi.WifiInfo.getMeteredHint()
boolean android.net.wifi.WifiNative.setBand(int)
boolean android.net.wifi.WifiNative.setBluetoothCoexistenceMode(int)
boolean android.net.wifi.WifiNative.setBluetoothCoexistenceScanMode(boolean)
boolean android.net.wifi.WifiNative.setConcurrencyPriority(String)
boolean android.net.wifi.WifiNative.setConfigMethods(String)
boolean android.net.wifi.WifiNative.setCountryCode(String)
boolean android.net.wifi.WifiNative.setDeviceName(String)
boolean android.net.wifi.WifiNative.setDeviceType(String)
boolean android.net.wifi.WifiNative.setManufacturer(String)
boolean android.net.wifi.WifiNative.setModelName(String)
boolean android.net.wifi.WifiNative.setModelNumber(String)
boolean android.net.wifi.WifiNative.setNetworkVariable(int,String,String)
boolean android.net.wifi.WifiNative.setP2pGroupIdle(String,int)
boolean android.net.wifi.WifiNative.setP2pPowerSave(String,boolean)
boolean android.net.wifi.WifiNative.setP2pSsidPostfix(String)
boolean android.net.wifi.WifiNative.setPersistentReconnect(boolean)
boolean android.net.wifi.WifiNative.setScanMode(boolean)
boolean android.net.wifi.WifiNative.setScanResultHandling(int)
boolean android.net.wifi.WifiNative.setSerialNumber(String)
boolean android.net.wifi.WifiNative.setWfdDeviceInfo(String)
boolean android.net.wifi.WifiNative.setWfdEnable(boolean)
boolean android.net.wifi.WifiStateMachine$CaptivePortalCheckState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$ConnectModeState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$ConnectedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DefaultState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DisconnectedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DisconnectingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverFailedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverLoadedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverLoadingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverStartedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverStartingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverStoppedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverStoppingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverUnloadedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$DriverUnloadingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$L2ConnectedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$ObtainingIpState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$ScanModeState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$SoftApStartedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$SoftApStartingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$SoftApStoppingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$SupplicantStartedState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$SupplicantStartingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$SupplicantStoppingState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$TetheredState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$TetheringState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$VerifyingLinkState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$WaitForP2pDisableState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine$WpsRunningState.processMessage(Message)
boolean android.net.wifi.WifiStateMachine.syncDisableNetwork(AsyncChannel,int)
boolean android.net.wifi.WifiStateMachine.syncEnableNetwork(AsyncChannel,int,boolean)
boolean android.net.wifi.WifiStateMachine.syncRemoveNetwork(AsyncChannel,int)
boolean android.net.wifi.WifiStateTracker.setRadio(boolean)
boolean android.net.wifi.WifiWatchdogStateMachine$ConnectedState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$DefaultState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$OnlineState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState.processMessage(Message)
boolean android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$FrequencyConflictState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$OngoingGroupRemovalState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState.processMessage(Message)
boolean android.net.wifi.p2p.WifiP2pService.onTransact(int,Parcel,Parcel,int)
boolean android.net.wifi.p2p.WifiP2pWfdInfo.setDeviceType(int)
boolean android.os.CommonTimeConfig.getAutoDisable()
boolean android.os.INetworkManagementService$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.os.IPowerManager$Stub$Proxy.isWakeLockLevelSupported(int)
boolean android.os.IUserManager$Stub$Proxy.removeUser(int)
boolean android.os.IUserManager$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.os.PowerManager.isWakeLockLevelSupported(int)
boolean android.os.SELinux.restorecon(File)
boolean android.provider.Settings$System.getShowGTalkServiceStatusForUser(ContentResolver,int)
boolean android.security.KeyStore.put(String,byte[])
boolean android.service.dreams.IDreamManager$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.service.wallpaper.IWallpaperConnection$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl.performAccessibilityAction(Object,View,int,Bundle)
boolean android.support.v4.view.AccessibilityDelegateCompat.performAccessibilityAction(View,int,Bundle)
boolean android.support.v4.view.AccessibilityDelegateCompatJellyBean.performAccessibilityAction(Object,View,int,Bundle)
boolean android.support.v4.view.ViewPager$MyAccessibilityDelegate.performAccessibilityAction(View,int,Bundle)
boolean android.telephony.gsm.SmsManager.updateMessageOnSim(int,int,byte[])
boolean android.test.mock.MockContentResolver.getSyncAutomatically(Account,String)
boolean android.view.ActionMode.getTitleOptionalHint()
boolean android.view.HardwareRenderer.initializeIfNeeded(int,int,Surface)
boolean android.view.IInputFilterHost$Stub.onTransact(int,Parcel,Parcel,int)
boolean android.view.IWindowManager$Stub$Proxy.waitForWindowDrawn(IBinder,IRemoteCallback)
boolean android.view.View$AccessibilityDelegate.performAccessibilityAction(View,int,Bundle)
boolean android.view.View.draw(Canvas,ViewGroup,long)
boolean android.view.View.performAccessibilityAction(int,Bundle)
boolean android.view.View.startDrag(ClipData,View$DragShadowBuilder,Object,int)
boolean android.view.accessibility.AccessibilityInteractionClient.performAccessibilityAction(int,int,long,int,Bundle)
boolean android.view.accessibility.AccessibilityNodeInfo.performAction(int,Bundle)
boolean android.view.accessibility.IAccessibilityManager$Stub$Proxy.sendAccessibilityEvent(AccessibilityEvent,int)
boolean android.webkit.AccessibilityInjector.performAccessibilityAction(int,Bundle)
boolean android.webkit.CallbackProxy.onDownloadStart(String,String,String,String,String,long)
boolean android.webkit.HTML5Audio$IsPrivateBrowsingEnabledGetter.get()
boolean android.webkit.HTML5VideoView.getStartWhenPrepared()
boolean android.webkit.ViewStateSerializer.serializeViewState(OutputStream,WebViewCore$DrawData)
boolean android.webkit.WebBackForwardListClassic.getClearPending()
boolean android.webkit.WebSettings.getMediaPlaybackRequiresUserGesture()
boolean android.webkit.WebSettingsClassic.getAllowContentAccess()
boolean android.webkit.WebSettingsClassic.getAllowFileAccess()
boolean android.webkit.WebSettingsClassic.getAllowFileAccessFromFileURLs()
boolean android.webkit.WebSettingsClassic.getAllowUniversalAccessFromFileURLs()
boolean android.webkit.WebSettingsClassic.getAutoFillEnabled()
boolean android.webkit.WebSettingsClassic.getBlockNetworkImage()
boolean android.webkit.WebSettingsClassic.getBlockNetworkLoads()
boolean android.webkit.WebSettingsClassic.getBuiltInZoomControls()
boolean android.webkit.WebSettingsClassic.getDatabaseEnabled()
boolean android.webkit.WebSettingsClassic.getDisplayZoomControls()
boolean android.webkit.WebSettingsClassic.getDomStorageEnabled()
boolean android.webkit.WebSettingsClassic.getHardwareAccelSkiaEnabled()
boolean android.webkit.WebSettingsClassic.getJavaScriptCanOpenWindowsAutomatically()
boolean android.webkit.WebSettingsClassic.getJavaScriptEnabled()
boolean android.webkit.WebSettingsClassic.getLightTouchEnabled()
boolean android.webkit.WebSettingsClassic.getLoadWithOverviewMode()
boolean android.webkit.WebSettingsClassic.getLoadsImagesAutomatically()
boolean android.webkit.WebSettingsClassic.getMediaPlaybackRequiresUserGesture()
boolean android.webkit.WebSettingsClassic.getNavDump()
boolean android.webkit.WebSettingsClassic.getNeedInitialFocus()
boolean android.webkit.WebSettingsClassic.getPluginsEnabled()
boolean android.webkit.WebSettingsClassic.getSaveFormData()
boolean android.webkit.WebSettingsClassic.getSavePassword()
boolean android.webkit.WebSettingsClassic.getShowVisualIndicator()
boolean android.webkit.WebSettingsClassic.getUseDoubleTree()
boolean android.webkit.WebSettingsClassic.getUseFixedViewport()
boolean android.webkit.WebSettingsClassic.getUseWebViewBackgroundForOverscrollBackground()
boolean android.webkit.WebSettingsClassic.getUseWideViewPort()
boolean android.webkit.WebView.performAccessibilityAction(int,Bundle)
boolean android.webkit.WebView.savePicture(Bundle,File)
boolean android.webkit.WebViewClassic$WebViewInputConnection.performEditorAction(int)
boolean android.webkit.WebViewClassic$WebViewInputConnection.sendKeyEvent(KeyEvent)
boolean android.webkit.WebViewClassic$WebViewInputConnection.setComposingRegion(int,int)
boolean android.webkit.WebViewClassic$WebViewInputConnection.setSelection(int,int)
boolean android.webkit.WebViewClassic.onSavePassword(String,String,String,Message)
boolean android.webkit.WebViewClassic.performAccessibilityAction(int,Bundle)
boolean android.webkit.WebViewClassic.restorePicture(Bundle,File)
boolean android.webkit.WebViewClassic.savePicture(Bundle,File)
boolean android.webkit.WebViewClassic.setFrame(int,int,int,int)
boolean android.webkit.ZoomManager.onNewPicture(WebViewCore$DrawData)
boolean android.widget.AbsListView$ListItemAccessibilityDelegate.performAccessibilityAction(View,int,Bundle)
boolean android.widget.AbsListView.performAccessibilityAction(int,Bundle)
boolean android.widget.AbsListView.performLongPress(View,int,long)
boolean android.widget.AbsSeekBar.performAccessibilityAction(int,Bundle)
boolean android.widget.AutoCompleteTextView.setFrame(int,int,int,int)
boolean android.widget.Gallery.performAccessibilityAction(int,Bundle)
boolean android.widget.GridLayout.getUseDefaultMargins()
boolean android.widget.HorizontalScrollView.performAccessibilityAction(int,Bundle)
boolean android.widget.ImageView.getAdjustViewBounds()
boolean android.widget.ImageView.getCropToPadding()
boolean android.widget.NumberPicker$AccessibilityNodeProviderImpl.performAction(int,int,Bundle)
boolean android.widget.ScrollView.performAccessibilityAction(int,Bundle)
boolean android.widget.TextView.getIncludeFontPadding()
boolean android.widget.ViewAnimator.getAnimateFirstView()
boolean com.adobe.xmp.options.Options.getOption(int)
boolean com.adobe.xmp.options.ParseOptions.getAcceptLatin1()
boolean com.adobe.xmp.options.ParseOptions.getFixControlChars()
boolean com.adobe.xmp.options.ParseOptions.getOmitNormalization()
boolean com.adobe.xmp.options.ParseOptions.getRequireXMPMeta()
boolean com.adobe.xmp.options.ParseOptions.getStrictAliasing()
boolean com.adobe.xmp.options.PropertyOptions.getHasLanguage()
boolean com.adobe.xmp.options.SerializeOptions.getEncodeUTF16BE()
boolean com.adobe.xmp.options.SerializeOptions.getEncodeUTF16LE()
boolean com.adobe.xmp.options.SerializeOptions.getExactPacketLength()
boolean com.adobe.xmp.options.SerializeOptions.getIncludeThumbnailPad()
boolean com.adobe.xmp.options.SerializeOptions.getOmitPacketWrapper()
boolean com.adobe.xmp.options.SerializeOptions.getOmitVersionAttribute()
boolean com.adobe.xmp.options.SerializeOptions.getReadOnlyPacket()
boolean com.adobe.xmp.options.SerializeOptions.getSort()
boolean com.adobe.xmp.options.SerializeOptions.getUseCompactFormat()
boolean com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder.setPriority(BluetoothDevice,int)
boolean com.android.bluetooth.a2dp.A2dpService.connect(BluetoothDevice)
boolean com.android.bluetooth.a2dp.A2dpService.setPriority(BluetoothDevice,int)
boolean com.android.bluetooth.a2dp.A2dpStateMachine$Connected.processMessage(Message)
boolean com.android.bluetooth.a2dp.A2dpStateMachine$Disconnected.processMessage(Message)
boolean com.android.bluetooth.a2dp.A2dpStateMachine$Pending.processMessage(Message)
boolean com.android.bluetooth.btservice.AdapterProperties.setDiscoverableTimeout(int)
boolean com.android.bluetooth.btservice.AdapterProperties.setName(String)
boolean com.android.bluetooth.btservice.AdapterProperties.setScanMode(int)
boolean com.android.bluetooth.btservice.AdapterProperties.setUuids(ParcelUuid[])
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setDiscoverableTimeout(int)
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setName(String)
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setPairingConfirmation(BluetoothDevice,boolean)
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setPasskey(BluetoothDevice,boolean,int,byte[])
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setPin(BluetoothDevice,boolean,int,byte[])
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setRemoteAlias(BluetoothDevice,String)
boolean com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.setScanMode(int,int)
boolean com.android.bluetooth.btservice.AdapterService.enable(boolean)
boolean com.android.bluetooth.btservice.AdapterService.setDiscoverableTimeout(int)
boolean com.android.bluetooth.btservice.AdapterService.setName(String)
boolean com.android.bluetooth.btservice.AdapterService.setPairingConfirmation(BluetoothDevice,boolean)
boolean com.android.bluetooth.btservice.AdapterService.setPasskey(BluetoothDevice,boolean,int,byte[])
boolean com.android.bluetooth.btservice.AdapterService.setPin(BluetoothDevice,boolean,int,byte[])
boolean com.android.bluetooth.btservice.AdapterService.setRemoteAlias(BluetoothDevice,String)
boolean com.android.bluetooth.btservice.AdapterService.setScanMode(int,int)
boolean com.android.bluetooth.btservice.AdapterState$OffState.processMessage(Message)
boolean com.android.bluetooth.btservice.AdapterState$OnState.processMessage(Message)
boolean com.android.bluetooth.btservice.AdapterState$PendingCommandState.processMessage(Message)
boolean com.android.bluetooth.btservice.BondStateMachine$StableState.processMessage(Message)
boolean com.android.bluetooth.hdp.HealthService.registerAppConfiguration(BluetoothHealthAppConfiguration,IBluetoothHealthCallback)
boolean com.android.bluetooth.hfp.AtPhonebook.getCheckingAccessPermission()
boolean com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.setPriority(BluetoothDevice,int)
boolean com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.startScoUsingVirtualVoiceCall(BluetoothDevice)
boolean com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder.startVoiceRecognition(BluetoothDevice)
boolean com.android.bluetooth.hfp.HeadsetService.connect(BluetoothDevice)
boolean com.android.bluetooth.hfp.HeadsetService.setPriority(BluetoothDevice,int)
boolean com.android.bluetooth.hfp.HeadsetService.startScoUsingVirtualVoiceCall(BluetoothDevice)
boolean com.android.bluetooth.hfp.HeadsetStateMachine$AudioOn.processMessage(Message)
boolean com.android.bluetooth.hfp.HeadsetStateMachine$Connected.processMessage(Message)
boolean com.android.bluetooth.hfp.HeadsetStateMachine$Disconnected.processMessage(Message)
boolean com.android.bluetooth.hfp.HeadsetStateMachine$Pending.processMessage(Message)
boolean com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.sendData(BluetoothDevice,String)
boolean com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.setPriority(BluetoothDevice,int)
boolean com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.setProtocolMode(BluetoothDevice,int)
boolean com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder.setReport(BluetoothDevice,byte,String)
boolean com.android.bluetooth.hid.HidService.getProtocolMode(BluetoothDevice)
boolean com.android.bluetooth.hid.HidService.getReport(BluetoothDevice,byte,byte,int)
boolean com.android.bluetooth.hid.HidService.sendData(BluetoothDevice,String)
boolean com.android.bluetooth.hid.HidService.setPriority(BluetoothDevice,int)
boolean com.android.bluetooth.hid.HidService.setProtocolMode(BluetoothDevice,int)
boolean com.android.bluetooth.hid.HidService.setReport(BluetoothDevice,byte,String)
boolean com.android.bluetooth.pbap.BluetoothPbapVcardManager$HandlerForStringBuffer.onEntryCreated(String)
boolean com.android.browser.BaseUi.isTitleBarShowing()
boolean com.android.browser.SnapshotTab.saveViewState(ContentValues)
boolean com.android.browser.TabControl.setCurrentTab(Tab)
boolean com.android.browser.UrlHandler.startActivityForUrl(Tab,String)
boolean com.android.browser.widget.BookmarkThumbnailWidgetService$StateFilter.accept(File,String)
boolean com.android.calendar.AllInOneActivity.onQueryTextSubmit(String)
boolean com.android.calendar.SearchActivity.onQueryTextSubmit(String)
boolean com.android.calendar.Utils.getSharedPreference(Context,String,boolean)
boolean com.android.calendar.alerts.AlertService.generateAlerts(Context,NotificationMgr,AlarmManagerInterface,SharedPreferences,Cursor,long,int)
boolean com.android.calendar.alerts.AlertService.updateAlertNotification(Context)
boolean com.android.calendar.event.EditEventHelper.saveEvent(CalendarEventModel,CalendarEventModel,int)
boolean com.android.calendar.event.EditEventHelper.saveReminders(ArrayList,long,ArrayList,ArrayList,boolean)
boolean com.android.calendar.event.EditEventHelper.saveRemindersWithBackRef(ArrayList,int,ArrayList,ArrayList,boolean)
boolean com.android.camera.CameraSettings.setCameraPictureSize(String,List,Camera$Parameters)
boolean com.android.camera.ComboPreferences.getBoolean(String,boolean)
boolean com.android.camera.FocusOverlayManager.getAeAwbLock()
boolean com.android.camera.IconListPreference.getUseSingleIcon()
boolean com.android.camera.PreviewGestures.dispatchTouch(MotionEvent)
boolean com.android.camera.Storage.updateImage(ContentResolver,Uri,String,Location,int,byte[],int,int)
boolean com.android.commands.am.Am$MyActivityController.activityResuming(String)
boolean com.android.commands.am.Am$MyActivityController.activityStarting(Intent,String)
boolean com.android.commands.am.Am$MyActivityController.appCrashed(String,int,String,String,long,String)
boolean com.android.commands.monkey.Monkey$ActivityController.activityResuming(String)
boolean com.android.commands.monkey.Monkey$ActivityController.activityStarting(Intent,String)
boolean com.android.commands.monkey.Monkey$ActivityController.appCrashed(String,int,String,String,long,String)
boolean com.android.commands.monkey.MonkeyMotionEvent.getIntermediateNote()
boolean com.android.contacts.SpecialCharSequenceMgr.handleAdnEntry(Context,String,EditText)
boolean com.android.contacts.editor.ContactEditorFragment.save(int)
boolean com.android.contacts.list.ContactEntryListAdapter.getDisplayPhotos()
boolean com.android.contacts.list.CustomContactListFilterActivity$GroupDelta.getShouldSync()
boolean com.android.contacts.list.CustomContactListFilterActivity$GroupDelta.getVisible()
boolean com.android.contacts.list.CustomContactListFilterActivity.onChildClick(ExpandableListView,View,int,int,long)
boolean com.android.contacts.model.Contact.getStarred()
boolean com.android.contacts.util.AccountFilterUtil.updateAccountFilterTitleForPeople(View,ContactListFilter,boolean)
boolean com.android.contacts.util.AccountFilterUtil.updateAccountFilterTitleForPhone(View,ContactListFilter,boolean)
boolean com.android.deskclock.Alarms.get24HourMode(Context)
boolean com.android.deskclock.SettingsActivity.onPreferenceChange(Preference,Object)
boolean com.android.email.Controller.isMessagingController(long)
boolean com.android.email.Email.setServicesEnabledSync(Context)
boolean com.android.email.Preferences.getEnableDebugLogging()
boolean com.android.email.Preferences.getEnableExchangeFileLogging()
boolean com.android.email.Preferences.getEnableExchangeLogging()
boolean com.android.email.Preferences.getEnableStrictMode()
boolean com.android.email.Preferences.getForceOneMinuteRefresh()
boolean com.android.email.Preferences.getHasShownRequireManualSync(Context,Account)
boolean com.android.email.Preferences.getInhibitGraphicsAcceleration()
boolean com.android.email.RefreshManager.isRefreshingAnyMailboxListForTest()
boolean com.android.email.RefreshManager.isRefreshingAnyMessageListForTest()
boolean com.android.email.RefreshManager.refreshMailboxList(long)
boolean com.android.email.RefreshManager.sendPendingMessages(long)
boolean com.android.email.SecurityPolicy.wipeExpiredAccounts(Context,Controller)
boolean com.android.email.activity.ActivityHelper.openUrlInMessage(Activity,String,long)
boolean com.android.email.activity.MailboxListFragment.getEnableHighlight()
boolean com.android.email.activity.MessageCompose.actionCompose(Context,String,long)
boolean com.android.email.activity.MessageListFragment.onItemLongClick(AdapterView,View,int,long)
boolean com.android.email.activity.UIControllerOnePane.onUrlInMessageClicked(String)
boolean com.android.email.activity.UIControllerTwoPane.onUrlInMessageClicked(String)
boolean com.android.email.activity.setup.AccountSetupExchangeFragment.setHostAuthFromAutodiscover(HostAuth)
boolean com.android.email.mail.store.imap.ImapList.is(int,String,boolean)
boolean com.android.email.service.AttachmentDownloadService.canPrefetchForAccount(Account,File)
boolean com.android.emailcommon.mail.Message.isMimeType(String)
boolean com.android.emailcommon.service.IAccountService$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.emailcommon.service.IEmailService$Stub$Proxy.createFolder(long,String)
boolean com.android.emailcommon.service.IEmailService$Stub$Proxy.deleteFolder(long,String)
boolean com.android.emailcommon.service.IEmailService$Stub$Proxy.renameFolder(long,String,String)
boolean com.android.emailcommon.service.IEmailService$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.ex.chips.RecipientEditTextView.onTouchEvent(MotionEvent)
boolean com.android.exchange.EasAccountService.tryProvision(EasSyncService)
boolean com.android.exchange.EasOutboxService.tryProvision(EasSyncService)
boolean com.android.exchange.EasSyncService.getValidateRedirect(EasResponse,HostAuth)
boolean com.android.exchange.EasSyncService.tryProvision(EasSyncService)
boolean com.android.exchange.adapter.AccountSyncAdapter.sendLocalChanges(Serializer)
boolean com.android.exchange.adapter.CalendarSyncAdapter.sendLocalChanges(Serializer)
boolean com.android.exchange.adapter.ContactsSyncAdapter.sendLocalChanges(Serializer)
boolean com.android.exchange.adapter.EmailSyncAdapter.sendLocalChanges(Serializer)
boolean com.android.exchange.adapter.ProvisionParser.getRemoteWipe()
boolean com.android.exchange.utility.CalendarUtilities.getDSTCalendars(TimeZone,GregorianCalendar[],GregorianCalendar[])
boolean com.android.gallery3d.app.GalleryActionBar.setSelectedAction(int)
boolean com.android.gallery3d.data.MtpContext.copyAlbum(String,String,List)
boolean com.android.gallery3d.data.MtpContext.copyFile(String,MtpObjectInfo)
boolean com.android.gallery3d.filtershow.imageshow.ImageShow.getDirtyGeometryFlag()
boolean com.android.gallery3d.ui.PhotoView.getFilmMode()
boolean com.android.gallery3d.ui.SlotView.setSlotCount(int)
boolean com.android.gallery3d.util.GalleryUtils.isEditorAvailable(Context,String)
boolean com.android.gallery3d.util.ThreadPool$JobContextStub.setMode(int)
boolean com.android.gallery3d.util.XmpUtilHelper.writeXMPMeta(String,Object)
boolean com.android.inputmethod.accessibility.AccessibilityEntityProvider.performAction(int,int,Bundle)
boolean com.android.inputmethod.keyboard.MainKeyboardView.processMotionEvent(MotionEvent)
boolean com.android.inputmethod.latin.LatinIME$BatchInputUpdater.handleMessage(Message)
boolean com.android.internal.app.IMediaContainerService$Stub$Proxy.checkInternalFreeStorage(Uri,boolean,long)
boolean com.android.internal.app.IMediaContainerService$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindAppWidgetIdIfAllowed(String,int,ComponentName,Bundle)
boolean com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.hasBindAppWidgetPermission(String)
boolean com.android.internal.backup.IBackupTransport$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.location.ILocationProvider$Stub$Proxy.sendExtraCommand(String,Bundle)
boolean com.android.internal.location.ILocationProvider$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.os.BatteryStatsImpl.getIsOnBattery()
boolean com.android.internal.policy.impl.PhoneFallbackEventHandler.onKeyDown(int,KeyEvent)
boolean com.android.internal.policy.impl.PhoneWindowManager.isMusicActive()
boolean com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getMaxBiometricUnlockAttemptsReached()
boolean com.android.internal.policy.impl.keyguard.KeyguardViewStateManager.isBouncing()
boolean com.android.internal.policy.impl.keyguard.PagedView.performAccessibilityAction(int,Bundle)
boolean com.android.internal.preference.YesNoPreference.getValue()
boolean com.android.internal.telephony.CallManager.canConference(Call)
boolean com.android.internal.telephony.CallManager.getMute()
boolean com.android.internal.telephony.CallManager.sendBurstDtmf(String,int,int,Message)
boolean com.android.internal.telephony.CallManager.sendDtmf(char)
boolean com.android.internal.telephony.CallManager.sendUssdResponse(Phone,String)
boolean com.android.internal.telephony.CallManager.startDtmf(char)
boolean com.android.internal.telephony.IccCardProxy.getIccFdnEnabled()
boolean com.android.internal.telephony.IccCardProxy.getIccLockEnabled()
boolean com.android.internal.telephony.IccCardProxy.getIccRecordsLoaded()
boolean com.android.internal.telephony.IccPhoneBookInterfaceManager.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.telephony.ServiceStateTracker.onSignalStrengthResult(AsyncResult,boolean)
boolean com.android.internal.telephony.UiccCardApplication.getIccFdnEnabled()
boolean com.android.internal.telephony.UiccCardApplication.getIccLockEnabled()
boolean com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.telephony.cdma.RuimRecords.getCsimSpnDisplayCondition()
boolean com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager.updateAdnRecordsInEfBySearch(int,String,String,String,String,String)
boolean com.android.internal.telephony.sip.SipPhone.getCallForwardingIndicator()
boolean com.android.internal.telephony.sip.SipPhone.getDataRoamingEnabled()
boolean com.android.internal.telephony.sip.SipPhone.getIccRecordsLoaded()
boolean com.android.internal.telephony.sip.SipPhone.getMessageWaitingIndicator()
boolean com.android.internal.textservice.ISpellCheckerService$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.util.LocalLog.dump(PrintWriter,String,String)
boolean com.android.internal.view.IInputMethodManager$Stub$Proxy.switchToNextInputMethod(IBinder,boolean)
boolean com.android.internal.widget.ILockSettings$Stub$Proxy.checkPassword(byte[],int)
boolean com.android.internal.widget.ILockSettings$Stub$Proxy.checkPattern(byte[],int)
boolean com.android.internal.widget.ILockSettings$Stub$Proxy.getBoolean(String,boolean,int)
boolean com.android.internal.widget.ILockSettings$Stub$Proxy.havePassword(int)
boolean com.android.internal.widget.ILockSettings$Stub$Proxy.havePattern(int)
boolean com.android.internal.widget.ILockSettings$Stub.onTransact(int,Parcel,Parcel,int)
boolean com.android.internal.widget.LockPatternUtils.getPowerButtonInstantlyLocks()
boolean com.android.internal.widget.PasswordEntryKeyboard.setShifted(boolean)
boolean com.android.internal.widget.PasswordEntryKeyboardView.setShifted(boolean)
boolean com.android.launcher2.BubbleTextView.setFrame(int,int,int,int)
boolean com.android.launcher2.CellLayout.animateChildToPosition(View,int,int,int,int,boolean,boolean)
boolean com.android.launcher2.CellLayout.getIsDragOverlapping()
boolean com.android.launcher2.FolderIcon.getTextVisible()
boolean com.android.launcher2.Launcher.onLongClick(View)
boolean com.android.launcher2.Launcher.startActivity(View,Intent,Object)
boolean com.android.launcher2.Launcher.startActivitySafely(View,Intent,Object)
boolean com.android.launcher2.LauncherModel.queueIconToBeChecked(HashMap,ShortcutInfo,Cursor,int)
boolean com.android.launcher2.PagedView.performAccessibilityAction(int,Bundle)
boolean com.android.mms.data.Contact.getSendToVoicemail()
boolean com.android.mms.dom.AttrImpl.getSpecified()
boolean com.android.mms.dom.DocumentImpl.getStrictErrorChecking()
boolean com.android.mms.dom.DocumentImpl.getXmlStandalone()
boolean com.android.mms.dom.events.EventImpl.getBubbles()
boolean com.android.mms.dom.smil.TimeImpl.getResolved()
boolean com.android.mms.model.ImageModel.getMediaResizable()
boolean com.android.mms.model.MediaModel.getMediaResizable()
boolean com.android.mms.transaction.MmsMessageSender.sendMessage(long)
boolean com.android.mms.transaction.SmsMessageSender.sendMessage(long)
boolean com.android.mms.transaction.SmsSingleRecipientSender.sendMessage(long)
boolean com.android.mms.ui.ComposeMessageActivity$43.setViewValue(View,Object,String)
boolean com.android.mms.ui.ConversationList$4.onQueryTextSubmit(String)
boolean com.android.mms.util.BackgroundLoaderManager.addCallback(Uri,ItemLoadedCallback)
boolean com.android.mms.util.DownloadManager.getAutoDownloadState(SharedPreferences)
boolean com.android.mms.util.DraftCache.getSavingDraft()
boolean com.android.nfc.NfcDispatcher$DispatchInfo.tryStartActivity(Intent)
boolean com.android.nfc.NfcDispatcher.tryTech(NfcDispatcher$DispatchInfo,Tag)
boolean com.android.nfc.NfceeAccessControl.check(ApplicationInfo)
boolean com.android.nfc.NfceeAccessControl.check(int,String)
boolean com.android.nfc.P2pLinkManager.handleMessage(Message)
boolean com.android.nfc.dhimpl.NativeNfcManager.getExtendedLengthApdusSupported()
boolean com.android.nfc.dhimpl.NativeNfcManager.setTimeout(int,int)
boolean com.android.nfc.dhimpl.NativeP2pDevice.send(byte[])
boolean com.android.nfc.handover.BluetoothHeadsetHandover.getProfileProxys()
boolean com.android.nfc.ndefpush.NdefPushClient.push(NdefMessage)
boolean com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier.on(ASN1ObjectIdentifier)
boolean com.android.phone.BluetoothPhoneService$3.sendDtmf(int)
boolean com.android.phone.CallFeaturesSetting.onPreferenceChange(Preference,Object)
boolean com.android.phone.CallFeaturesSetting.onPreferenceTreeClick(PreferenceScreen,Preference)
boolean com.android.phone.CallNotifier.getIsCdmaRedialCall()
boolean com.android.phone.CallNotifier.getVoicePrivacyState()
boolean com.android.phone.CdmaPhoneCallState.getAddCallMenuStateAfterCallWaiting()
boolean com.android.phone.EmergencyCallbackModeService.getEmergencyCallbackModeCallState()
boolean com.android.phone.MobileNetworkSettings.onPreferenceChange(Preference,Object)
boolean com.android.phone.OtaUtils.maybeDoOtaCall(Context,Handler,int)
boolean com.android.phone.PhoneGlobals.getRestoreMuteOnInCallResume()
boolean com.android.phone.PhoneInterfaceManager.handlePinMmi(String)
boolean com.android.phone.PhoneInterfaceManager.isDataConnectivityPossible()
boolean com.android.phone.PhoneInterfaceManager.setRadio(boolean)
boolean com.android.phone.PhoneInterfaceManager.supplyPin(String)
boolean com.android.phone.PhoneInterfaceManager.supplyPuk(String,String)
boolean com.android.phone.PhoneUtils.getMute()
boolean com.android.providers.calendar.SQLiteContentProvider.getIsCallerSyncAdapter(Uri)
boolean com.android.providers.contacts.ContactsDatabaseHelper.getUseStrictPhoneNumberComparisonForTest()
boolean com.android.providers.contacts.ContactsDatabaseHelper.updateContactVisible(TransactionContext,long,boolean)
boolean com.android.providers.contacts.ContactsDatabaseHelper.updateContactVisibleOnlyIfChanged(TransactionContext,long)
boolean com.android.providers.contacts.ContactsProvider2.isWritableAccountWithDataSet(String)
boolean com.android.providers.contacts.DataRowHandlerForCommonDataKind.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.contacts.DataRowHandlerForGroupMembership.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.contacts.DataRowHandlerForIdentity.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.contacts.DataRowHandlerForPhoneNumber.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.contacts.DataRowHandlerForPhoto.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.contacts.DataRowHandlerForStructuredName.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.contacts.DataRowHandlerForStructuredPostal.update(SQLiteDatabase,TransactionContext,ContentValues,Cursor,boolean)
boolean com.android.providers.settings.SettingsHelper.restoreValue(String,String)
boolean com.android.server.AlarmManagerService.lookForPackageLocked(String)
boolean com.android.server.AppWidgetService.bindAppWidgetIdIfAllowed(String,int,ComponentName,Bundle)
boolean com.android.server.AppWidgetService.hasBindAppWidgetPermission(String)
boolean com.android.server.AppWidgetServiceImpl.bindAppWidgetIdIfAllowed(String,int,ComponentName,Bundle)
boolean com.android.server.AppWidgetServiceImpl.updateProvidersForPackageLocked(String,Set)
boolean com.android.server.AppWidgetServiceImpl.writeStateToFileLocked(FileOutputStream)
boolean com.android.server.BackupManagerService$PerformFullRestoreTask.installApk(BackupManagerService$FileMetadata,String,InputStream)
boolean com.android.server.BackupManagerService$PerformFullRestoreTask.restoreOneFile(InputStream,byte[])
boolean com.android.server.BackupManagerService.onTransact(int,Parcel,Parcel,int)
boolean com.android.server.BackupManagerService.setBackupPassword(String,String)
boolean com.android.server.BackupManagerService.startConfirmationUi(int,String)
boolean com.android.server.ConnectivityService.getMobileDataEnabled()
boolean com.android.server.ConnectivityService.setRadio(int,boolean)
boolean com.android.server.ConnectivityService.setRadios(boolean)
boolean com.android.server.DevicePolicyManagerService.hasGrantedPolicy(ComponentName,int,int)
boolean com.android.server.DevicePolicyManagerService.resetPassword(String,int,int)
boolean com.android.server.InputMethodManagerService$InputMethodSettings.buildAndPutEnabledInputMethodsStrRemovingIdLocked(StringBuilder,List,String)
boolean com.android.server.InputMethodManagerService.handleMessage(Message)
boolean com.android.server.InputMethodManagerService.notifySuggestionPicked(SuggestionSpan,String,int)
boolean com.android.server.InputMethodManagerService.setCurrentInputMethodSubtype(InputMethodSubtype)
boolean com.android.server.InputMethodManagerService.setInputMethodEnabled(String,boolean)
boolean com.android.server.InputMethodManagerService.setInputMethodEnabledLocked(String,boolean)
boolean com.android.server.IntentResolver.dump(PrintWriter,String,String,String,boolean)
boolean com.android.server.IntentResolver.dumpMap(PrintWriter,String,String,String,Map,String,boolean)
boolean com.android.server.IntentResolverOld.dump(PrintWriter,String,String,String,boolean)
boolean com.android.server.IntentResolverOld.dumpMap(PrintWriter,String,String,String,Map,String,boolean)
boolean com.android.server.LocationManagerService$Receiver.callLocationChangedLocked(Location)
boolean com.android.server.LocationManagerService$Receiver.callProviderEnabledLocked(String,boolean)
boolean com.android.server.LocationManagerService$Receiver.callStatusChangedLocked(String,int,Bundle)
boolean com.android.server.LocationManagerService.onTransact(int,Parcel,Parcel,int)
boolean com.android.server.LocationManagerService.providerMeetsCriteria(String,Criteria)
boolean com.android.server.LocationManagerService.sendExtraCommand(String,String,Bundle)
boolean com.android.server.LocationManagerService.sendNiResponse(int,int)
boolean com.android.server.MountService.onEvent(int,String,String[])
boolean com.android.server.NetworkManagementService.getIpForwardingEnabled()
boolean com.android.server.NsdService$NativeCallbackReceiver.onEvent(int,String,String[])
boolean com.android.server.NsdService$NsdStateMachine$DefaultState.processMessage(Message)
boolean com.android.server.NsdService$NsdStateMachine$DisabledState.processMessage(Message)
boolean com.android.server.ThrottleService$DataRecorder.setNextPeriod(Calendar,Calendar)
boolean com.android.server.WallpaperManagerService.bindWallpaperComponentLocked(ComponentName,boolean,boolean,WallpaperManagerService$WallpaperData,IRemoteCallback)
boolean com.android.server.WallpaperManagerService.hasNamedWallpaper(String)
boolean com.android.server.WifiService.setWifiEnabled(boolean)
boolean com.android.server.accessibility.AccessibilityManagerService$Service.performAccessibilityAction(int,long,int,Bundle,int,IAccessibilityInteractionConnectionCallback,long)
boolean com.android.server.accessibility.AccessibilityManagerService.getAccessibilityFocusBoundsInActiveWindow(Rect)
boolean com.android.server.accessibility.AccessibilityManagerService.getActiveWindowBounds(Rect)
boolean com.android.server.accessibility.AccessibilityManagerService.sendAccessibilityEvent(AccessibilityEvent,int)
boolean com.android.server.am.ActiveServices.dumpService(FileDescriptor,PrintWriter,String,String[],int,boolean)
boolean com.android.server.am.ActiveServices.dumpServicesLocked(FileDescriptor,PrintWriter,String[],int,boolean,boolean,String)
boolean com.android.server.am.ActivityManagerService.bindBackupAgent(ApplicationInfo,int)
boolean com.android.server.am.ActivityManagerService.clearApplicationUserData(String,IPackageDataObserver,int)
boolean com.android.server.am.ActivityManagerService.dumpActivitiesLocked(FileDescriptor,PrintWriter,String[],int,boolean,boolean,String)
boolean com.android.server.am.ActivityManagerService.dumpActivity(FileDescriptor,PrintWriter,String,String[],int,boolean)
boolean com.android.server.am.ActivityManagerService.dumpBroadcastsLocked(FileDescriptor,PrintWriter,String[],int,boolean,String)
boolean com.android.server.am.ActivityManagerService.dumpHeap(String,int,boolean,String,ParcelFileDescriptor)
boolean com.android.server.am.ActivityManagerService.dumpOomLocked(FileDescriptor,PrintWriter,String[],int,boolean)
boolean com.android.server.am.ActivityManagerService.dumpPendingIntentsLocked(FileDescriptor,PrintWriter,String[],int,boolean,String)
boolean com.android.server.am.ActivityManagerService.dumpProcessesLocked(FileDescriptor,PrintWriter,String[],int,boolean,String)
boolean com.android.server.am.ActivityManagerService.dumpProcessesToGc(FileDescriptor,PrintWriter,String[],int,boolean,boolean,String)
boolean com.android.server.am.ActivityManagerService.dumpProvider(FileDescriptor,PrintWriter,String,String[],int,boolean)
boolean com.android.server.am.ActivityManagerService.dumpProvidersLocked(FileDescriptor,PrintWriter,String[],int,boolean,String)
boolean com.android.server.am.ActivityManagerService.killPids(int[],String,boolean)
boolean com.android.server.am.ActivityManagerService.sendPendingBroadcastsLocked(ProcessRecord)
boolean com.android.server.am.ActivityManagerService.startInstrumentation(ComponentName,String,int,Bundle,IInstrumentationWatcher,int)
boolean com.android.server.am.ActivityManagerService.switchUser(int)
boolean com.android.server.am.ActivityManagerService.updateConfigurationLocked(Configuration,ActivityRecord,boolean,boolean)
boolean com.android.server.am.ActivityStack.realStartActivityLocked(ActivityRecord,ProcessRecord,boolean,boolean)
boolean com.android.server.am.BroadcastQueue.dumpLocked(FileDescriptor,PrintWriter,String[],int,boolean,String,boolean)
boolean com.android.server.am.BroadcastQueue.sendPendingBroadcastsLocked(ProcessRecord)
boolean com.android.server.am.ProviderMap.dumpProvider(FileDescriptor,PrintWriter,String,String[],int,boolean)
boolean com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherMasterSM$InitialState.turnOnUpstreamMobileConnection(int)
boolean com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState.turnOnUpstreamMobileConnection(int)
boolean com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState.processMessage(Message)
boolean com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState.turnOnUpstreamMobileConnection(int)
boolean com.android.server.input.PersistentDataStore$InputDeviceState.removeKeyboardLayout(String)
boolean com.android.server.input.PersistentDataStore.setCurrentKeyboardLayout(String,String)
boolean com.android.server.location.LocationProviderProxy.sendExtraCommand(String,Bundle)
boolean com.android.server.location.MockProvider.sendExtraCommand(String,Bundle)
boolean com.android.server.location.PassiveProvider.sendExtraCommand(String,Bundle)
boolean com.android.server.net.NetworkPolicyManagerService.getRestrictBackground()
boolean com.android.server.net.NetworkStatsService.onTransact(int,Parcel,Parcel,int)
boolean com.android.server.pm.PackageManagerService$AsecInstallArgs.matchContainer(String)
boolean com.android.server.pm.PackageManagerService$FileInstallArgs.doRename(int,String,String)
boolean com.android.server.pm.PackageManagerService.addPermissionLocked(PermissionInfo,boolean)
boolean com.android.server.pm.PackageManagerService.performDexOpt(String)
boolean com.android.server.pm.PackageManagerService.setInstallLocation(int)
boolean com.android.server.pm.Settings.disableSystemPackageLPw(String)
boolean com.android.server.pm.Settings.setPackageStoppedStateLPw(String,boolean,boolean,int,int)
boolean com.android.server.pm.UserManagerService.removeUser(int)
boolean com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl.process(EventObject)
boolean com.android.server.usb.UsbService.hasAccessoryPermission(UsbAccessory)
boolean com.android.server.usb.UsbService.hasDefaults(String,int)
boolean com.android.server.usb.UsbService.hasDevicePermission(UsbDevice)
boolean com.android.server.usb.UsbSettingsManager.hasPermission(UsbAccessory)
boolean com.android.server.usb.UsbSettingsManager.hasPermission(UsbDevice)
boolean com.android.server.wm.ScreenRotationAnimation.dismiss(SurfaceSession,long,float,int,int)
boolean com.android.server.wm.ScreenRotationAnimation.setRotationInTransaction(int,SurfaceSession,long,float,int,int)
boolean com.android.server.wm.ViewServer.access$000(Socket,String)
boolean com.android.server.wm.WindowManagerService.dumpWindows(PrintWriter,String,String[],int,boolean)
boolean com.android.server.wm.WindowManagerService.setTokenVisibilityLocked(AppWindowToken,WindowManager$LayoutParams,boolean,int,boolean)
boolean com.android.server.wm.WindowManagerService.updateOrientationFromAppTokensLocked(boolean)
boolean com.android.server.wm.WindowManagerService.updateRotationUncheckedLocked(boolean)
boolean com.android.server.wm.WindowManagerService.viewServerWindowCommand(Socket,String,String)
boolean com.android.systemui.statusbar.BaseStatusBar.inflateViews(NotificationData$Entry,ViewGroup)
boolean com.android.systemui.statusbar.NotificationData$Entry.setUserExpanded(boolean)
boolean com.android.systemui.statusbar.NotificationData.setUserExpanded(View,boolean)
boolean com.android.systemui.statusbar.NotificationData.setUserLocked(View,boolean)
boolean com.android.systemui.statusbar.StatusBarIconView.set(StatusBarIcon)
boolean com.android.systemui.statusbar.policy.NotificationRowLayout.setUserExpandedChild(View,boolean)
boolean com.android.systemui.statusbar.policy.NotificationRowLayout.setUserLockedChild(View,boolean)
boolean com.android.uiautomator.core.InteractionController.sendKey(int,int)
boolean com.android.uiautomator.core.InteractionController.sendKeyAndWaitForEvent(int,int,int,long)
boolean com.android.uiautomator.core.InteractionController.sendText(String)
boolean com.android.uiautomator.core.UiDevice.pressKeyCode(int)
boolean com.android.uiautomator.core.UiDevice.pressKeyCode(int,int)
boolean com.android.uiautomator.core.UiSelector.getBoolean(int)
boolean com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onMediaItemThumbnail(String,String,Bitmap,int,int,Exception)
boolean com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onTransitionThumbnails(String,String,Bitmap[],Exception)
boolean com.android.videoeditor.widgets.HorizontalScrollView.performAccessibilityAction(int,Bundle)
boolean com.android.videoeditor.widgets.MediaItemView.setBitmap(Bitmap,int,int)
boolean com.android.videoeditor.widgets.MediaLinearLayout.setMediaItemThumbnail(String,Bitmap,int,int)
boolean com.android.videoeditor.widgets.MediaLinearLayout.setTransitionThumbnails(String,Bitmap[])
boolean com.android.videoeditor.widgets.OverlayLinearLayout$1.onSingleTapConfirmed(View,int,MotionEvent)
boolean com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay.getDrawOutlineOnly()
boolean com.google.android.apps.lightcycle.sensor.SensorReader.getEkfEnabled()
boolean com.google.android.apps.lightcycle.storage.LocalFileStorageManager.setPanoramaDestination(String)
boolean com.google.android.apps.lightcycle.xmp.XmpUtil.writeXMPMeta(String,XMPMeta)
boolean com.google.android.mms.pdu.PduBody.addPart(PduPart)
boolean com.google.android.mms.util.AbstractCache.put(Object,Object)
boolean com.google.android.mms.util.PduCache.put(Object,Object)
boolean com.google.android.mms.util.PduCache.put(Uri,PduCacheEntry)
boolean com.google.android.picasasync.PicasaSyncHelper$SyncContext.setAccount(String)
boolean com.google.android.picasasync.SyncState.onSyncRequested(SQLiteDatabase,String)
boolean com.google.android.picasasync.UploadsManager.access$1300(UploadsManager,UploadTaskEntry,UploadedEntry,SyncResult)
boolean com.google.common.collect.AbstractMultimap$WrappedList.addAll(int,Collection)
boolean com.google.common.collect.AbstractMultiset.setCount(Object,int,int)
boolean com.google.common.collect.ForwardingMultiset.setCount(Object,int,int)
boolean com.google.common.collect.Multisets$SetMultiset.setCount(Object,int,int)
boolean com.google.common.collect.Multisets$UnmodifiableMultiset.setCount(Object,int,int)
boolean com.google.common.collect.Sets$SetFromMap.add(Object)
boolean com.google.common.collect.TreeMultiset.setCount(Object,int,int)
boolean java.security.cert.PKIXParameters.getPolicyQualifiersRejected()
boolean java.util.HashSet.add(Object)
boolean javax.obex.ClientSession.sendRequest(int,byte[],HeaderSet,PrivateInputStream)
boolean javax.obex.ServerOperation.sendReply(int)
boolean javax.xml.validation.Validator.getFeature(String)
boolean javax.xml.validation.ValidatorHandler.getFeature(String)
boolean org.apache.harmony.xnet.provider.jsse.PinListEntry.getEnforcing()
boolean org.apache.http.params.AbstractHttpParams.getBooleanParameter(String,boolean)
boolean[] android.hardware.input.InputManager.deviceHasKeys(int[])
boolean[] com.android.deskclock.Alarm$DaysOfWeek.getBooleanArray()
byte android.os.CommonTimeConfig.getMasterElectionPriority()
byte com.android.gallery3d.filtershow.filters.ImageFilter.getFilterType()
byte com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams.getFc()
byte com.android.nfc.snep.SnepMessage.getField()
byte com.android.nfc.snep.SnepMessage.getVersion()
byte com.beetstra.jutf7.Base64Util.getChar(int)
byte[] android.content.pm.ContainerEncryptionParams.getMacTag()
byte[] android.database.sqlite.SQLiteConnection.access$500()
byte[] android.drm.DrmInfo.getData()
byte[] android.drm.DrmRights.getData()
byte[] android.drm.DrmUtils.readBytes(File)
byte[] android.drm.DrmUtils.readBytes(String)
byte[] android.drm.ProcessedData.getData()
byte[] android.filterfw.core.SerializedFrame$DirectByteOutputStream.getByteArray()
byte[] android.graphics.YuvImage.getYuvData()
byte[] android.media.Metadata.getByteArray(int)
byte[] android.media.audiofx.AudioEffect.concatArrays(byte[][])
byte[] android.media.audiofx.AudioEffect.intToByteArray(int)
byte[] android.media.audiofx.AudioEffect.shortToByteArray(short)
byte[] android.mtp.MtpDevice.getObject(int,int)
byte[] android.mtp.MtpDevice.getThumbnail(int)
byte[] android.net.SSLCertificateSocketFactory.getNpnSelectedProtocol(Socket)
byte[] android.net.SSLCertificateSocketFactory.toNpnProtocolsList(byte[][])
byte[] android.net.nsd.DnsSdTxtRecord.access$000(DnsSdTxtRecord)
byte[] android.net.nsd.DnsSdTxtRecord.getRawData()
byte[] android.net.wifi.WifiSsid.getOctets()
byte[] android.net.wifi.p2p.nsd.WifiP2pServiceResponse.getRawData()
byte[] android.nfc.tech.IsoDep.transceive(byte[],boolean)
byte[] android.nfc.tech.MifareClassic.transceive(byte[],boolean)
byte[] android.nfc.tech.MifareUltralight.transceive(byte[],boolean)
byte[] android.nfc.tech.Ndef.transceive(byte[],boolean)
byte[] android.nfc.tech.NdefFormatable.transceive(byte[],boolean)
byte[] android.nfc.tech.NfcB.transceive(byte[],boolean)
byte[] android.nfc.tech.NfcBarcode.getBarcode()
byte[] android.nfc.tech.NfcF.transceive(byte[],boolean)
byte[] android.nfc.tech.NfcV.transceive(byte[],boolean)
byte[] android.renderscript.FieldPacker.getData()
byte[] android.security.Credentials.convertToPem(Certificate[])
byte[] android.security.KeyStore.get(String)
byte[] android.security.KeyStore.getPubkey(String)
byte[] android.security.KeyStore.sign(String,byte[])
byte[] android.security.SystemKeyStore.generateNewKey(int,String,String)
byte[] android.security.SystemKeyStore.retrieveKey(String)
byte[] android.telephony.SmsCbEtwsInfo.getPrimaryNotificationSignature()
byte[] android.util.AtomicFile.readFully()
byte[] android.webkit.WebHistoryItemClassic.getFlattenedData()
byte[] com.android.bluetooth.Utils.getByteAddress(BluetoothDevice)
byte[] com.android.bluetooth.Utils.getBytesFromAddress(String)
byte[] com.android.bluetooth.Utils.intToByteArray(int)
byte[] com.android.bluetooth.Utils.uuidToByteArray(ParcelUuid)
byte[] com.android.bluetooth.Utils.uuidsToByteArray(ParcelUuid[])
byte[] com.android.bluetooth.btservice.AdapterProperties.getAddress()
byte[] com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getAddress()
byte[] com.android.bluetooth.pbap.BluetoothPbapAuthenticator.onAuthenticationResponse(byte[])
byte[] com.android.browser.DataUri.getData()
byte[] com.android.browser.SnapshotTab.compressBitmap(Bitmap)
byte[] com.android.browser.homepages.RequestHandler.htmlEncode(String)
byte[] com.android.camera.MosaicFrameProcessor.getFinalMosaicNV21()
byte[] com.android.camera.PhotoModule.access$4802(PhotoModule,byte[])
byte[] com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember.getPhotoByteArray()
byte[] com.android.contacts.model.Contact.getPhotoBinaryData()
byte[] com.android.contacts.model.RawContactDelta$ValuesDelta.getAsByteArray(String)
byte[] com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoto()
byte[] com.android.contacts.model.dataitem.PhotoDataItem.getPhoto()
byte[] com.android.contacts.util.ImageViewDrawableSetter.getCompressedImage()
byte[] com.android.email.mail.store.imap.ImapString.access$000()
byte[] com.android.ex.chips.RecipientEntry.getPhotoBytes()
byte[] com.android.exchange.adapter.Parser.getValueBytes()
byte[] com.android.exchange.adapter.Serializer.toByteArray()
byte[] com.android.exchange.utility.SimpleIcsWriter.getBytes()
byte[] com.android.gallery3d.common.BlobCache.lookup(long)
byte[] com.android.gallery3d.common.Fingerprint.getBytes()
byte[] com.android.gallery3d.common.Utils.getBytes(String)
byte[] com.android.gallery3d.data.MtpClient.getObject(String,int,int)
byte[] com.android.gallery3d.data.MtpClient.getThumbnail(String,int)
byte[] com.android.gallery3d.data.MtpImage.getImageData()
byte[] com.android.gallery3d.exif.ExifData.getCompressedThumbnail()
byte[] com.android.gallery3d.exif.ExifData.getStrip(int)
byte[] com.android.gallery3d.util.GalleryUtils.getBytes(String)
byte[] com.android.internal.app.IBatteryStats$Stub$Proxy.getStatistics()
byte[] com.android.internal.location.GpsNetInitiatedHandler.stringToByteArray(String,boolean)
byte[] com.android.internal.net.VpnProfile.encode()
byte[] com.android.internal.os.BatteryStatsImpl.readFully(FileInputStream)
byte[] com.android.internal.telephony.cdma.RuimRecords.access$000(RuimRecords)
byte[] com.android.internal.telephony.cdma.RuimRecords.access$002(RuimRecords,byte[])
byte[] com.android.internal.telephony.cdma.RuimRecords.access$100(RuimRecords)
byte[] com.android.internal.telephony.cdma.RuimRecords.access$102(RuimRecords,byte[])
byte[] com.android.internal.widget.LockPatternUtils.passwordToHash(String)
byte[] com.android.mms.data.Contact.access$1700(Contact)
byte[] com.android.mms.data.Contact.access$1702(Contact,byte[])
byte[] com.android.mms.model.MediaModel.getData()
byte[] com.android.mms.transaction.HttpUtils.httpConnection(Context,long,String,byte[],int,boolean,String,int)
byte[] com.android.mms.transaction.NotificationTransaction.getPdu(String)
byte[] com.android.mms.transaction.NotificationTransaction.sendPdu(byte[],String)
byte[] com.android.mms.transaction.NotificationTransaction.sendPdu(long,byte[],String)
byte[] com.android.mms.transaction.ReadRecTransaction.getPdu(String)
byte[] com.android.mms.transaction.ReadRecTransaction.sendPdu(byte[],String)
byte[] com.android.mms.transaction.ReadRecTransaction.sendPdu(long,byte[],String)
byte[] com.android.mms.transaction.RetrieveTransaction.getPdu(String)
byte[] com.android.mms.transaction.RetrieveTransaction.sendPdu(byte[],String)
byte[] com.android.mms.transaction.RetrieveTransaction.sendPdu(long,byte[],String)
byte[] com.android.mms.transaction.SendTransaction.getPdu(String)
byte[] com.android.mms.transaction.SendTransaction.sendPdu(byte[],String)
byte[] com.android.mms.transaction.SendTransaction.sendPdu(long,byte[],String)
byte[] com.android.mms.transaction.Transaction.getPdu(String)
byte[] com.android.mms.transaction.Transaction.sendPdu(byte[])
byte[] com.android.mms.transaction.Transaction.sendPdu(byte[],String)
byte[] com.android.mms.transaction.Transaction.sendPdu(long,byte[])
byte[] com.android.mms.transaction.Transaction.sendPdu(long,byte[],String)
byte[] com.android.mms.transaction.TransactionBundle.getPushData()
byte[] com.android.mms.ui.UriImage.getResizedImageData(int,int,int,int,int,Uri,Context)
byte[] com.android.mms.util.BlobCache.lookup(long)
byte[] com.android.mms.util.ImageCacheService.getBytes(String)
byte[] com.android.nfc.LlcpPacket.getDataBuffer()
byte[] com.android.nfc.NfcService.doTransceive(int,byte[])
byte[] com.android.nfc.NfcService.doTransceiveNoLock(int,byte[])
byte[] com.android.nfc.dhimpl.NativeNfcTag.getUid()
byte[] com.android.nfc.dhimpl.NativeNfcTag.readNdef()
byte[] com.android.nfc.dhimpl.NativeNfcTag.transceive(byte[],boolean,int[])
byte[] com.android.nfc.dhimpl.NativeP2pDevice.getGeneralBytes()
byte[] com.android.nfc.dhimpl.NativeP2pDevice.receive()
byte[] com.android.nfc.dhimpl.NativeP2pDevice.transceive(byte[])
byte[] com.android.nfc.handover.HandoverManager.addressToReverseBytes(String)
byte[] com.android.nfc.ndefpush.NdefPushProtocol.toByteArray()
byte[] com.android.nfc.snep.SnepMessage.toByteArray()
byte[] com.android.org.bouncycastle.asn1.ASN1Object.getEncoded()
byte[] com.android.org.bouncycastle.asn1.ASN1Object.getEncoded(String)
byte[] com.android.org.bouncycastle.asn1.ASN1OctetString.getOctets()
byte[] com.android.org.bouncycastle.asn1.BEROctetString.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERApplicationSpecific.getContents()
byte[] com.android.org.bouncycastle.asn1.DERBitString.getBytes()
byte[] com.android.org.bouncycastle.asn1.DERBitString.getBytes(int)
byte[] com.android.org.bouncycastle.asn1.DERGeneralString.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERIA5String.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERNumericString.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERObjectIdentifier.getBody()
byte[] com.android.org.bouncycastle.asn1.DERPrintableString.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERT61String.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERUniversalString.getOctets()
byte[] com.android.org.bouncycastle.asn1.DERVisibleString.getOctets()
byte[] com.android.org.bouncycastle.asn1.DefiniteLengthInputStream.toByteArray()
byte[] com.android.org.bouncycastle.util.encoders.Base64.decode(String)
byte[] com.android.org.bouncycastle.util.encoders.Base64.decode(byte[])
byte[] com.android.org.bouncycastle.util.encoders.Base64.encode(byte[])
byte[] com.android.org.bouncycastle.util.encoders.Hex.decode(String)
byte[] com.android.org.bouncycastle.util.encoders.Hex.decode(byte[])
byte[] com.android.org.bouncycastle.util.encoders.Hex.encode(byte[],int,int)
byte[] com.android.org.bouncycastle.util.io.pem.PemObject.getContent()
byte[] com.android.providers.contacts.PhotoProcessor.getDisplayPhotoBytes()
byte[] com.android.providers.contacts.PhotoProcessor.getThumbnailPhotoBytes()
byte[] com.android.providers.downloads.DrmConvertSession.convert(byte[],int)
byte[] com.android.providers.settings.SettingsHelper.getLocaleData()
byte[] com.android.server.am.BatteryStatsService.getStatistics()
byte[] com.android.server.am.UsageStatsService.readFully(FileInputStream)
byte[] com.android.server.location.GpsXtraDownloader.doDownload(String,boolean,String,int)
byte[] com.android.server.location.GpsXtraDownloader.downloadXtraData()
byte[] com.android.vcard.VCardProperty.getByteValue()
byte[] com.android.vcard.VCardUtils$QuotedPrintableCodecPort.decodeQuotedPrintable(byte[])
byte[] com.google.android.mms.pdu.AcknowledgeInd.getTransactionId()
byte[] com.google.android.mms.pdu.Base64.discardNonBase64(byte[])
byte[] com.google.android.mms.pdu.DeliveryInd.getMessageId()
byte[] com.google.android.mms.pdu.EncodedStringValue.getTextString()
byte[] com.google.android.mms.pdu.NotificationInd.getContentLocation()
byte[] com.google.android.mms.pdu.NotificationInd.getMessageClass()
byte[] com.google.android.mms.pdu.NotificationInd.getTransactionId()
byte[] com.google.android.mms.pdu.NotifyRespInd.getTransactionId()
byte[] com.google.android.mms.pdu.PduComposer.make()
byte[] com.google.android.mms.pdu.PduHeaders.getTextString(int)
byte[] com.google.android.mms.pdu.PduParser.getWapString(ByteArrayInputStream,int)
byte[] com.google.android.mms.pdu.PduPart.getContentDisposition()
byte[] com.google.android.mms.pdu.PduPart.getContentId()
byte[] com.google.android.mms.pdu.PduPart.getContentLocation()
byte[] com.google.android.mms.pdu.PduPart.getContentTransferEncoding()
byte[] com.google.android.mms.pdu.PduPart.getContentType()
byte[] com.google.android.mms.pdu.PduPart.getData()
byte[] com.google.android.mms.pdu.PduPart.getFilename()
byte[] com.google.android.mms.pdu.PduPart.getName()
byte[] com.google.android.mms.pdu.PduPersister.getBytes(String)
byte[] com.google.android.mms.pdu.QuotedPrintable.decodeQuotedPrintable(byte[])
byte[] com.google.android.mms.pdu.ReadOrigInd.getMessageId()
byte[] com.google.android.mms.pdu.ReadRecInd.getMessageId()
byte[] com.google.android.mms.pdu.RetrieveConf.getContentType()
byte[] com.google.android.mms.pdu.RetrieveConf.getMessageClass()
byte[] com.google.android.mms.pdu.RetrieveConf.getMessageId()
byte[] com.google.android.mms.pdu.RetrieveConf.getTransactionId()
byte[] com.google.android.mms.pdu.SendConf.getMessageId()
byte[] com.google.android.mms.pdu.SendConf.getTransactionId()
byte[] com.google.android.mms.pdu.SendReq.getContentType()
byte[] com.google.android.mms.pdu.SendReq.getMessageClass()
byte[] com.google.android.mms.pdu.SendReq.getTransactionId()
byte[] com.google.android.mms.util.DrmConvertSession.convert(byte[],int)
byte[] com.googlecode.mp4parser.AbstractBox.getUserType()
byte[] java.security.cert.TrustAnchor.getNameConstraints()
byte[] java.security.spec.EllipticCurve.getSeed()
byte[] javax.crypto.ExemptionMechanism.genExemptionBlob()
byte[] javax.obex.ApplicationParameter.getAPPparam()
byte[] javax.obex.ObexHelper.createHeader(HeaderSet,boolean)
byte[] javax.obex.ObexHelper.getTagValue(byte,byte[])
byte[] javax.obex.ObexHelper.updateHeaderSet(HeaderSet,byte[])
byte[] javax.obex.PasswordAuthentication.getPassword()
byte[] javax.obex.PasswordAuthentication.getUserName()
byte[] javax.obex.PrivateOutputStream.readBytes(int)
byte[] org.apache.harmony.security.pkcs7.SignerInfo.access$600(SignerInfo)
byte[] org.apache.harmony.security.x509.AuthorityKeyIdentifier.access$000(AuthorityKeyIdentifier)
byte[] org.apache.harmony.security.x509.AuthorityKeyIdentifier.getKeyIdentifier()
byte[] org.apache.harmony.security.x509.Certificate.access$300(Certificate)
byte[] org.apache.harmony.security.x509.CertificateList.access$300(CertificateList)
byte[] org.apache.harmony.security.x509.Extension.access$300(Extension)
byte[] org.apache.harmony.security.x509.GeneralName.access$202(GeneralName,byte[])
byte[] org.apache.harmony.security.x509.OtherName.access$200(OtherName)
byte[] org.apache.harmony.security.x509.SubjectKeyIdentifier.getKeyIdentifier()
byte[] org.apache.harmony.security.x509.SubjectPublicKeyInfo.access$200(SubjectPublicKeyInfo)
byte[] org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getEncoded()
byte[] org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getEncoded()
byte[] org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.getNpnSelectedProtocol()
byte[] org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream.access$300(SSLSocketInputStream)
byte[] org.apache.http.util.EncodingUtils.getAsciiBytes(String)
byte[] org.apache.http.util.EncodingUtils.getBytes(String,String)
byte[] org.apache.james.mime4j.decoder.DecoderUtil.decodeBase64(String)
byte[] org.apache.james.mime4j.decoder.DecoderUtil.decodeBaseQuotedPrintable(String)
byte[][] com.android.nfc.dhimpl.NativeNfcManager.getWipeApdus()
char[] android.text.method.HideReturnsTransformationMethod.getOriginal()
char[] android.text.method.HideReturnsTransformationMethod.getReplacement()
char[] com.android.contacts.list.ContactEntryListAdapter.getUpperCaseQueryString()
char[] com.android.phone.DTMFTwelveKeyDialer$DTMFKeyListener.getAcceptedChars()
char[] java.security.KeyStoreSpi.getPasswordFromCallBack(KeyStore$ProtectionParameter)
double android.location.Geofence.getLatitude()
double android.location.Geofence.getLongitude()
double android.media.Metadata.getDouble(int)
double com.android.browser.provider.BrowserProvider$MySuggestionCursor.getDouble(int)
double com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getDouble(int)
double com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getDouble(int)
double com.android.contacts.calllog.ExtendedCursor.getDouble(int)
double com.android.gallery3d.picasasource.PicasaSource.getLatitude(MediaObject)
double com.android.gallery3d.picasasource.PicasaSource.getLongitude(MediaObject)
double com.android.internal.os.PowerProfile.getAveragePower(String)
double com.android.internal.os.PowerProfile.getAveragePower(String,int)
double com.android.internal.os.PowerProfile.getBatteryCapacity()
double com.android.mms.dom.smil.SmilPlayer$TimelineEntry.getOffsetTime()
double com.android.mms.dom.smil.TimeImpl.getOffset()
double com.android.mms.dom.smil.TimeImpl.getResolvedOffset()
double com.android.providers.contacts.ReorderingCursorWrapper.getDouble(int)
double com.android.server.location.GeofenceState.getDistanceToBoundary()
double com.coremedia.iso.boxes.MovieHeaderBox.getRate()
double com.coremedia.iso.boxes.TrackHeaderBox.getHeight()
double com.coremedia.iso.boxes.TrackHeaderBox.getWidth()
double com.google.android.apps.lightcycle.math.Matrix3x3d.get(int,int)
double com.google.android.apps.lightcycle.sensor.OrientationEKF.getHeadingDegrees()
double com.google.android.apps.lightcycle.sensor.SensorReader.getHeadingDegrees()
double com.googlecode.mp4parser.authoring.TrackMetaData.getHeight()
double com.googlecode.mp4parser.authoring.TrackMetaData.getWidth()
double org.apache.http.params.AbstractHttpParams.getDoubleParameter(String,double)
double[] com.google.android.apps.lightcycle.sensor.OrientationEKF.getGLMatrix()
float android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.findAccessibilityNodeInfoByAccessibilityId(int,long,int,IAccessibilityInteractionConnectionCallback,int,long)
float android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.findAccessibilityNodeInfoByViewId(int,long,int,int,IAccessibilityInteractionConnectionCallback,long)
float android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.findAccessibilityNodeInfosByText(int,long,String,int,IAccessibilityInteractionConnectionCallback,long)
float android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.findFocus(int,long,int,int,IAccessibilityInteractionConnectionCallback,long)
float android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy.focusSearch(int,long,int,int,IAccessibilityInteractionConnectionCallback,long)
float android.animation.ValueAnimator.getDurationScale()
float android.filterfw.core.KeyValueMap.getFloat(String)
float android.filterfw.geometry.Quad.getBoundingHeight()
float android.filterfw.geometry.Quad.getBoundingWidth()
float android.filterfw.geometry.Rectangle.getHeight()
float android.filterfw.geometry.Rectangle.getWidth()
float android.filterpacks.performance.Throughput.getFramesPerSecond()
float android.filterpacks.performance.Throughput.getNanosPerPixel()
float android.gesture.Gesture.getLength()
float android.location.Geofence.getRadius()
float android.location.LocationRequest.getSmallestDisplacement()
float android.media.AudioTrack.getMaxVolume()
float android.media.AudioTrack.getMinVolume()
float android.provider.Settings$Global.getFloat(ContentResolver,String)
float android.provider.Settings$Global.getFloat(ContentResolver,String,float)
float android.provider.Settings$Secure.getFloatForUser(ContentResolver,String,float,int)
float android.provider.Settings$Secure.getFloatForUser(ContentResolver,String,int)
float android.provider.Settings$System.getFloatForUser(ContentResolver,String,float,int)
float android.provider.Settings$System.getFloatForUser(ContentResolver,String,int)
float android.renderscript.Matrix2f.get(int,int)
float android.renderscript.Matrix3f.get(int,int)
float android.renderscript.Matrix4f.get(int,int)
float android.speech.tts.TextToSpeechService$SpeechItem.getFloatParam(String,float)
float android.speech.tts.TextToSpeechService$SpeechItem.getPan()
float android.speech.tts.TextToSpeechService$SpeechItem.getVolume()
float android.support.v4.view.PagerAdapter.getPageWidth(int)
float android.text.Layout.measurePara(TextPaint,CharSequence,int,int)
float android.text.MeasuredText.addStyleRun(TextPaint,MetricAffectingSpan[],int,Paint$FontMetricsInt)
float android.view.IWindowManager$Stub$Proxy.getWindowCompatibilityScale(IBinder)
float android.view.PointerIcon.getHotSpotX()
float android.view.PointerIcon.getHotSpotY()
float android.view.VelocityTracker$Estimator.getXCoeff(int)
float android.view.VelocityTracker$Estimator.getYCoeff(int)
float android.view.View.getCameraDistance()
float android.webkit.WebView$PrivateAccess.getHorizontalScrollFactor()
float android.webkit.WebView$PrivateAccess.getVerticalScrollFactor()
float android.webkit.WebViewClassic$FocusTransitionDrawable.getProgress()
float android.webkit.WebViewClassic.getDefaultZoomScale()
float android.webkit.WebViewClassic.getScale()
float android.webkit.WebViewClassic.getZoomOverviewScale()
float android.webkit.WebViewCore.getFixedDisplayDensity(Context)
float android.widget.TextView$Marquee.getMaxFadeScroll()
float android.widget.TextView$Marquee.getScroll()
float android.widget.TextView.getLineSpacingExtra()
float android.widget.TextView.getLineSpacingMultiplier()
float android.widget.TextView.getShadowDx()
float android.widget.TextView.getShadowDy()
float android.widget.TextView.getShadowRadius()
float com.android.browser.BrowserSettings.getInvertedContrast()
float com.android.browser.provider.BrowserProvider$MySuggestionCursor.getFloat(int)
float com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getFloat(int)
float com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getFloat(int)
float com.android.browser.view.PieItem.getAlpha()
float com.android.browser.view.PieItem.getAnimationAngle()
float com.android.browser.view.PieItem.getStart()
float com.android.browser.view.PieItem.getStartAngle()
float com.android.browser.view.PieItem.getSweep()
float com.android.browser.view.ScrollerView.getBottomFadingEdgeStrength()
float com.android.browser.view.ScrollerView.getTopFadingEdgeStrength()
float com.android.calendar.DayView$ScrollInterpolator.getInterpolation(float)
float com.android.camera.CameraScreenNail.getAlpha()
float com.android.camera.ComboPreferences.getFloat(String,float)
float com.android.camera.ui.PieItem.getAnimationAngle()
float com.android.camera.ui.PieItem.getCenter()
float com.android.camera.ui.PieItem.getStartAngle()
float com.android.camera.ui.PieItem.getSweep()
float com.android.camera.ui.PieRenderer$LinearAnimation.getValue()
float com.android.contacts.calllog.ExtendedCursor.getFloat(int)
float com.android.contacts.detail.ContactDetailTabCarousel.getStoredYCoordinateForTab(int)
float com.android.contacts.widget.PinnedHeaderListView.getTopFadingEdgeStrength()
float com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1.getInterpolation(float)
float com.android.deskclock.timer.CountingTimerView$UnsignedTime.calcTotalWidth(String)
float com.android.deskclock.timer.CountingTimerView$UnsignedTime.getLabelWidth()
float com.android.deskclock.timer.CountingTimerView$UnsignedTime.getWidth()
float com.android.deskclock.widget.multiwaveview.Ease$Cubic$1.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Cubic$2.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Cubic$3.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Linear$1.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quad$1.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quad$2.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quad$3.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quart$1.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quart$2.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quart$3.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quint$1.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quint$2.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Quint$3.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Sine$1.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Sine$2.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.Ease$Sine$3.getInterpolation(float)
float com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager.getAlpha()
float com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager.getRadius()
float com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager.getX()
float com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager.getY()
float com.android.deskclock.widget.multiwaveview.PointCloud$WaveManager.getAlpha()
float com.android.deskclock.widget.multiwaveview.PointCloud$WaveManager.getRadius()
float com.android.deskclock.widget.multiwaveview.PointCloud.getScale()
float com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.getAlpha()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getAlpha()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getPositionX()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getPositionY()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getScaleX()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getScaleY()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getX()
float com.android.deskclock.widget.multiwaveview.TargetDrawable.getY()
float com.android.ex.variablespeed.EngineParameters.getInitialRate()
float com.android.ex.variablespeed.EngineParameters.getWindowDuration()
float com.android.ex.variablespeed.EngineParameters.getWindowOverlapDuration()
float com.android.gallery3d.anim.FloatAnimation.get()
float com.android.gallery3d.common.OverScroller.getCurrVelocity()
float com.android.gallery3d.filtershow.FilterShowActivity.getPixelsFromDip(float)
float com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet.getAngle()
float com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getRotation()
float com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getScaleFactor()
float com.android.gallery3d.filtershow.imageshow.GeometryMetadata.getStraightenRotation()
float com.android.gallery3d.filtershow.imageshow.ImageGeometry.getCurrentTouchAngle()
float com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalRotation()
float com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalScale()
float com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalStraighten()
float com.android.gallery3d.filtershow.imageshow.ImageTinyPlanet.getCurrentTouchAngle()
float com.android.gallery3d.filtershow.presets.ImagePreset.getScaleFactor()
float com.android.gallery3d.ui.CropView$AnimationController.getScale()
float com.android.gallery3d.ui.EdgeAnimation.getValue()
float com.android.gallery3d.ui.FadeTexture.getRatio()
float com.android.gallery3d.ui.GLCanvasImpl.getAlpha()
float com.android.gallery3d.ui.GLPaint.getLineWidth()
float com.android.gallery3d.ui.PhotoView$ZInterpolator.getInterpolation(float)
float com.android.gallery3d.ui.PositionController.getFilmRatio()
float com.android.gallery3d.ui.PositionController.getImageScale()
float com.android.gallery3d.ui.ScrollerHelper.getCurrVelocity()
float com.android.inputmethod.keyboard.KeyboardView.getLabelWidth(String,Paint)
float com.android.inputmethod.keyboard.internal.KeyboardRow.getDefaultKeyWidth()
float com.android.inputmethod.keyboard.internal.KeyboardRow.getKeyWidth(TypedArray)
float com.android.inputmethod.keyboard.internal.KeyboardRow.getKeyWidth(TypedArray,float)
float com.android.inputmethod.keyboard.internal.KeyboardRow.getKeyX(TypedArray)
float com.android.inputmethod.keyboard.internal.TouchPositionCorrection.getRadius(int)
float com.android.inputmethod.keyboard.internal.TouchPositionCorrection.getX(int)
float com.android.inputmethod.keyboard.internal.TouchPositionCorrection.getY(int)
float com.android.inputmethod.latin.ResourceUtils.getDimensionOrFraction(TypedArray,int,int,float)
float com.android.inputmethod.latin.ResourceUtils.getFraction(TypedArray,int)
float com.android.inputmethod.latin.ResourceUtils.getFraction(TypedArray,int,float)
float com.android.internal.os.ProcessStats.getTotalCpuPercent()
float com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable.getScale()
float com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getBackgroundAlpha()
float com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getBackgroundAlphaMultiplier()
float com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getContentAlpha()
float com.android.internal.policy.impl.keyguard.KeyguardWidgetPager$ZInterpolator.getInterpolation(float)
float com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.getAlphaForPage(int,int,boolean)
float com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.getOutlineAlphaForPage(int,int,boolean)
float com.android.internal.policy.impl.keyguard.PagedView$10.getInterpolation(float)
float com.android.internal.policy.impl.keyguard.PagedView$ScrollInterpolator.getInterpolation(float)
float com.android.internal.policy.impl.keyguard.PagedView.distanceInfluenceForSnapDuration(float)
float com.android.internal.policy.impl.keyguard.PagedView.getBoundedScrollProgress(int,View,int)
float com.android.internal.policy.impl.keyguard.PagedView.getMaxScrollProgress()
float com.android.internal.policy.impl.keyguard.PagedView.getScrollProgress(int,View,int)
float com.android.internal.policy.impl.keyguard.PagedView.maxOverScroll()
float com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$2.getInterpolation(float)
float com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$3.getInterpolation(float)
float com.android.internal.widget.DrawableHolder.getAlpha()
float com.android.internal.widget.DrawableHolder.getScaleX()
float com.android.internal.widget.DrawableHolder.getScaleY()
float com.android.internal.widget.DrawableHolder.getX()
float com.android.internal.widget.DrawableHolder.getY()
float com.android.internal.widget.multiwaveview.Ease$Cubic$1.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Cubic$2.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Cubic$3.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Linear$1.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quad$1.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quad$2.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quad$3.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quart$1.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quart$2.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quart$3.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quint$1.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quint$2.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Quint$3.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Sine$1.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Sine$2.getInterpolation(float)
float com.android.internal.widget.multiwaveview.Ease$Sine$3.getInterpolation(float)
float com.android.internal.widget.multiwaveview.PointCloud$GlowManager.getAlpha()
float com.android.internal.widget.multiwaveview.PointCloud$GlowManager.getRadius()
float com.android.internal.widget.multiwaveview.PointCloud$GlowManager.getX()
float com.android.internal.widget.multiwaveview.PointCloud$GlowManager.getY()
float com.android.internal.widget.multiwaveview.PointCloud$WaveManager.getAlpha()
float com.android.internal.widget.multiwaveview.PointCloud$WaveManager.getRadius()
float com.android.internal.widget.multiwaveview.PointCloud.getScale()
float com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.getAlpha()
float com.android.internal.widget.multiwaveview.TargetDrawable.getAlpha()
float com.android.internal.widget.multiwaveview.TargetDrawable.getPositionX()
float com.android.internal.widget.multiwaveview.TargetDrawable.getPositionY()
float com.android.internal.widget.multiwaveview.TargetDrawable.getScaleX()
float com.android.internal.widget.multiwaveview.TargetDrawable.getScaleY()
float com.android.internal.widget.multiwaveview.TargetDrawable.getX()
float com.android.internal.widget.multiwaveview.TargetDrawable.getY()
float com.android.launcher2.CellLayout.getBackgroundAlpha()
float com.android.launcher2.CellLayout.getChildrenScale()
float com.android.launcher2.CellLayout.getDistanceFromCell(float,float,int[])
float com.android.launcher2.DeleteDropTarget$3.getInterpolation(float)
float com.android.launcher2.DeleteDropTarget$5.getInterpolation(float)
float com.android.launcher2.DragLayer.getDescendantCoordRelativeToSelf(View,int[])
float com.android.launcher2.DragLayer.getDescendantRectRelativeToSelf(View,Rect)
float com.android.launcher2.DragLayer.getLocationInDragLayer(View,int[])
float com.android.launcher2.DragView.getInitialScale()
float com.android.launcher2.Folder.getPivotXForIconAnimation()
float com.android.launcher2.Folder.getPivotYForIconAnimation()
float com.android.launcher2.FolderIcon$FolderRingAnimator.getInnerRingSize()
float com.android.launcher2.FolderIcon$FolderRingAnimator.getOuterRingSize()
float com.android.launcher2.LauncherApplication.getScreenDensity()
float com.android.launcher2.PagedView$ScrollInterpolator.getInterpolation(float)
float com.android.launcher2.PagedView.distanceInfluenceForSnapDuration(float)
float com.android.launcher2.PagedView.getScrollProgress(int,View,int)
float com.android.launcher2.SmoothPagedView$OvershootInterpolator.getInterpolation(float)
float com.android.launcher2.Workspace$InverseZInterpolator.getInterpolation(float)
float com.android.launcher2.Workspace$WallpaperOffsetInterpolator.getCurrX()
float com.android.launcher2.Workspace$WallpaperOffsetInterpolator.getCurrY()
float com.android.launcher2.Workspace$ZInterpolator.getInterpolation(float)
float com.android.launcher2.Workspace$ZoomInInterpolator.getInterpolation(float)
float com.android.launcher2.Workspace$ZoomOutInterpolator.getInterpolation(float)
float com.android.launcher2.Workspace.getBackgroundAlpha()
float com.android.launcher2.Workspace.getChildrenOutlineAlpha()
float com.android.mms.dom.smil.ElementParallelTimeContainerImpl.getDur()
float com.android.mms.dom.smil.ElementParallelTimeContainerImpl.getImplicitDuration()
float com.android.mms.dom.smil.ElementSequentialTimeContainerImpl.getDur()
float com.android.mms.dom.smil.ElementTimeImpl.getDur()
float com.android.mms.dom.smil.SmilDocumentImpl.getDur()
float com.android.mms.dom.smil.SmilMediaElementImpl$1.getDur()
float com.android.mms.dom.smil.SmilMediaElementImpl.getDur()
float com.android.mms.dom.smil.SmilParElementImpl.getDur()
float com.android.mms.ui.QuickContactDivot.getCloseOffset()
float com.android.nfc.SendUi.getDegreesForRotation(int)
float com.android.providers.contacts.ReorderingCursorWrapper.getFloat(int)
float com.android.providers.contacts.aggregation.util.NameDistance.getDistance(byte[],byte[])
float com.android.server.accessibility.AccessibilityManagerService$Service.findAccessibilityNodeInfosByText(int,long,String,int,IAccessibilityInteractionConnectionCallback,long)
float com.android.server.accessibility.ScreenMagnifier$MagnificationController.getMagnifiedRegionCenterX()
float com.android.server.accessibility.ScreenMagnifier$MagnificationController.getMagnifiedRegionCenterY()
float com.android.server.accessibility.ScreenMagnifier$MagnificationController.getScale()
float com.android.server.accessibility.ScreenMagnifier$MagnificationController.getScaledOffsetX()
float com.android.server.accessibility.ScreenMagnifier$MagnificationController.getScaledOffsetY()
float com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getLastReceivedUpPointerDownX()
float com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getLastReceivedUpPointerDownY()
float com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getReceivedPointerDownX(int)
float com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getReceivedPointerDownY(int)
float com.android.server.accessibility.TouchExplorer$SendHoverDelayed.getX()
float com.android.server.accessibility.TouchExplorer$SendHoverDelayed.getY()
float com.android.server.power.DisplayPowerState.getElectronBeamLevel()
float com.android.server.wm.WindowManagerService$4.getInterpolation(float)
float com.android.server.wm.WindowManagerService.getAnimationScale(int)
float com.android.server.wm.WindowManagerService.getWindowCompatibilityScale(IBinder)
float com.android.systemui.ExpandHelper$ViewScaler.getHeight()
float com.android.systemui.screenshot.GlobalScreenshot$10.getInterpolation(float)
float com.android.systemui.screenshot.GlobalScreenshot$4.getInterpolation(float)
float com.android.systemui.screenshot.GlobalScreenshot$5.getInterpolation(float)
float com.android.systemui.statusbar.phone.PanelView$FlingTracker.getXVelocity()
float com.android.systemui.statusbar.phone.PanelView$FlingTracker.getYVelocity()
float com.android.systemui.statusbar.phone.PanelView.getExpandedFraction()
float com.android.systemui.statusbar.phone.PanelView.getExpandedHeight()
float com.android.videoeditor.widgets.HorizontalScrollView.getLeftFadingEdgeStrength()
float com.android.videoeditor.widgets.HorizontalScrollView.getRightFadingEdgeStrength()
float com.android.videoeditor.widgets.ImageViewTouchBase.getMaxZoom()
float com.android.videoeditor.widgets.ImageViewTouchBase.getScale()
float com.coremedia.iso.boxes.MovieHeaderBox.getVolume()
float com.coremedia.iso.boxes.TrackHeaderBox.getVolume()
float com.google.android.apps.lightcycle.camera.CameraUtility.getFieldOfView()
float com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.getReportedHorizontalFovDegrees()
float com.google.android.apps.lightcycle.camera.TextureCameraPreview.getReportedHorizontalFovDegrees()
float com.google.android.apps.lightcycle.panorama.DeviceManager.getCameraFieldOfViewDegrees(float)
float com.google.android.apps.lightcycle.panorama.DeviceManager.getOpenGlDefaultFieldOfViewDegrees()
float com.google.android.apps.lightcycle.panorama.DeviceManager.getOpenGlMaxFieldOfViewDegrees()
float com.google.android.apps.lightcycle.panorama.DeviceManager.getOpenGlMinFieldOfViewDegrees()
float com.google.android.apps.lightcycle.sensor.SensorReader.getAccelInPlaneRotationRadians()
float com.google.android.apps.lightcycle.sensor.SensorReader.getAngularVelocitySquaredRad()
float com.google.android.apps.lightcycle.sensor.SensorReader.getImuOrientationDegrees()
float com.googlecode.mp4parser.authoring.TrackMetaData.getVolume()
float[] android.filterfw.core.GLFrame.getFloats()
float[] android.filterfw.core.NativeFrame.getFloats()
float[] android.filterfw.core.SerializedFrame.getFloats()
float[] android.filterfw.core.SimpleFrame.getFloats()
float[] android.filterfw.core.VertexFrame.getFloats()
float[] android.renderscript.Matrix2f.getArray()
float[] android.renderscript.Matrix3f.getArray()
float[] android.renderscript.Matrix4f.getArray()
float[] com.android.gallery3d.app.ActivityState.getBackgroundColor()
float[] com.android.gallery3d.filtershow.filters.ColorSpaceMatrix.getMatrix()
float[] com.android.gallery3d.filtershow.imageshow.GeometryMath.getUnitVectorFromPoints(float[],float[])
float[] com.android.gallery3d.filtershow.ui.Spline.getAppliedCurve()
float[] com.android.gallery3d.ui.GLView.getBackgroundColor()
float[] com.android.gallery3d.ui.Paper.getTransform(Rect,float)
float[] com.android.internal.policy.impl.keyguard.PagedView.mapPointFromParentToView(View,float,float)
float[] com.android.internal.policy.impl.keyguard.PagedView.mapPointFromViewToParent(View,float,float)
float[] com.android.server.wm.WindowManagerService.getAnimationScales()
float[] com.google.android.apps.lightcycle.panorama.PhotoCollection.getCameraToWorld(int)
float[] com.google.android.apps.lightcycle.panorama.VideoFrameProcessor.getRotationEstimate()
float[] com.google.android.apps.lightcycle.sensor.SensorReader.getAndResetGyroData()
float[] com.google.android.apps.lightcycle.sensor.SensorReader.getFilterOutput()
int android.app.ActivityManager.getCurrentUser()
int android.app.ActivityManagerProxy.bindService(IApplicationThread,IBinder,Intent,String,IServiceConnection,int,int)
int android.app.ActivityManagerProxy.broadcastIntent(IApplicationThread,Intent,String,IIntentReceiver,int,String,Bundle,String,boolean,boolean,int)
int android.app.ActivityManagerProxy.getLaunchedFromUid(IBinder)
int android.app.ActivityManagerProxy.getUidForIntentSender(IIntentSender)
int android.app.ActivityManagerProxy.handleIncomingUser(int,int,int,boolean,boolean,String,String)
int android.app.ActivityManagerProxy.startActivities(IApplicationThread,Intent[],String[],IBinder,Bundle,int)
int android.app.ActivityManagerProxy.startActivity(IApplicationThread,Intent,String,IBinder,String,int,int,String,ParcelFileDescriptor,Bundle)
int android.app.ActivityManagerProxy.startActivityAsUser(IApplicationThread,Intent,String,IBinder,String,int,int,String,ParcelFileDescriptor,Bundle,int)
int android.app.ActivityManagerProxy.startActivityIntentSender(IApplicationThread,IntentSender,Intent,String,IBinder,String,int,int,int,Bundle)
int android.app.ActivityManagerProxy.startActivityWithConfig(IApplicationThread,Intent,String,IBinder,String,int,int,Configuration,Bundle,int)
int android.app.ActivityManagerProxy.stopService(IApplicationThread,Intent,String,int)
int android.app.ActivityManagerProxy.stopUser(int,IStopUserCallback)
int android.app.ActivityOptions.getAnimationType()
int android.app.ActivityOptions.getCustomEnterResId()
int android.app.ActivityOptions.getCustomExitResId()
int android.app.ActivityOptions.getStartHeight()
int android.app.ActivityOptions.getStartWidth()
int android.app.ActivityOptions.getStartX()
int android.app.ActivityOptions.getStartY()
int android.app.ApplicationPackageManager.getPreferredActivities(List,List,String)
int android.app.ContextImpl$ApplicationContentResolver.getIsSyncable(Account,String)
int android.app.ContextImpl.getUserId()
int android.app.PendingIntent.getCreatorUid()
int android.app.TaskStackBuilder.getIntentCount()
int android.app.admin.DevicePolicyManager.getKeyguardDisabledFeatures(ComponentName)
int android.app.admin.DevicePolicyManager.getKeyguardDisabledFeatures(ComponentName,int)
int android.app.admin.DevicePolicyManager.getMaximumFailedPasswordsForWipe(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordHistoryLength(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumLength(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumLetters(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase(ComponentName,int)
int android.app.admin.DevicePolicyManager.getPasswordQuality(ComponentName,int)
int android.app.admin.DevicePolicyManager.getStorageEncryptionStatus(int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getCurrentFailedPasswordAttempts(int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getKeyguardDisabledFeatures(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getMaximumFailedPasswordsForWipe(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordHistoryLength(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumLength(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumLetters(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumLowerCase(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumNonLetter(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumNumeric(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumSymbols(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordMinimumUpperCase(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordQuality(ComponentName,int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.getStorageEncryptionStatus(int)
int android.app.admin.IDevicePolicyManager$Stub$Proxy.setStorageEncryption(ComponentName,boolean,int)
int android.bluetooth.BluetoothPbap.getState()
int android.bluetooth.BluetoothSocket.getPort()
int android.bluetooth.BluetoothTetheringDataTracker.getDefaultGatewayAddr()
int android.bluetooth.IBluetooth$Stub$Proxy.getBondState(BluetoothDevice)
int android.bluetooth.IBluetooth$Stub$Proxy.getRemoteClass(BluetoothDevice)
int android.bluetooth.IBluetooth$Stub$Proxy.getState()
int android.bluetooth.IBluetoothHealth$Stub$Proxy.getHealthDeviceConnectionState(BluetoothDevice)
int android.bluetooth.IBluetoothInputDevice$Stub$Proxy.getConnectionState(BluetoothDevice)
int android.bluetooth.IBluetoothInputDevice$Stub$Proxy.getPriority(BluetoothDevice)
int android.bluetooth.IBluetoothPan$Stub$Proxy.getConnectionState(BluetoothDevice)
int android.bluetooth.IBluetoothPbap$Stub$Proxy.getState()
int android.content.BroadcastReceiver$PendingResult.getSendingUserId()
int android.content.BroadcastReceiver.getSendingUserId()
int android.content.ContentService.getIsSyncable(Account,String)
int android.content.IntentSender.getCreatorUid()
int android.content.SyncStorageEngine.getIsSyncable(Account,int,String)
int android.content.SyncStorageEngine.getSyncRandomOffset()
int android.content.pm.IPackageManager$Stub$Proxy.getApplicationEnabledSetting(String,int)
int android.content.pm.IPackageManager$Stub$Proxy.getComponentEnabledSetting(ComponentName,int)
int android.content.pm.IPackageManager$Stub$Proxy.getPackageUid(String,int)
int android.content.pm.IPackageManager$Stub$Proxy.getPreferredActivities(List,List,String)
int android.content.pm.IPackageManager$Stub$Proxy.installExistingPackage(String)
int android.content.pm.LabeledIntent.getIconResource()
int android.content.pm.LabeledIntent.getLabelResource()
int android.content.pm.VerificationParams.getInstallerUid()
int android.content.pm.VerificationParams.getOriginatingUid()
int android.content.res.Configuration.getLayoutDirection()
int android.database.sqlite.SQLiteConnection.getConnectionId()
int android.database.sqlite.SQLiteDatabase.getThreadDefaultConnectionFlags(boolean)
int android.database.sqlite.SQLiteGlobal.getDefaultPageSize()
int android.database.sqlite.SQLiteGlobal.getJournalSizeLimit()
int android.database.sqlite.SQLiteGlobal.getWALAutoCheckpoint()
int android.database.sqlite.SQLiteGlobal.getWALConnectionPoolSize()
int android.database.sqlite.SQLiteProgram.getConnectionFlags()
int android.drm.DrmEvent.getType()
int android.drm.DrmEvent.getUniqueId()
int android.drm.DrmInfo.getInfoType()
int android.drm.DrmInfoRequest.getInfoType()
int android.drm.DrmManagerClient.getDrmObjectType(String,String)
int android.drm.DrmManagerClient.getDrmObjectType(Uri,String)
int android.drm.DrmManagerClient.saveRights(DrmRights,String,String)
int android.filterfw.core.Filter.getNumberOfConnectedInputs()
int android.filterfw.core.Filter.getNumberOfConnectedOutputs()
int android.filterfw.core.Filter.getNumberOfInputs()
int android.filterfw.core.Filter.getNumberOfOutputs()
int android.filterfw.core.Filter.getSleepDelay()
int android.filterfw.core.Filter.getStatus()
int android.filterfw.core.FilterSurfaceView.getSurfaceId()
int android.filterfw.core.Frame.getBindingType()
int android.filterfw.core.Frame.getCapacity()
int android.filterfw.core.Frame.getRefCount()
int android.filterfw.core.FrameFormat.getBaseType()
int android.filterfw.core.FrameFormat.getBytesPerSample()
int android.filterfw.core.FrameFormat.getDepth()
int android.filterfw.core.FrameFormat.getDimension(int)
int android.filterfw.core.FrameFormat.getDimensionCount()
int android.filterfw.core.FrameFormat.getHeight()
int android.filterfw.core.FrameFormat.getLength()
int android.filterfw.core.FrameFormat.getNumberOfDimensions()
int android.filterfw.core.FrameFormat.getSize()
int android.filterfw.core.FrameFormat.getTarget()
int android.filterfw.core.FrameFormat.getValuesPerSample()
int android.filterfw.core.FrameFormat.getWidth()
int android.filterfw.core.GLFrame.getFboId()
int android.filterfw.core.GLFrame.getTextureId()
int android.filterfw.core.KeyValueMap.getInt(String)
int android.filterfw.core.NativeBuffer.getElementSize()
int android.filterfw.core.NativeFrame.getCapacity()
int android.filterfw.core.SerializedFrame$DirectByteOutputStream.getSize()
int android.filterfw.core.VertexFrame.getVboId()
int android.filterpacks.performance.Throughput.getPeriodFrameCount()
int android.filterpacks.performance.Throughput.getPeriodTime()
int android.filterpacks.performance.Throughput.getTotalFrameCount()
int android.gesture.Gesture.getStrokesCount()
int android.gesture.GestureLibrary.getOrientationStyle()
int android.gesture.GestureLibrary.getSequenceType()
int android.gesture.GestureStore.getOrientationStyle()
int android.gesture.GestureStore.getSequenceType()
int android.graphics.BitmapRegionDecoder.getHeight()
int android.graphics.BitmapRegionDecoder.getWidth()
int android.graphics.YuvImage.getHeight()
int android.graphics.YuvImage.getWidth()
int android.graphics.YuvImage.getYuvFormat()
int android.graphics.drawable.Drawable.getLayoutDirection()
int android.hardware.LegacySensorManager.getRotation()
int android.hardware.LegacySensorManager.getSensors()
int android.hardware.display.WifiDisplayStatus.getActiveDisplayState()
int android.hardware.display.WifiDisplayStatus.getFeatureState()
int android.hardware.display.WifiDisplayStatus.getScanState()
int android.hardware.input.InputManager.getPointerSpeed(Context)
int android.location.Geofence.getType()
int android.location.LocationRequest.getNumUpdates()
int android.location.LocationRequest.getQuality()
int android.media.AudioManager.getLastAudibleMasterVolume()
int android.media.AudioManager.getMasterMaxVolume()
int android.media.AudioManager.getMasterStreamType()
int android.media.AudioManager.getMasterVolume()
int android.media.AudioManager.setBluetoothA2dpDeviceConnectionState(BluetoothDevice,int)
int android.media.AudioRecord.getAudioFormat()
int android.media.AudioRecord.getAudioSessionId()
int android.media.AudioRecord.getAudioSource()
int android.media.AudioRecord.getChannelConfiguration()
int android.media.AudioRecord.getChannelCount()
int android.media.AudioRecord.getNotificationMarkerPosition()
int android.media.AudioRecord.getPositionNotificationPeriod()
int android.media.AudioRecord.getRecordingState()
int android.media.AudioRecord.getSampleRate()
int android.media.AudioRecord.getState()
int android.media.AudioRecord.setNotificationMarkerPosition(int)
int android.media.AudioRecord.setPositionNotificationPeriod(int)
int android.media.AudioService$ScoClient.getCount()
int android.media.AudioService$ScoClient.getPid()
int android.media.AudioService$SetModeDeathHandler.getMode()
int android.media.AudioService$SetModeDeathHandler.getPid()
int android.media.AudioService$VolumeStreamState.getIndex(int,boolean)
int android.media.AudioService$VolumeStreamState.getMaxIndex()
int android.media.AudioService$VolumeStreamState.getStreamType()
int android.media.AudioService.getLastAudibleMasterVolume()
int android.media.AudioService.getLastAudibleStreamVolume(int)
int android.media.AudioService.getMasterMaxVolume()
int android.media.AudioService.getMasterStreamType()
int android.media.AudioService.getMasterVolume()
int android.media.AudioService.getMode()
int android.media.AudioService.getRemoteStreamMaxVolume()
int android.media.AudioService.getRemoteStreamVolume()
int android.media.AudioService.getRingerMode()
int android.media.AudioService.getStreamMaxVolume(int)
int android.media.AudioService.getStreamVolume(int)
int android.media.AudioService.getValueForVibrateSetting(int,int,int)
int android.media.AudioService.getVibrateSetting(int)
int android.media.AudioService.setBluetoothA2dpDeviceConnectionState(BluetoothDevice,int)
int android.media.AudioTrack.getAudioFormat()
int android.media.AudioTrack.getAudioSessionId()
int android.media.AudioTrack.getChannelConfiguration()
int android.media.AudioTrack.getChannelCount()
int android.media.AudioTrack.getNativeFrameCount()
int android.media.AudioTrack.getNativeOutputSampleRate(int)
int android.media.AudioTrack.getNotificationMarkerPosition()
int android.media.AudioTrack.getPlayState()
int android.media.AudioTrack.getPlaybackHeadPosition()
int android.media.AudioTrack.getPlaybackRate()
int android.media.AudioTrack.getPositionNotificationPeriod()
int android.media.AudioTrack.getSampleRate()
int android.media.AudioTrack.getState()
int android.media.AudioTrack.getStreamType()
int android.media.AudioTrack.setAuxEffectSendLevel(float)
int android.media.AudioTrack.setLoopPoints(int,int,int)
int android.media.AudioTrack.setNotificationMarkerPosition(int)
int android.media.AudioTrack.setPlaybackHeadPosition(int)
int android.media.AudioTrack.setPlaybackRate(int)
int android.media.AudioTrack.setPositionNotificationPeriod(int)
int android.media.AudioTrack.setStereoVolume(float,float)
int android.media.IAudioService$Stub$Proxy.getLastAudibleMasterVolume()
int android.media.IAudioService$Stub$Proxy.getMasterMaxVolume()
int android.media.IAudioService$Stub$Proxy.getMasterStreamType()
int android.media.IAudioService$Stub$Proxy.getMasterVolume()
int android.media.IAudioService$Stub$Proxy.getRemoteStreamMaxVolume()
int android.media.IAudioService$Stub$Proxy.getRemoteStreamVolume()
int android.media.IAudioService$Stub$Proxy.registerRemoteControlClient(PendingIntent,IRemoteControlClient,String)
int android.media.IAudioService$Stub$Proxy.setBluetoothA2dpDeviceConnectionState(BluetoothDevice,int)
int android.media.MediaPlayer$TrackInfo.getTrackType()
int android.media.MediaPlayer.setMetadataFilter(Set,Set)
int android.media.MediaRouter$RouteCategory.getSupportedTypes()
int android.media.MediaRouter$RouteGroup.getRouteCount()
int android.media.MediaRouter$RouteInfo.getPlaybackStream()
int android.media.MediaRouter$RouteInfo.getPlaybackType()
int android.media.MediaRouter$RouteInfo.getStatusCode()
int android.media.MediaRouter$RouteInfo.getSupportedTypes()
int android.media.MediaRouter$RouteInfo.getVolume()
int android.media.MediaRouter$RouteInfo.getVolumeHandling()
int android.media.MediaRouter$RouteInfo.getVolumeMax()
int android.media.MediaRouter.getCategoryCount()
int android.media.MediaRouter.getRouteCount()
int android.media.MediaRouter.getRouteCountStatic()
int android.media.MediaSyncEvent.getAudioSessionId()
int android.media.MediaSyncEvent.getType()
int android.media.Metadata.getInt(int)
int android.media.RemoteControlClient.getIntPlaybackInformation(int)
int android.media.RemoteControlClient.getRcseId()
int android.media.audiofx.AudioEffect.getId()
int android.media.audiofx.AudioEffect.getParameter(byte[],byte[])
int android.media.audiofx.AudioEffect.getParameter(int,byte[])
int android.media.audiofx.AudioEffect.getParameter(int,int[])
int android.media.audiofx.AudioEffect.getParameter(int,short[])
int android.media.audiofx.AudioEffect.getParameter(int[],byte[])
int android.media.audiofx.AudioEffect.getParameter(int[],int[])
int android.media.audiofx.AudioEffect.getParameter(int[],short[])
int android.media.audiofx.AudioEffect.setEnabled(boolean)
int android.media.audiofx.AudioEffect.setParameter(byte[],byte[])
int android.media.audiofx.AudioEffect.setParameter(int,byte[])
int android.media.audiofx.AudioEffect.setParameter(int,int)
int android.media.audiofx.AudioEffect.setParameter(int,short)
int android.media.audiofx.AudioEffect.setParameter(int[],byte[])
int android.media.audiofx.AudioEffect.setParameter(int[],int[])
int android.media.audiofx.AudioEffect.setParameter(int[],short[])
int android.media.audiofx.Equalizer.getCenterFreq(short)
int android.media.videoeditor.AudioTrack.getAudioBitrate()
int android.media.videoeditor.AudioTrack.getAudioChannels()
int android.media.videoeditor.AudioTrack.getAudioSamplingFrequency()
int android.media.videoeditor.AudioTrack.getAudioType()
int android.media.videoeditor.AudioTrack.getDuckedTrackVolume()
int android.media.videoeditor.AudioTrack.getDuckingThreshhold()
int android.media.videoeditor.AudioTrack.getVolume()
int android.media.videoeditor.EffectColor.getColor()
int android.media.videoeditor.EffectColor.getType()
int android.media.videoeditor.MediaArtistNativeHelper.getAspectRatio(int,int)
int android.media.videoeditor.MediaArtistNativeHelper.getAudioCodecType(int)
int android.media.videoeditor.MediaArtistNativeHelper.getFileType(int)
int android.media.videoeditor.MediaArtistNativeHelper.getFrameRate(int)
int android.media.videoeditor.MediaArtistNativeHelper.getMediaItemFileType(int)
int android.media.videoeditor.MediaArtistNativeHelper.getMediaItemRenderingMode(int)
int android.media.videoeditor.MediaArtistNativeHelper.getSlideSettingsDirection(int)
int android.media.videoeditor.MediaArtistNativeHelper.getVideoCodecType(int)
int android.media.videoeditor.MediaArtistNativeHelper.getVideoTransitionBehaviour(int)
int android.media.videoeditor.MediaImageItem.getAspectRatio()
int android.media.videoeditor.MediaImageItem.getFileType()
int android.media.videoeditor.MediaImageItem.getGeneratedClipHeight()
int android.media.videoeditor.MediaImageItem.getGeneratedClipWidth()
int android.media.videoeditor.MediaImageItem.getHeight()
int android.media.videoeditor.MediaImageItem.getScaledHeight()
int android.media.videoeditor.MediaImageItem.getScaledWidth()
int android.media.videoeditor.MediaImageItem.getWidth()
int android.media.videoeditor.MediaItem.getRenderingMode()
int android.media.videoeditor.MediaProperties.getSupportedAudioTrackCount()
int android.media.videoeditor.MediaProperties.getSupportedMaxVolume()
int android.media.videoeditor.MediaVideoItem.getAspectRatio()
int android.media.videoeditor.MediaVideoItem.getAudioBitrate()
int android.media.videoeditor.MediaVideoItem.getAudioChannels()
int android.media.videoeditor.MediaVideoItem.getAudioSamplingFrequency()
int android.media.videoeditor.MediaVideoItem.getAudioType()
int android.media.videoeditor.MediaVideoItem.getFileType()
int android.media.videoeditor.MediaVideoItem.getFps()
int android.media.videoeditor.MediaVideoItem.getHeight()
int android.media.videoeditor.MediaVideoItem.getVideoBitrate()
int android.media.videoeditor.MediaVideoItem.getVideoLevel()
int android.media.videoeditor.MediaVideoItem.getVideoProfile()
int android.media.videoeditor.MediaVideoItem.getVideoType()
int android.media.videoeditor.MediaVideoItem.getVolume()
int android.media.videoeditor.MediaVideoItem.getWidth()
int android.media.videoeditor.OverlayFrame.getOverlayFrameHeight()
int android.media.videoeditor.OverlayFrame.getOverlayFrameWidth()
int android.media.videoeditor.OverlayFrame.getResizedRGBSizeHeight()
int android.media.videoeditor.OverlayFrame.getResizedRGBSizeWidth()
int android.media.videoeditor.Transition.getBehavior()
int android.media.videoeditor.TransitionAlpha.getBlendingPercent()
int android.media.videoeditor.TransitionAlpha.getRGBFileHeight()
int android.media.videoeditor.TransitionAlpha.getRGBFileWidth()
int android.media.videoeditor.TransitionSliding.getDirection()
int android.media.videoeditor.VideoEditorImpl.getAspectRatio()
int android.media.videoeditor.VideoEditorProfile.getExportLevel(int)
int android.media.videoeditor.VideoEditorProfile.getExportProfile(int)
int android.media.videoeditor.WaveformData.getFrameDuration()
int android.media.videoeditor.WaveformData.getFramesCount()
int android.mtp.MtpDevice.getDeviceId()
int android.mtp.MtpObjectInfo.getAssociationDesc()
int android.mtp.MtpObjectInfo.getAssociationType()
int android.mtp.MtpObjectInfo.getCompressedSize()
int android.mtp.MtpObjectInfo.getFormat()
int android.mtp.MtpObjectInfo.getImagePixDepth()
int android.mtp.MtpObjectInfo.getImagePixHeight()
int android.mtp.MtpObjectInfo.getImagePixWidth()
int android.mtp.MtpObjectInfo.getObjectHandle()
int android.mtp.MtpObjectInfo.getParent()
int android.mtp.MtpObjectInfo.getProtectionStatus()
int android.mtp.MtpObjectInfo.getSequenceNumber()
int android.mtp.MtpObjectInfo.getStorageId()
int android.mtp.MtpObjectInfo.getThumbCompressedSize()
int android.mtp.MtpObjectInfo.getThumbFormat()
int android.mtp.MtpObjectInfo.getThumbPixHeight()
int android.mtp.MtpObjectInfo.getThumbPixWidth()
int android.mtp.MtpStorage.getStorageId()
int android.mtp.MtpStorage.getStorageId(int)
int android.mtp.MtpStorageInfo.getStorageId()
int android.net.EthernetDataTracker.getDefaultGatewayAddr()
int android.net.nsd.NsdServiceInfo.getPort()
int android.net.rtp.RtpStream.getSocket()
int android.net.sip.SimpleSessionDescription$Media.getBandwidth(String)
int android.net.wifi.NetworkUpdateResult.getNetworkId()
int android.net.wifi.WifiNative.getBand()
int android.net.wifi.WifiNative.getGroupCapability(String)
int android.net.wifi.WifiStateMachine.getFrequencyBand()
int android.net.wifi.p2p.WifiP2pGroup.getNetworkId()
int android.net.wifi.p2p.WifiP2pGroupList.getNetworkId(String)
int android.net.wifi.p2p.WifiP2pGroupList.getNetworkId(String,String)
int android.net.wifi.p2p.WifiP2pWfdInfo.getControlPort()
int android.net.wifi.p2p.WifiP2pWfdInfo.getDeviceType()
int android.net.wifi.p2p.WifiP2pWfdInfo.getMaxThroughput()
int android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse.getDnsType()
int android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse.getVersion()
int android.net.wifi.p2p.nsd.WifiP2pServiceRequest.getTransactionId()
int android.net.wifi.p2p.nsd.WifiP2pServiceResponse.getServiceType()
int android.net.wifi.p2p.nsd.WifiP2pServiceResponse.getStatus()
int android.net.wifi.p2p.nsd.WifiP2pServiceResponse.getTransactionId()
int android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse.getVersion()
int android.nfc.NdefMessage.getByteArrayLength()
int android.nfc.NdefRecord.getByteLength()
int android.nfc.NfcAdapter.getSdkVersion()
int android.nfc.tech.NfcBarcode.getType()
int android.opengl.EGLObjectHandle.getHandle()
int android.os.CommonTimeConfig.getClientSyncInterval()
int android.os.CommonTimeConfig.getMasterAnnounceInterval()
int android.os.CommonTimeConfig.getPanicThreshold()
int android.os.CommonTimeConfig.setAutoDisable(boolean)
int android.os.CommonTimeConfig.setClientSyncInterval(int)
int android.os.CommonTimeConfig.setMasterAnnounceInterval(int)
int android.os.CommonTimeConfig.setMasterElectionEndpoint(InetSocketAddress)
int android.os.CommonTimeConfig.setMasterElectionGroupId(long)
int android.os.CommonTimeConfig.setMasterElectionPriority(byte)
int android.os.CommonTimeConfig.setNetworkBinding(String)
int android.os.CommonTimeConfig.setPanicThreshold(int)
int android.os.CommonTimeUtils.transactSetInt(int,int)
int android.os.CommonTimeUtils.transactSetLong(int,long)
int android.os.CommonTimeUtils.transactSetSockaddr(int,InetSocketAddress)
int android.os.CommonTimeUtils.transactSetString(int,String)
int android.os.INetworkManagementService$Stub$Proxy.getInterfaceRxThrottle(String)
int android.os.INetworkManagementService$Stub$Proxy.getInterfaceTxThrottle(String)
int android.os.ISchedulingPolicyService$Stub$Proxy.requestPriority(int,int,int)
int android.os.IUserManager$Stub$Proxy.getUserHandle(int)
int android.os.IUserManager$Stub$Proxy.getUserSerialNumber(int)
int android.os.PowerManager.getDefaultScreenBrightnessSetting()
int android.os.PowerManager.getMaximumScreenBrightnessSetting()
int android.os.PowerManager.getMinimumScreenBrightnessSetting()
int android.os.RemoteCallbackList.getRegisteredCallbackCount()
int android.os.UserHandle.getIdentifier()
int android.os.UserManager.getMaxSupportedUsers()
int android.os.UserManager.getUserCount()
int android.os.UserManager.getUserHandle()
int android.os.UserManager.getUserHandle(int)
int android.os.UserManager.getUserSerialNumber(int)
int android.os.storage.IMountService$Stub$Proxy.createSecureContainer(String,int,String,String,int,boolean)
int android.os.storage.IMountService$Stub$Proxy.fixPermissionsSecureContainer(String,int,String)
int android.os.storage.StorageVolume.getDescriptionId()
int android.provider.Settings$Global.getInt(ContentResolver,String)
int android.provider.Settings$Global.getInt(ContentResolver,String,int)
int android.provider.Settings$Secure.getIntForUser(ContentResolver,String,int)
int android.provider.Settings$Secure.getIntForUser(ContentResolver,String,int,int)
int android.provider.Settings$System.getIntForUser(ContentResolver,String,int)
int android.provider.Settings$System.getIntForUser(ContentResolver,String,int,int)
int android.renderscript.Allocation.getBytesSize()
int android.renderscript.Allocation.getUsage()
int android.renderscript.AllocationAdapter.getID(RenderScript)
int android.renderscript.BaseObj.getID(RenderScript)
int android.renderscript.Element.getBytesSize()
int android.renderscript.Element.getVectorSize()
int android.renderscript.Program.getConstantCount()
int android.renderscript.Program.getTextureCount()
int android.renderscript.ProgramVertex.getInputCount()
int android.renderscript.RenderScriptGL.getHeight()
int android.renderscript.RenderScriptGL.getWidth()
int android.security.KeyStore.getLastError()
int android.service.wallpaper.WallpaperService$Engine.getDesiredMinimumHeight()
int android.service.wallpaper.WallpaperService$Engine.getDesiredMinimumWidth()
int android.speech.tts.BlockingAudioTrack.write(byte[])
int android.speech.tts.FileSynthesisCallback.audioAvailable(byte[],int,int)
int android.speech.tts.FileSynthesisCallback.getMaxBufferSize()
int android.speech.tts.ITextToSpeechService$Stub$Proxy.playSilence(IBinder,long,int,Bundle)
int android.speech.tts.ITextToSpeechService$Stub$Proxy.speak(IBinder,String,int,Bundle)
int android.speech.tts.ITextToSpeechService$Stub$Proxy.stop(IBinder)
int android.speech.tts.ITextToSpeechService$Stub$Proxy.synthesizeToFile(IBinder,String,String,Bundle)
int android.speech.tts.PlaybackSynthesisCallback.getMaxBufferSize()
int android.speech.tts.SynthesisRequest.getPitch()
int android.speech.tts.SynthesisRequest.getSpeechRate()
int android.speech.tts.TextToSpeech.setLanguage(Locale)
int android.speech.tts.TextToSpeechService$SpeechItem.getCallerPid()
int android.speech.tts.TextToSpeechService$SpeechItem.getCallerUid()
int android.speech.tts.TextToSpeechService$SpeechItem.getIntParam(String,int)
int android.speech.tts.TextToSpeechService$SpeechItem.getStreamType()
int android.support.v4.view.ViewPager.getChildDrawingOrder(int,int)
int android.telephony.CellIdentityCdma.getBasestationId()
int android.telephony.CellIdentityCdma.getLatitude()
int android.telephony.CellIdentityCdma.getLongitude()
int android.telephony.CellIdentityCdma.getNetworkId()
int android.telephony.CellIdentityCdma.getSystemId()
int android.telephony.CellIdentityGsm.getCid()
int android.telephony.CellIdentityGsm.getLac()
int android.telephony.CellIdentityGsm.getMcc()
int android.telephony.CellIdentityGsm.getMnc()
int android.telephony.CellIdentityGsm.getPsc()
int android.telephony.CellIdentityLte.getCi()
int android.telephony.CellIdentityLte.getMcc()
int android.telephony.CellIdentityLte.getMnc()
int android.telephony.CellIdentityLte.getPci()
int android.telephony.CellIdentityLte.getTac()
int android.telephony.CellInfo.getTimeStampType()
int android.telephony.CellInfo.hashCode()
int android.telephony.CellSignalStrengthCdma.getAsuLevel()
int android.telephony.CellSignalStrengthCdma.getCdmaDbm()
int android.telephony.CellSignalStrengthCdma.getCdmaEcio()
int android.telephony.CellSignalStrengthCdma.getCdmaLevel()
int android.telephony.CellSignalStrengthCdma.getDbm()
int android.telephony.CellSignalStrengthCdma.getEvdoDbm()
int android.telephony.CellSignalStrengthCdma.getEvdoEcio()
int android.telephony.CellSignalStrengthCdma.getEvdoLevel()
int android.telephony.CellSignalStrengthCdma.getEvdoSnr()
int android.telephony.CellSignalStrengthCdma.getLevel()
int android.telephony.CellSignalStrengthGsm.getAsuLevel()
int android.telephony.CellSignalStrengthGsm.getDbm()
int android.telephony.CellSignalStrengthGsm.getLevel()
int android.telephony.CellSignalStrengthLte.getAsuLevel()
int android.telephony.CellSignalStrengthLte.getDbm()
int android.telephony.CellSignalStrengthLte.getLevel()
int android.telephony.CellSignalStrengthLte.getTimingAdvance()
int android.telephony.ServiceState.getNetworkType()
int android.telephony.ServiceState.getRilRadioTechnology()
int android.telephony.SignalStrength.getLteCqi()
int android.telephony.SignalStrength.getLteRsrp()
int android.telephony.SignalStrength.getLteRsrq()
int android.telephony.SignalStrength.getLteRssnr()
int android.telephony.SignalStrength.getLteSignalStrenght()
int android.telephony.SmsCbCmasInfo.getCategory()
int android.telephony.SmsCbCmasInfo.getCertainty()
int android.telephony.SmsCbCmasInfo.getMessageClass()
int android.telephony.SmsCbCmasInfo.getResponseType()
int android.telephony.SmsCbCmasInfo.getSeverity()
int android.telephony.SmsCbCmasInfo.getUrgency()
int android.telephony.SmsCbEtwsInfo.getWarningType()
int android.telephony.SmsCbLocation.getCid()
int android.telephony.SmsCbLocation.getLac()
int android.telephony.SmsCbMessage.getGeographicalScope()
int android.telephony.SmsCbMessage.getMessageFormat()
int android.telephony.SmsCbMessage.getMessagePriority()
int android.telephony.SmsCbMessage.getSerialNumber()
int android.telephony.SmsCbMessage.getServiceCategory()
int android.telephony.TelephonyManager.getLteOnCdmaModeStatic()
int android.telephony.TelephonyManager.getPhoneType(int)
int android.telephony.cdma.CdmaSmsCbProgramData.getAlertOption()
int android.telephony.cdma.CdmaSmsCbProgramData.getCategory()
int android.telephony.cdma.CdmaSmsCbProgramData.getLanguage()
int android.telephony.cdma.CdmaSmsCbProgramData.getMaxMessages()
int android.telephony.cdma.CdmaSmsCbProgramData.getOperation()
int android.telephony.cdma.CdmaSmsCbProgramResults.getCategory()
int android.telephony.cdma.CdmaSmsCbProgramResults.getCategoryResult()
int android.telephony.cdma.CdmaSmsCbProgramResults.getLanguage()
int android.test.mock.MockContentResolver.getIsSyncable(Account,String)
int android.text.DynamicLayout.getNumberOfBlocks()
int android.text.SpanSet.getNextTransition(int,int)
int android.text.style.DynamicDrawableSpan.getSize(Paint,CharSequence,int,int,Paint$FontMetricsInt)
int android.text.style.LocaleSpan.getSpanTypeId()
int android.view.Display.getFlags()
int android.view.Display.getLayerStack()
int android.view.Display.getType()
int android.view.DisplayInfo.getNaturalHeight()
int android.view.DisplayInfo.getNaturalWidth()
int android.view.GLES20Canvas.getRenderer()
int android.view.IWindowSession$Stub$Proxy.add(IWindow,int,WindowManager$LayoutParams,int,Rect,InputChannel)
int android.view.IWindowSession$Stub$Proxy.addToDisplay(IWindow,int,WindowManager$LayoutParams,int,int,Rect,InputChannel)
int android.view.IWindowSession$Stub$Proxy.addToDisplayWithoutInputChannel(IWindow,int,WindowManager$LayoutParams,int,int,Rect)
int android.view.IWindowSession$Stub$Proxy.addWithoutInputChannel(IWindow,int,WindowManager$LayoutParams,int,Rect)
int android.view.IWindowSession$Stub$Proxy.relayout(IWindow,int,WindowManager$LayoutParams,int,int,int,int,Rect,Rect,Rect,Configuration,Surface)
int android.view.InputDevice.getGeneration()
int android.view.InputEvent.getSequenceNumber()
int android.view.PointerIcon.getStyle()
int android.view.Surface.getHeight()
int android.view.Surface.getWidth()
int android.view.TextureView.getLayerType()
int android.view.View.getAccessibilityCursorPosition()
int android.view.View.getImportantForAccessibility()
int android.view.View.getLabelFor()
int android.view.View.getMinimumHeight()
int android.view.View.getMinimumWidth()
int android.view.View.getRawLayoutDirection()
int android.view.View.getRawTextAlignment()
int android.view.View.getRawTextDirection()
int android.view.View.getScrollBarDefaultDelayBeforeFade()
int android.view.View.getScrollBarFadeDuration()
int android.view.View.getScrollBarSize()
int android.view.View.getTextAlignment()
int android.view.View.getWindowSystemUiVisibility()
int android.view.ViewConfiguration.getScaledDoubleTapTouchSlop()
int android.view.ViewGroup$ChildListForAccessibility.getChildCount()
int android.view.ViewGroup$ChildListForAccessibility.getChildIndex(View)
int android.view.ViewGroup$MarginLayoutParams.getLayoutDirection()
int android.view.ViewGroup.getLayoutMode()
int android.view.WindowOrientationListener$SensorEventListenerImpl.getProposedRotation()
int android.view.WindowOrientationListener.getProposedRotation()
int android.view.accessibility.AccessibilityEvent.getAction()
int android.view.accessibility.AccessibilityEvent.getMovementGranularity()
int android.view.accessibility.AccessibilityNodeInfo.getAccessibilityViewId(long)
int android.view.accessibility.AccessibilityNodeInfo.getMovementGranularities()
int android.view.accessibility.AccessibilityNodeInfo.getVirtualDescendantId(long)
int android.view.accessibility.IAccessibilityManager$Stub$Proxy.addAccessibilityInteractionConnection(IWindow,IAccessibilityInteractionConnection,int)
int android.view.accessibility.IAccessibilityManager$Stub$Proxy.addClient(IAccessibilityManagerClient,int)
int android.view.animation.LayoutAnimationController.getTransformedIndex(LayoutAnimationController$AnimationParameters)
int android.view.textservice.SentenceSuggestionsInfo.getLengthAt(int)
int android.view.textservice.SentenceSuggestionsInfo.getOffsetAt(int)
int android.view.textservice.SentenceSuggestionsInfo.getSuggestionsCount()
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getAction(int)
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getActionCode(int)
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getActionCount()
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getFirstArgument(int)
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getKeyCode()
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getModifiers()
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getSecondArgument(int)
int android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding.getThirdArgument(int)
int android.webkit.DateSorter.getIndex(long)
int android.webkit.WebBackForwardListClassic.getCurrentIndex()
int android.webkit.WebBackForwardListClassic.getSize()
int android.webkit.WebHistoryItemClassic.getId()
int android.webkit.WebSettingsClassic$AutoFillProfile.getUniqueId()
int android.webkit.WebSettingsClassic.getCacheMode()
int android.webkit.WebSettingsClassic.getDefaultFixedFontSize()
int android.webkit.WebSettingsClassic.getDefaultFontSize()
int android.webkit.WebSettingsClassic.getDoubleTapToastCount()
int android.webkit.WebSettingsClassic.getDoubleTapZoom()
int android.webkit.WebSettingsClassic.getMinimumFontSize()
int android.webkit.WebSettingsClassic.getMinimumLogicalFontSize()
int android.webkit.WebSettingsClassic.getTextZoom()
int android.webkit.WebSettingsClassic.getUserAgent()
int android.webkit.WebView$PrivateAccess.getHorizontalScrollbarHeight()
int android.webkit.WebViewClassic$FocusTransitionDrawable.getOpacity()
int android.webkit.WebViewClassic$SelectionHandleAlpha.getAlpha()
int android.webkit.WebViewClassic$SelectionHandleAlpha.getTargetAlpha()
int android.webkit.WebViewClassic.getBaseLayer()
int android.webkit.WebViewClassic.getBlockLeftEdge(int,int,float)
int android.webkit.WebViewClassic.getContentHeight()
int android.webkit.WebViewClassic.getContentWidth()
int android.webkit.WebViewClassic.getHeight()
int android.webkit.WebViewClassic.getHistoryPictureWidth()
int android.webkit.WebViewClassic.getPageBackgroundColor()
int android.webkit.WebViewClassic.getProgress()
int android.webkit.WebViewClassic.getScaledNavSlop()
int android.webkit.WebViewClassic.getScrollX()
int android.webkit.WebViewClassic.getScrollY()
int android.webkit.WebViewClassic.getTitleHeight()
int android.webkit.WebViewClassic.getViewHeight()
int android.webkit.WebViewClassic.getViewHeightWithTitle()
int android.webkit.WebViewClassic.getViewWidth()
int android.webkit.WebViewClassic.getVisibleTitleHeight()
int android.webkit.WebViewClassic.getWidth()
int android.widget.AccessibilityIterators$LineTextSegmentIterator.getLineEdgeIndex(int,int)
int android.widget.CalendarView.getDateTextAppearance()
int android.widget.CalendarView.getFocusedMonthDateColor()
int android.widget.CalendarView.getSelectedWeekBackgroundColor()
int android.widget.CalendarView.getShownWeekCount()
int android.widget.CalendarView.getUnfocusedMonthDateColor()
int android.widget.CalendarView.getWeekDayTextAppearance()
int android.widget.CalendarView.getWeekNumberColor()
int android.widget.CalendarView.getWeekSeparatorLineColor()
int android.widget.CompoundButton.getCompoundPaddingLeft()
int android.widget.CompoundButton.getCompoundPaddingRight()
int android.widget.CompoundButton.getHorizontalOffsetForDrawables()
int android.widget.CursorTreeAdapter$MyCursorHelper.getCount()
int android.widget.CursorTreeAdapter.getChildrenCount(int)
int android.widget.CursorTreeAdapter.getGroupCount()
int android.widget.Editor$ActionPopupWindow.getTextOffset()
int android.widget.Editor$ActionPopupWindow.getVerticalLocalPosition(int)
int android.widget.Editor$EasyEditPopupWindow.getTextOffset()
int android.widget.Editor$EasyEditPopupWindow.getVerticalLocalPosition(int)
int android.widget.Editor$InsertionHandleView.getHotspotX(Drawable,boolean)
int android.widget.Editor$PositionListener.getPositionX()
int android.widget.Editor$PositionListener.getPositionY()
int android.widget.Editor$SelectionEndHandleView.getHotspotX(Drawable,boolean)
int android.widget.Editor$SelectionModifierCursorController.getMaxTouchOffset()
int android.widget.Editor$SelectionModifierCursorController.getMinTouchOffset()
int android.widget.Editor$SelectionStartHandleView.getHotspotX(Drawable,boolean)
int android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter.getCount()
int android.widget.Editor$SuggestionsPopupWindow.getTextOffset()
int android.widget.Editor$SuggestionsPopupWindow.getVerticalLocalPosition(int)
int android.widget.FrameLayout.getForegroundGravity()
int android.widget.GridLayout$3.getGravityOffset(View,int)
int android.widget.GridLayout$4.getAlignmentValue(View,int,int)
int android.widget.GridLayout$4.getGravityOffset(View,int)
int android.widget.GridLayout$5.getGravityOffset(View,int)
int android.widget.GridLayout$Alignment.getSizeInCell(View,int,int)
int android.widget.GridLayout$Axis.getCount()
int android.widget.GridLayout$Bounds.getOffset(GridLayout,View,GridLayout$Alignment,int,boolean)
int android.widget.GridLayout$Spec.getFlexibility()
int android.widget.GridLayout.getAlignmentMode()
int android.widget.GridLayout.getColumnCount()
int android.widget.GridLayout.getMargin1(View,boolean,boolean)
int android.widget.GridLayout.getMeasurementIncludingMargin(View,boolean)
int android.widget.GridLayout.getOrientation()
int android.widget.GridLayout.getRowCount()
int android.widget.GridView.getColumnWidth()
int android.widget.GridView.getGravity()
int android.widget.GridView.getHorizontalSpacing()
int android.widget.GridView.getRequestedColumnWidth()
int android.widget.GridView.getRequestedHorizontalSpacing()
int android.widget.GridView.getVerticalSpacing()
int android.widget.ImageView.getImageAlpha()
int android.widget.ImageView.getMaxHeight()
int android.widget.ImageView.getMaxWidth()
int android.widget.RelativeLayout.getGravity()
int android.widget.RemoteViews$BitmapCache.getBitmapId(Bitmap)
int android.widget.RemoteViews$MemoryUsageCounter.getMemoryUsage()
int android.widget.RemoteViewsService$RemoteViewsFactoryAdapter.getCount()
int android.widget.RemoteViewsService$RemoteViewsFactoryAdapter.getViewTypeCount()
int android.widget.SearchView.getImeOptions()
int android.widget.SearchView.getInputType()
int android.widget.SearchView.getMaxWidth()
int android.widget.Spinner$DialogPopup.getHorizontalOffset()
int android.widget.Spinner$DialogPopup.getVerticalOffset()
int android.widget.Spinner.getDropDownHorizontalOffset()
int android.widget.Spinner.getDropDownVerticalOffset()
int android.widget.Spinner.getDropDownWidth()
int android.widget.Spinner.getGravity()
int android.widget.Switch.getCompoundPaddingLeft()
int android.widget.Switch.getSwitchMinWidth()
int android.widget.Switch.getSwitchPadding()
int android.widget.Switch.getThumbTextPadding()
int android.widget.TextView.getAccessibilityCursorPosition()
int android.widget.TextView.getHighlightColor()
int android.widget.TextView.getHorizontalOffsetForDrawables()
int android.widget.TextView.getMarqueeRepeatLimit()
int android.widget.TextView.getMaxEms()
int android.widget.TextView.getMaxHeight()
int android.widget.TextView.getMaxLines()
int android.widget.TextView.getMaxWidth()
int android.widget.TextView.getMinEms()
int android.widget.TextView.getMinHeight()
int android.widget.TextView.getMinLines()
int android.widget.TextView.getMinWidth()
int android.widget.TextView.getShadowColor()
int com.adobe.xmp.XMPException.getErrorCode()
int com.adobe.xmp.impl.CountOutputStream.getBytesWritten()
int com.adobe.xmp.impl.XMPDateTimeImpl.getDay()
int com.adobe.xmp.impl.XMPDateTimeImpl.getHour()
int com.adobe.xmp.impl.XMPDateTimeImpl.getMinute()
int com.adobe.xmp.impl.XMPDateTimeImpl.getMonth()
int com.adobe.xmp.impl.XMPDateTimeImpl.getNanoSecond()
int com.adobe.xmp.impl.XMPDateTimeImpl.getSecond()
int com.adobe.xmp.impl.XMPDateTimeImpl.getYear()
int com.adobe.xmp.impl.XMPNode.getChildrenLength()
int com.adobe.xmp.impl.XMPNode.getQualifierLength()
int com.adobe.xmp.impl.xpath.XMPPathSegment.getAliasForm()
int com.adobe.xmp.impl.xpath.XMPPathSegment.getKind()
int com.adobe.xmp.options.AliasOptions.getValidOptions()
int com.adobe.xmp.options.Options.getOptions()
int com.adobe.xmp.options.ParseOptions.getValidOptions()
int com.adobe.xmp.options.PropertyOptions.getValidOptions()
int com.adobe.xmp.options.SerializeOptions.getBaseIndent()
int com.adobe.xmp.options.SerializeOptions.getPadding()
int com.adobe.xmp.options.SerializeOptions.getValidOptions()
int com.android.bluetooth.a2dp.A2dpService.getConnectionState(BluetoothDevice)
int com.android.bluetooth.a2dp.A2dpService.getPriority(BluetoothDevice)
int com.android.bluetooth.a2dp.A2dpStateMachine.getConnectionState(BluetoothDevice)
int com.android.bluetooth.btservice.AdapterProperties.getBluetoothClass()
int com.android.bluetooth.btservice.AdapterProperties.getConnectionState()
int com.android.bluetooth.btservice.AdapterProperties.getDiscoverableTimeout()
int com.android.bluetooth.btservice.AdapterProperties.getProfileConnectionState(int)
int com.android.bluetooth.btservice.AdapterProperties.getScanMode()
int com.android.bluetooth.btservice.AdapterProperties.getState()
int com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getAdapterConnectionState()
int com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getDiscoverableTimeout()
int com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getScanMode()
int com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.getState()
int com.android.bluetooth.btservice.AdapterService.getAdapterConnectionState()
int com.android.bluetooth.btservice.AdapterService.getBondState(BluetoothDevice)
int com.android.bluetooth.btservice.AdapterService.getDiscoverableTimeout()
int com.android.bluetooth.btservice.AdapterService.getProfileConnectionState(int)
int com.android.bluetooth.btservice.AdapterService.getRemoteClass(BluetoothDevice)
int com.android.bluetooth.btservice.AdapterService.getScanMode()
int com.android.bluetooth.btservice.AdapterService.getState()
int com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getBluetoothClass()
int com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getBondState()
int com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getDeviceType()
int com.android.bluetooth.hdp.HealthService.getHealthDeviceConnectionState(BluetoothDevice)
int com.android.bluetooth.hfp.HeadsetPhoneState.getBatteryCharge()
int com.android.bluetooth.hfp.HeadsetPhoneState.getCallState()
int com.android.bluetooth.hfp.HeadsetPhoneState.getMicVolume()
int com.android.bluetooth.hfp.HeadsetPhoneState.getNumActiveCall()
int com.android.bluetooth.hfp.HeadsetPhoneState.getNumHeldCall()
int com.android.bluetooth.hfp.HeadsetPhoneState.getRoam()
int com.android.bluetooth.hfp.HeadsetPhoneState.getService()
int com.android.bluetooth.hfp.HeadsetPhoneState.getSignal()
int com.android.bluetooth.hfp.HeadsetPhoneState.getSpeakerVolume()
int com.android.bluetooth.hfp.HeadsetService.getAudioState(BluetoothDevice)
int com.android.bluetooth.hfp.HeadsetService.getBatteryUsageHint(BluetoothDevice)
int com.android.bluetooth.hfp.HeadsetService.getConnectionState(BluetoothDevice)
int com.android.bluetooth.hfp.HeadsetService.getPriority(BluetoothDevice)
int com.android.bluetooth.hfp.HeadsetStateMachine.getAudioState(BluetoothDevice)
int com.android.bluetooth.hfp.HeadsetStateMachine.getConnectionState(BluetoothDevice)
int com.android.bluetooth.hid.HidService.getConnectionState(BluetoothDevice)
int com.android.bluetooth.hid.HidService.getPriority(BluetoothDevice)
int com.android.bluetooth.opp.BluetoothOppManager.getBatchSize()
int com.android.bluetooth.opp.BluetoothOppPreference.getChannel(BluetoothDevice,int)
int com.android.bluetooth.opp.BluetoothOppTransfer.getBatchId()
int com.android.bluetooth.opp.TestTcpServer.onPut(Operation)
int com.android.bluetooth.pan.PanService.getConnectionState(BluetoothDevice)
int com.android.bluetooth.pbap.BluetoothPbapCallLogComposer.getCount()
int com.android.bluetooth.pbap.BluetoothPbapVcardManager.getCallHistorySize(int)
int com.android.bluetooth.pbap.BluetoothPbapVcardManager.getContactsSize()
int com.android.bluetooth.pbap.BluetoothPbapVcardManager.getPhonebookSize(int)
int com.android.browser.BreadCrumbView.getBaseline()
int com.android.browser.BrowserHistoryPage$HistoryAdapter.getGroupCount()
int com.android.browser.BrowserHistoryPage$HistoryChildWrapper.getCount()
int com.android.browser.BrowserHistoryPage$HistoryGroupWrapper.getCount()
int com.android.browser.BrowserSettings.getAdjustedDoubleTapZoom(int)
int com.android.browser.BrowserSettings.getAdjustedMinimumFontSize(int)
int com.android.browser.BrowserSettings.getAdjustedTextZoom(int)
int com.android.browser.BrowserSettings.getDoubleTapZoom()
int com.android.browser.BrowserSettings.getMinimumFontSize()
int com.android.browser.BrowserSettings.getPageCacheCapacity()
int com.android.browser.BrowserSettings.getRawTextZoom(int)
int com.android.browser.BrowserSettings.getTextZoom()
int com.android.browser.BrowserSettings.getUserAgent()
int com.android.browser.BrowserWebView.getTitleHeight()
int com.android.browser.ComboViewActivity$TabsAdapter.getCount()
int com.android.browser.Controller.getDesiredThumbnailHeight(Context)
int com.android.browser.Controller.getDesiredThumbnailWidth(Context)
int com.android.browser.Controller.getMaxTabs()
int com.android.browser.DateSortedExpandableListAdapter.getChildrenCount(int)
int com.android.browser.DateSortedExpandableListAdapter.getGroupCount()
int com.android.browser.DeviceAccountLogin.getState()
int com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList.getCount()
int com.android.browser.ErrorConsoleView.getShowState()
int com.android.browser.NavScreen$TabAdapter.getCount()
int com.android.browser.NavTabScroller.getGap()
int com.android.browser.NavTabScroller.getScrollValue()
int com.android.browser.PieControl$TabAdapter.getCount()
int com.android.browser.SuggestionsAdapter$CursorSource.getCount()
int com.android.browser.SuggestionsAdapter$SuggestionResults.getLineCount()
int com.android.browser.SuggestionsAdapter.getCount()
int com.android.browser.Tab.getLoadProgress()
int com.android.browser.TabControl.getCurrentPosition()
int com.android.browser.TabControl.getTabCount()
int com.android.browser.TabControl.getTabPosition(Tab)
int com.android.browser.TabScrollView$TabLayout.getChildDrawingOrder(int,int)
int com.android.browser.TabScrollView.getChildIndex(View)
int com.android.browser.TabScrollView.getScroll()
int com.android.browser.TitleBar.getEmbeddedHeight()
int com.android.browser.UrlInputView.getState()
int com.android.browser.XLargeUi.getContentWidth()
int com.android.browser.addbookmark.FolderSpinnerAdapter.getCount()
int com.android.browser.preferences.WebsiteSettingsFragment$Site.getFeatureByIndex(int)
int com.android.browser.preferences.WebsiteSettingsFragment$Site.getFeatureCount()
int com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter.getCount()
int com.android.browser.provider.BrowserProvider$MySuggestionCursor.getCount()
int com.android.browser.provider.BrowserProvider$MySuggestionCursor.getInt(int)
int com.android.browser.provider.BrowserProvider.update(Uri,ContentValues,String,String[])
int com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getCount()
int com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getInt(int)
int com.android.browser.provider.BrowserProvider2.getUrlCount(SQLiteDatabase,String,String)
int com.android.browser.provider.BrowserProvider2.updateInTransaction(Uri,ContentValues,String,String[],boolean)
int com.android.browser.provider.SQLiteContentProvider.bulkInsert(Uri,ContentValues[])
int com.android.browser.provider.SQLiteContentProvider.update(Uri,ContentValues,String,String[])
int com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getCount()
int com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getInt(int)
int com.android.browser.util.ThreadedCursorAdapter.getCount()
int com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getChildrenCount(int)
int com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getGroupCount()
int com.android.browser.view.PieItem.getInnerRadius()
int com.android.browser.view.PieItem.getLevel()
int com.android.browser.view.PieItem.getOuterRadius()
int com.android.browser.view.ScrollerView.getMaxScrollAmount()
int com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory.getCount()
int com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory.getViewTypeCount()
int com.android.calendar.AsyncQueryService.getNextToken()
int com.android.calendar.CalendarController$EventInfo.getResponse()
int com.android.calendar.CalendarController.getPreviousViewType()
int com.android.calendar.CalendarController.getViewType()
int com.android.calendar.CalendarEventModel$ReminderEntry.getMethod()
int com.android.calendar.CalendarEventModel$ReminderEntry.getMinutes()
int com.android.calendar.CalendarViewAdapter.getCount()
int com.android.calendar.CalendarViewAdapter.getItemViewType(int)
int com.android.calendar.CalendarViewAdapter.getViewTypeCount()
int com.android.calendar.DayOfMonthDrawable.getOpacity()
int com.android.calendar.DayView.getEventsAlpha()
int com.android.calendar.DayView.getFirstVisibleHour()
int com.android.calendar.EditResponseHelper.getWhichEvents()
int com.android.calendar.Event.getColumn()
int com.android.calendar.Event.getMaxColumns()
int com.android.calendar.TimezoneAdapter.getRowById(String)
int com.android.calendar.Utils.getDaysPerWeek(Context)
int com.android.calendar.Utils.getDeclinedColorFromColor(int)
int com.android.calendar.Utils.getDisplayColorFromColor(int)
int com.android.calendar.Utils.getFirstDayOfWeek(Context)
int com.android.calendar.Utils.getJulianMondayFromWeeksSinceEpoch(int)
int com.android.calendar.Utils.getSharedPreference(Context,String,int)
int com.android.calendar.Utils.getWeekNumberFromTime(long,Context)
int com.android.calendar.Utils.getWeeksSinceEpochFromJulianDay(int,int)
int com.android.calendar.agenda.AgendaByDayAdapter.getCount()
int com.android.calendar.agenda.AgendaByDayAdapter.getCursorPosition(int)
int com.android.calendar.agenda.AgendaByDayAdapter.getHeaderItemsCount(int)
int com.android.calendar.agenda.AgendaByDayAdapter.getHeaderPosition(int)
int com.android.calendar.agenda.AgendaByDayAdapter.getItemViewType(int)
int com.android.calendar.agenda.AgendaByDayAdapter.getViewTypeCount()
int com.android.calendar.agenda.AgendaWindowAdapter.getCount()
int com.android.calendar.agenda.AgendaWindowAdapter.getHeaderItemsNumber(int)
int com.android.calendar.agenda.AgendaWindowAdapter.getHeaderPositionFromItemPosition(int)
int com.android.calendar.agenda.AgendaWindowAdapter.getItemViewType(int)
int com.android.calendar.agenda.AgendaWindowAdapter.getStickyHeaderHeight()
int com.android.calendar.agenda.AgendaWindowAdapter.getViewTypeCount()
int com.android.calendar.alerts.AlertService.processQuery(Cursor,Context,long,ArrayList,ArrayList,ArrayList)
int com.android.calendar.event.EditEventView$TitleAdapter.getCount()
int com.android.calendar.month.MonthWeekEventsView.getDayIndexFromLocation(float)
int com.android.calendar.month.SimpleWeekView.getFirstJulianDay()
int com.android.calendar.month.SimpleWeekView.getFirstMonth()
int com.android.calendar.month.SimpleWeekView.getLastMonth()
int com.android.calendar.month.SimpleWeeksAdapter.getCount()
int com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.getCount()
int com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.getVisible(int)
int com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.getCount()
int com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.getCount()
int com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.getViewTypeCount()
int com.android.camera.ActivityBase.getResultCode()
int com.android.camera.CameraHolder.getBackCameraId()
int com.android.camera.CameraHolder.getFrontCameraId()
int com.android.camera.CameraHolder.getNumberOfCameras()
int com.android.camera.CameraScreenNail.getHeight()
int com.android.camera.CameraScreenNail.getUncroppedRenderHeight()
int com.android.camera.CameraScreenNail.getUncroppedRenderWidth()
int com.android.camera.CameraScreenNail.getWidth()
int com.android.camera.CameraSettings.getMaxVideoDuration(Context)
int com.android.camera.ComboPreferences.getInt(String,int)
int com.android.camera.FocusOverlayManager.getFocusState()
int com.android.camera.IconListPreference.getSingleIcon()
int com.android.camera.MosaicFrameProcessor.createMosaic(boolean)
int com.android.camera.PanoramaModule.getPreviewBufSize()
int com.android.camera.Util.getCameraOrientation(int)
int com.android.camera.Util.getDisplayOrientation(int,int)
int com.android.camera.Util.getJpegRotation(int,int)
int com.android.camera.drawable.TextDrawable.getIntrinsicHeight()
int com.android.camera.drawable.TextDrawable.getIntrinsicWidth()
int com.android.camera.drawable.TextDrawable.getOpacity()
int com.android.camera.ui.OverlayRenderer.getHeight()
int com.android.camera.ui.OverlayRenderer.getWidth()
int com.android.camera.ui.PieItem.getInnerRadius()
int com.android.camera.ui.PieItem.getIntrinsicHeight()
int com.android.camera.ui.PieItem.getIntrinsicWidth()
int com.android.camera.ui.PieItem.getOuterRadius()
int com.android.camera.ui.PieRenderer.getSize()
int com.android.camera.ui.RenderOverlay.getWindowPositionX()
int com.android.camera.ui.RenderOverlay.getWindowPositionY()
int com.android.camera.ui.Switch.getCompoundPaddingRight()
int com.android.commands.am.Am$MyActivityController.appEarlyNotResponding(String,int,String)
int com.android.commands.am.Am$MyActivityController.appNotResponding(String,int,String)
int com.android.commands.monkey.Monkey$ActivityController.appNotResponding(String,int,String)
int com.android.commands.monkey.MonkeyEvent.getEventType()
int com.android.commands.monkey.MonkeyKeyEvent.getAction()
int com.android.commands.monkey.MonkeyKeyEvent.getKeyCode()
int com.android.commands.monkey.MonkeyMotionEvent.getAction()
int com.android.commands.monkey.MonkeySourceRandom.getKeyCode(String)
int com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter.getLimit()
int com.android.common.widget.CompositeCursorAdapter.getCount()
int com.android.common.widget.CompositeCursorAdapter.getPartitionCount()
int com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask$2.getMaximumScrollableHeaderOffset()
int com.android.contacts.ContactPhotoManager.getDefaultAvatarResId(Context,int,boolean)
int com.android.contacts.ContactPhotoManager.getDefaultAvatarResId(boolean,boolean)
int com.android.contacts.ContactPhotoManagerImpl$Request.getRequestedExtent()
int com.android.contacts.ContactsUtils.getThumbnailSize(Context)
int com.android.contacts.TypePrecedence.getTypePrecedence(String,int)
int com.android.contacts.activities.ActionBarAdapter.getCurrentTab()
int com.android.contacts.activities.DialtactsActivity$PageChangeListener.getCurrentPosition()
int com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter.getCount()
int com.android.contacts.activities.PeopleActivity$TabPagerAdapter.getCount()
int com.android.contacts.activities.PeopleActivity$TabPagerAdapter.getItemPosition(Object)
int com.android.contacts.calllog.CallDetailHistoryAdapter.getCount()
int com.android.contacts.calllog.CallDetailHistoryAdapter.getItemViewType(int)
int com.android.contacts.calllog.CallDetailHistoryAdapter.getViewTypeCount()
int com.android.contacts.calllog.CallTypeIconsView.getCallType(int)
int com.android.contacts.calllog.CallTypeIconsView.getCount()
int com.android.contacts.calllog.ExtendedCursor.getCount()
int com.android.contacts.calllog.ExtendedCursor.getInt(int)
int com.android.contacts.datepicker.DatePicker$SavedState.getDay()
int com.android.contacts.datepicker.DatePicker$SavedState.getMonth()
int com.android.contacts.datepicker.DatePicker$SavedState.getYear()
int com.android.contacts.datepicker.DatePicker.getDayOfMonth()
int com.android.contacts.datepicker.DatePicker.getMonth()
int com.android.contacts.datepicker.DatePicker.getYear()
int com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter.getCount()
int com.android.contacts.detail.ContactDetailFragment$ViewAdapter.getCount()
int com.android.contacts.detail.ContactDetailFragment$ViewAdapter.getViewTypeCount()
int com.android.contacts.detail.ContactDetailFragment$ViewEntry.getViewType()
int com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions.getPaddingBottom()
int com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions.getPaddingLeft()
int com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions.getPaddingRight()
int com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions.getPaddingTop()
int com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions.getWidePaddingLeft()
int com.android.contacts.detail.ContactDetailFragment.getFirstListItemOffset()
int com.android.contacts.detail.ContactDetailFragmentCarousel.getCurrentPage()
int com.android.contacts.detail.ContactDetailTabCarousel.getAllowedHorizontalScrollLength()
int com.android.contacts.detail.ContactDetailTabCarousel.getAllowedVerticalScrollLength()
int com.android.contacts.detail.ContactDetailUpdatesFragment.getFirstListItemOffset()
int com.android.contacts.detail.ContactDetailViewPagerAdapter.getCount()
int com.android.contacts.detail.ContactDetailViewPagerAdapter.getItemPosition(Object)
int com.android.contacts.detail.StreamItemAdapter.getCount()
int com.android.contacts.detail.StreamItemAdapter.getItemViewType(int)
int com.android.contacts.detail.StreamItemAdapter.getViewTypeCount()
int com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter.getCount()
int com.android.contacts.editor.AggregationSuggestionEngine.getSuggestedContactCount()
int com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter.getCount()
int com.android.contacts.editor.EventFieldEditorView.getDefaultHourForBirthday()
int com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter.getItemViewType(int)
int com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter.getViewTypeCount()
int com.android.contacts.editor.KindSectionView.getEditorCount()
int com.android.contacts.editor.PhotoActionPopup$ChoiceListItem.getId()
int com.android.contacts.editor.ViewIdGenerator.getId(RawContactDelta,DataKind,RawContactDelta$ValuesDelta,int)
int com.android.contacts.group.GroupBrowseListAdapter.getCount()
int com.android.contacts.group.GroupBrowseListAdapter.getSelectedGroupPosition()
int com.android.contacts.group.GroupDetailFragment$1.getApproximateTileWidth()
int com.android.contacts.group.GroupEditorFragment$MemberListAdapter.getCount()
int com.android.contacts.group.GroupListItem.getMemberCount()
int com.android.contacts.interactions.GroupCreationDialogFragment.getTitleResourceId()
int com.android.contacts.list.AccountFilterActivity$FilterListAdapter.getCount()
int com.android.contacts.list.ContactEntryListAdapter.getContactNameDisplayOrder()
int com.android.contacts.list.ContactEntryListAdapter.getDirectoryResultLimit()
int com.android.contacts.list.ContactEntryListAdapter.getItemViewType(int,int)
int com.android.contacts.list.ContactEntryListAdapter.getSortOrder()
int com.android.contacts.list.ContactEntryListAdapter.getViewTypeCount()
int com.android.contacts.list.ContactEntryListFragment.getContactNameDisplayOrder()
int com.android.contacts.list.ContactEntryListFragment.getDirectorySearchMode()
int com.android.contacts.list.ContactEntryListFragment.getSortOrder()
int com.android.contacts.list.ContactListAdapter.getSelectedContactPosition()
int com.android.contacts.list.ContactListItemView.getDefaultPhotoViewSize()
int com.android.contacts.list.ContactTileAdapter.getColumnCount()
int com.android.contacts.list.ContactTileAdapter.getCount()
int com.android.contacts.list.ContactTileAdapter.getFrequentHeaderPosition()
int com.android.contacts.list.ContactTileAdapter.getItemViewType(int)
int com.android.contacts.list.ContactTileAdapter.getNumFrequents()
int com.android.contacts.list.ContactTileAdapter.getViewTypeCount()
int com.android.contacts.list.ContactTileListFragment$2.getApproximateTileWidth()
int com.android.contacts.list.ContactTilePhoneFrequentView.getApproximateImageSize()
int com.android.contacts.list.ContactsRequest.getActionCode()
int com.android.contacts.list.ContactsSectionIndexer.getPositionForSection(int)
int com.android.contacts.list.ContactsSectionIndexer.getSectionForPosition(int)
int com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getChildrenCount(int)
int com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getGroupCount()
int com.android.contacts.list.CustomContactListFilterActivity.getSyncMode(CustomContactListFilterActivity$AccountDisplay)
int com.android.contacts.list.DirectoryPartition.getStatus()
int com.android.contacts.list.JoinContactListAdapter.getItemViewType(int,int)
int com.android.contacts.list.JoinContactListAdapter.getViewTypeCount()
int com.android.contacts.list.PhoneFavoriteFragment$ContactTileAdapterListener.getApproximateTileWidth()
int com.android.contacts.list.PhoneFavoriteMergedAdapter.getCount()
int com.android.contacts.list.PhoneFavoriteMergedAdapter.getItemViewType(int)
int com.android.contacts.list.PhoneFavoriteMergedAdapter.getPositionForSection(int)
int com.android.contacts.list.PhoneFavoriteMergedAdapter.getSectionForPosition(int)
int com.android.contacts.list.PhoneFavoriteMergedAdapter.getViewTypeCount()
int com.android.contacts.model.Contact.getDirectoryExportSupport()
int com.android.contacts.model.Contact.getDisplayNameSource()
int com.android.contacts.model.RawContactDelta$ValuesDelta.getEmailType()
int com.android.contacts.model.RawContactDelta$ValuesDelta.getPhoneType()
int com.android.contacts.model.RawContactDelta.getEntryCount(boolean)
int com.android.contacts.model.RawContactDelta.getMimeEntriesCount(String,boolean)
int com.android.contacts.model.account.AccountType.getInviteContactActionResId()
int com.android.contacts.model.account.AccountType.getViewGroupLabelResId()
int com.android.contacts.model.account.BaseAccountType$EmailActionInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.BaseAccountType$EventActionInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.BaseAccountType$ImActionInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.BaseAccountType$PhoneActionAltInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.BaseAccountType$PhoneActionInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.BaseAccountType$PostalActionInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.BaseAccountType$RelationActionInflater.getTypeLabelResource(Integer)
int com.android.contacts.model.account.ExternalAccountType.getInviteContactActionResId()
int com.android.contacts.model.account.ExternalAccountType.getViewGroupLabelResId()
int com.android.contacts.model.dataitem.DataItem.getKindTypeColumn()
int com.android.contacts.model.dataitem.ImDataItem.getChatCapability()
int com.android.contacts.preference.ContactsPreferences.getDefaultDisplayOrder()
int com.android.contacts.preference.ContactsPreferences.getDefaultSortOrder()
int com.android.contacts.preference.ContactsPreferences.getDisplayOrder()
int com.android.contacts.preference.ContactsPreferences.getSortOrder()
int com.android.contacts.quickcontact.DataAction.getPresence()
int com.android.contacts.quickcontact.QuickContactActivity$ViewPagerAdapter.getCount()
int com.android.contacts.quickcontact.QuickContactListFragment$1.getCount()
int com.android.contacts.util.AccountsListAdapter.getCount()
int com.android.contacts.util.BitmapUtil.getSmallerExtentFromBytes(byte[])
int com.android.contacts.util.DataStatus.getPresence()
int com.android.contacts.util.HtmlUtils$StreamItemQuoteSpan.getLeadingMargin(boolean)
int com.android.contacts.util.ThemeUtils.getAttribute(Resources$Theme,int)
int com.android.contacts.vcard.ExportProcessor.getType()
int com.android.contacts.vcard.ImportProcessor.getType()
int com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.getDesiredClipPosition()
int com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action.getMessageId()
int com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState.getCallDetailsMessageId()
int com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState.getCallLogMessageId()
int com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState.getPriority()
int com.android.contacts.voicemail.VoicemailStatusHelperImpl.getNumberActivityVoicemailSources(Cursor)
int com.android.contacts.widget.IndexerListAdapter.getIndexedPartition()
int com.android.contacts.widget.IndexerListAdapter.getPinnedHeaderCount()
int com.android.contacts.widget.IndexerListAdapter.getPositionForSection(int)
int com.android.contacts.widget.IndexerListAdapter.getSectionForPosition(int)
int com.android.contacts.widget.PinnedHeaderListAdapter.getPinnedHeaderCount()
int com.android.contacts.widget.PinnedHeaderListAdapter.getScrollPositionForHeader(int)
int com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter.getPinnedHeaderCount()
int com.android.contacts.widget.PinnedHeaderListView.getPinnedHeaderHeight(int)
int com.android.contacts.widget.PinnedHeaderListView.getPositionAt(int)
int com.android.contacts.widget.PinnedHeaderListView.getTotalTopPinnedHeaderHeight()
int com.android.deskclock.Alarm$DaysOfWeek.getCoded()
int com.android.deskclock.Alarm$DaysOfWeek.getNextAlarm(Calendar)
int com.android.deskclock.AlarmAlert.getLayoutResId()
int com.android.deskclock.AlarmAlertFullScreen.getLayoutResId()
int com.android.deskclock.AlarmClock$AlarmItemAdapter.getSelectedItemsNum()
int com.android.deskclock.AlarmClock$AlarmItemAdapter.getViewTypeCount()
int com.android.deskclock.DeskClock$TabsAdapter$TabInfo.getPosition()
int com.android.deskclock.DeskClock$TabsAdapter.getCount()
int com.android.deskclock.TimePicker.getHours()
int com.android.deskclock.TimePicker.getLayoutId()
int com.android.deskclock.TimePicker.getMinutes()
int com.android.deskclock.TimerSetupView.getLayoutId()
int com.android.deskclock.TimerSetupView.getTime()
int com.android.deskclock.Utils.getGrayColorId()
int com.android.deskclock.Utils.getPressedColorId()
int com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.getCount()
int com.android.deskclock.stopwatch.StopwatchService.onStartCommand(Intent,int,int)
int com.android.deskclock.timer.TimerFragment$TimersListAdapter.getCount()
int com.android.deskclock.widget.multiwaveview.GlowPadView.getDirectionDescriptionsResourceId()
int com.android.deskclock.widget.multiwaveview.GlowPadView.getSuggestedMinimumHeight()
int com.android.deskclock.widget.multiwaveview.GlowPadView.getSuggestedMinimumWidth()
int com.android.deskclock.widget.multiwaveview.GlowPadView.getTargetDescriptionsResourceId()
int com.android.deskclock.widget.multiwaveview.GlowPadView.getTargetPosition(int)
int com.android.deskclock.widget.multiwaveview.GlowPadView.getTargetResourceId()
int com.android.deskclock.widget.multiwaveview.PointCloud.getAlphaForPoint(PointCloud$Point)
int com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.getOpacity()
int com.android.deskclock.widget.multiwaveview.TargetDrawable.getHeight()
int com.android.deskclock.widget.multiwaveview.TargetDrawable.getResourceId()
int com.android.deskclock.widget.multiwaveview.TargetDrawable.getWidth()
int com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getCount()
int com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getPositionForSection(int)
int com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getSectionForPosition(int)
int com.android.deskclock.worldclock.WorldClockAdapter.getCount()
int com.android.email.Controller.searchMessages(long,SearchParams)
int com.android.email.EmailConnectivityManager.getActiveNetworkType()
int com.android.email.EmailConnectivityManager.getActiveNetworkType(ConnectivityManager)
int com.android.email.EmailConnectivityManager.getActiveNetworkType(Context)
int com.android.email.FixedLengthInputStream.getLength()
int com.android.email.FolderProperties.getMessageCount(Cursor)
int com.android.email.FolderProperties.getMessageCount(int,int,int)
int com.android.email.FolderProperties.getMessageCountForCombinedMailbox(Context,long)
int com.android.email.LegacyConversions.inferMailboxTypeFromName(Context,String)
int com.android.email.NotificationController.getRingerMode()
int com.android.email.Preferences.getAutoAdvanceDirection()
int com.android.email.Preferences.getOneTimeInitializationProgress()
int com.android.email.Preferences.getTextZoom()
int com.android.email.RecipientAdapter.getDefaultPhotoResource()
int com.android.email.RecipientAdapter.getItemLayout()
int com.android.email.ResourceHelper.getAccountColor(long)
int com.android.email.ResourceHelper.getAccountColorId(long)
int com.android.email.ResourceHelper.getAccountColorIndex(long)
int com.android.email.SecurityPolicy.getInactiveReasons(Policy)
int com.android.email.Throttle.getTimeoutForTest()
int com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getAccountCount()
int com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getMailboxMessageCount()
int com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getRecentMailboxCount()
int com.android.email.activity.AccountSelectorAdapter.getItemViewType(int)
int com.android.email.activity.AccountSelectorAdapter.getViewTypeCount()
int com.android.email.activity.MailboxFragmentAdapter.getItemViewType(int)
int com.android.email.activity.MailboxFragmentAdapter.getViewTypeCount()
int com.android.email.activity.MessageListItemCoordinates.getHeight(Context,int)
int com.android.email.activity.MessageListItemCoordinates.getHeight(View,boolean)
int com.android.email.activity.MessageListItemCoordinates.getMode(Context,int,boolean)
int com.android.email.activity.MessageListItemCoordinates.getWidth(View,boolean)
int com.android.email.activity.MessageOrderManager.getCurrentPosition()
int com.android.email.activity.MessageOrderManager.getTotalMessageCount()
int com.android.email.activity.MessagesAdapter$SearchResultsCursor.getResultsCount()
int com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment.getFilter()
int com.android.email.activity.ThreePaneLayout.getLeftPaneId()
int com.android.email.activity.ThreePaneLayout.getMiddlePaneId()
int com.android.email.activity.ThreePaneLayout.getPaneState()
int com.android.email.activity.ThreePaneLayout.getRightPaneId()
int com.android.email.activity.ThreePaneLayout.getVisiblePanes()
int com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback.getTitleMode()
int com.android.email.activity.UIControllerOnePane.getLayoutId()
int com.android.email.activity.UIControllerSearchTwoPane.getLayoutId()
int com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback.getTitleMode()
int com.android.email.activity.UIControllerTwoPane.getLayoutId()
int com.android.email.activity.setup.SetupData.getFlowMode()
int com.android.email.mail.store.ImapFolder.getMessageCount()
int com.android.email.mail.store.ImapFolder.getUnreadMessageCount()
int com.android.email.mail.store.Pop3Store$Pop3Folder.getMessageCount()
int com.android.email.mail.store.Pop3Store$Pop3Folder.getUnreadMessageCount()
int com.android.email.mail.store.imap.ImapString.getNumberOrZero()
int com.android.email.mail.transport.MailTransport.getPort()
int com.android.email.provider.ContentCache$CachedCursor.getCount()
int com.android.email.provider.ContentCache$CachedCursor.getPosition()
int com.android.email.provider.ContentCache$CounterMap.getCount(Object)
int com.android.email.provider.EmailProvider.update(Uri,ContentValues,String,String[])
int com.android.email.service.AttachmentDownloadService$AccountManagerStub.getNumberOfAccounts()
int com.android.email.service.AttachmentDownloadService.getQueueSize()
int com.android.email.service.AttachmentDownloadService.getSize()
int com.android.email.service.EmailServiceUtils$NullEmailService.getApiLevel()
int com.android.email.widget.EmailWidget.getCount()
int com.android.email.widget.EmailWidget.getViewTypeCount()
int com.android.email.widget.EmailWidgetLoader$WidgetCursor.getMessageCount()
int com.android.emailcommon.TrafficFlags.getAttachmentFlags(Context,Account)
int com.android.emailcommon.TrafficFlags.getSmtpFlags(Context,Account)
int com.android.emailcommon.TrafficFlags.getSyncFlags(Context,Account)
int com.android.emailcommon.mail.Multipart.getCount()
int com.android.emailcommon.provider.EmailContent.update(Context,ContentValues)
int com.android.emailcommon.service.AccountServiceProxy.getAccountColor(long)
int com.android.emailcommon.service.EmailServiceProxy.getApiLevel()
int com.android.emailcommon.service.IAccountService$Stub$Proxy.getAccountColor(long)
int com.android.emailcommon.service.IEmailService$Stub$Proxy.getApiLevel()
int com.android.emailcommon.service.IEmailService$Stub$Proxy.searchMessages(long,SearchParams,long)
int com.android.emailcommon.utility.EmailAsyncTask$Tracker.getTaskCountForTest()
int com.android.ex.chips.BaseRecipientAdapter$DirectoryFilter.getLimit()
int com.android.ex.chips.BaseRecipientAdapter.getCount()
int com.android.ex.chips.BaseRecipientAdapter.getDefaultPhotoResource()
int com.android.ex.chips.BaseRecipientAdapter.getDestinationId()
int com.android.ex.chips.BaseRecipientAdapter.getDestinationTypeId()
int com.android.ex.chips.BaseRecipientAdapter.getDisplayNameId()
int com.android.ex.chips.BaseRecipientAdapter.getItemLayout()
int com.android.ex.chips.BaseRecipientAdapter.getItemViewType(int)
int com.android.ex.chips.BaseRecipientAdapter.getPhotoId()
int com.android.ex.chips.BaseRecipientAdapter.getQueryType()
int com.android.ex.chips.BaseRecipientAdapter.getViewTypeCount()
int com.android.ex.chips.RecipientEditTextView.getViewWidth()
int com.android.ex.chips.RecipientEntry.getDestinationType()
int com.android.ex.chips.RecipientEntry.getEntryType()
int com.android.ex.variablespeed.EngineParameters.getAudioStreamType()
int com.android.ex.variablespeed.EngineParameters.getDecodeBufferInitialSize()
int com.android.ex.variablespeed.EngineParameters.getDecodeBufferMaxSize()
int com.android.ex.variablespeed.EngineParameters.getMaxPlayBufferCount()
int com.android.ex.variablespeed.EngineParameters.getStartPositionMillis()
int com.android.ex.variablespeed.EngineParameters.getTargetFrames()
int com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy.getCurrentPosition()
int com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy.getDuration()
int com.android.ex.variablespeed.VariableSpeed.getCurrentPosition()
int com.android.ex.variablespeed.VariableSpeed.getDuration()
int com.android.exchange.EasOutboxService$SendMailParser.getStatus()
int com.android.exchange.EasOutboxService.sendMessage(File,long)
int com.android.exchange.EasResponse.getLength()
int com.android.exchange.EasResponse.getStatus()
int com.android.exchange.ExchangeService.getStatusChangeCount(String)
int com.android.exchange.ExchangeService.getStatusType(String)
int com.android.exchange.adapter.ItemOperationsParser.getStatusCode()
int com.android.exchange.adapter.MoveItemsParser.getStatusCode()
int com.android.exchange.adapter.Parser.getValueInt()
int com.android.exchange.adapter.PingParser.getSyncStatus()
int com.android.exchange.adapter.Search$SearchParser.getTotalResults()
int com.android.exchange.adapter.Search.searchMessages(Context,long,SearchParams,long)
int com.android.exchange.utility.CalendarUtilities.getLong(byte[],int)
int com.android.exchange.utility.CalendarUtilities.getTrueTransitionHour(GregorianCalendar)
int com.android.exchange.utility.CalendarUtilities.getTrueTransitionMinute(GregorianCalendar)
int com.android.exchange.utility.CalendarUtilities.getWord(byte[],int)
int com.android.gallery3d.app.ActivityState.getBackgroundColorId()
int com.android.gallery3d.app.AlbumPage.getBackgroundColorId()
int com.android.gallery3d.app.AlbumSetDataLoader.getTotalCount(int)
int com.android.gallery3d.app.AlbumSetPage.getBackgroundColorId()
int com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter.getCount()
int com.android.gallery3d.app.GalleryActionBar$ClusterAdapter.getCount()
int com.android.gallery3d.app.GalleryActionBar.getClusterTypeAction()
int com.android.gallery3d.app.GalleryActionBar.getHeight()
int com.android.gallery3d.app.ManageCachePage.getBackgroundColorId()
int com.android.gallery3d.app.OrientationManager.getCompensation()
int com.android.gallery3d.app.OrientationManager.getDisplayRotation()
int com.android.gallery3d.app.PackagesMonitor.getPackagesVersion(Context)
int com.android.gallery3d.app.PhotoDataAdapter.getCurrentIndex()
int com.android.gallery3d.app.PhotoDataAdapter.getImageHeight()
int com.android.gallery3d.app.PhotoDataAdapter.getImageRotation(int)
int com.android.gallery3d.app.PhotoDataAdapter.getImageWidth()
int com.android.gallery3d.app.PhotoDataAdapter.getLevelCount()
int com.android.gallery3d.app.PhotoDataAdapter.getLoadingState(int)
int com.android.gallery3d.app.PhotoPage$MyDetailsSource.setIndex()
int com.android.gallery3d.app.PhotoPage.getBackgroundColorId()
int com.android.gallery3d.app.SinglePhotoDataAdapter.getCurrentIndex()
int com.android.gallery3d.app.SinglePhotoDataAdapter.getImageRotation(int)
int com.android.gallery3d.app.SinglePhotoDataAdapter.getLoadingState(int)
int com.android.gallery3d.app.SlideshowPage.getBackgroundColorId()
int com.android.gallery3d.app.StateManager.getStateCount()
int com.android.gallery3d.app.TimeBar.getBarHeight()
int com.android.gallery3d.app.TimeBar.getPreferredHeight()
int com.android.gallery3d.common.EntrySchema.getColumnIndex(String)
int com.android.gallery3d.common.OverScroller.getCurrX()
int com.android.gallery3d.common.OverScroller.getFinalX()
int com.android.gallery3d.data.ActionImage.getHeight()
int com.android.gallery3d.data.ActionImage.getMediaType()
int com.android.gallery3d.data.ActionImage.getSupportedOperations()
int com.android.gallery3d.data.ActionImage.getWidth()
int com.android.gallery3d.data.CameraShortcutImage.getSupportedOperations()
int com.android.gallery3d.data.ClusterAlbum.getMediaItemCount()
int com.android.gallery3d.data.ClusterAlbum.getSupportedOperations()
int com.android.gallery3d.data.ClusterAlbum.getTotalMediaItemCount()
int com.android.gallery3d.data.ClusterAlbumSet.getSubMediaSetCount()
int com.android.gallery3d.data.ComboAlbum.getMediaItemCount()
int com.android.gallery3d.data.ComboAlbumSet.getSubMediaSetCount()
int com.android.gallery3d.data.DataManager.getMediaType(Path)
int com.android.gallery3d.data.DataManager.getSupportedOperations(Path)
int com.android.gallery3d.data.EmptyAlbumImage.getSupportedOperations()
int com.android.gallery3d.data.FaceClustering.getNumberOfClusters()
int com.android.gallery3d.data.FilterDeleteSet.getMediaItemCount()
int com.android.gallery3d.data.FilterDeleteSet.getNumberOfDeletions()
int com.android.gallery3d.data.FilterEmptyPromptSet.getMediaItemCount()
int com.android.gallery3d.data.FilterTypeSet.getMediaItemCount()
int com.android.gallery3d.data.FilterTypeSet.getSubMediaSetCount()
int com.android.gallery3d.data.FilterTypeSet.getSupportedOperations()
int com.android.gallery3d.data.LocalAlbum.getMediaItemCount()
int com.android.gallery3d.data.LocalAlbum.getSupportedOperations()
int com.android.gallery3d.data.LocalAlbumSet.getSubMediaSetCount()
int com.android.gallery3d.data.LocalImage.getHeight()
int com.android.gallery3d.data.LocalImage.getMediaType()
int com.android.gallery3d.data.LocalImage.getRotation()
int com.android.gallery3d.data.LocalImage.getSupportedOperations()
int com.android.gallery3d.data.LocalImage.getWidth()
int com.android.gallery3d.data.LocalMediaItem.getBucketId()
int com.android.gallery3d.data.LocalMergeAlbum.getMediaItemCount()
int com.android.gallery3d.data.LocalMergeAlbum.getSupportedOperations()
int com.android.gallery3d.data.LocalMergeAlbum.getTotalMediaItemCount()
int com.android.gallery3d.data.LocalVideo.getHeight()
int com.android.gallery3d.data.LocalVideo.getMediaType()
int com.android.gallery3d.data.LocalVideo.getSupportedOperations()
int com.android.gallery3d.data.LocalVideo.getWidth()
int com.android.gallery3d.data.LocationClustering.getNumberOfClusters()
int com.android.gallery3d.data.MediaDetails.getUnit(int)
int com.android.gallery3d.data.MediaItem.getFullImageRotation()
int com.android.gallery3d.data.MediaItem.getRotation()
int com.android.gallery3d.data.MediaItem.getTargetSize(int)
int com.android.gallery3d.data.MediaObject.getCacheFlag()
int com.android.gallery3d.data.MediaObject.getCacheStatus()
int com.android.gallery3d.data.MediaObject.getMediaType()
int com.android.gallery3d.data.MediaObject.getSupportedOperations()
int com.android.gallery3d.data.MediaObject.getTypeFromString(String)
int com.android.gallery3d.data.MediaSet.getIndexOf(Path,ArrayList)
int com.android.gallery3d.data.MediaSet.getIndexOfItem(Path,int)
int com.android.gallery3d.data.MediaSet.getMediaItemCount()
int com.android.gallery3d.data.MediaSet.getSubMediaSetCount()
int com.android.gallery3d.data.MediaSet.getTotalMediaItemCount()
int com.android.gallery3d.data.MtpDevice.getMediaItemCount()
int com.android.gallery3d.data.MtpDevice.getSupportedOperations()
int com.android.gallery3d.data.MtpDeviceSet.getSubMediaSetCount()
int com.android.gallery3d.data.MtpImage.getHeight()
int com.android.gallery3d.data.MtpImage.getMediaType()
int com.android.gallery3d.data.MtpImage.getSupportedOperations()
int com.android.gallery3d.data.MtpImage.getWidth()
int com.android.gallery3d.data.PathMatcher$Node.getKind()
int com.android.gallery3d.data.PathMatcher.getIntVar(int)
int com.android.gallery3d.data.SecureAlbum.getMediaItemCount()
int com.android.gallery3d.data.SingleItemAlbum.getMediaItemCount()
int com.android.gallery3d.data.SizeClustering.getNumberOfClusters()
int com.android.gallery3d.data.SnailItem.getHeight()
int com.android.gallery3d.data.SnailItem.getWidth()
int com.android.gallery3d.data.TagClustering.getNumberOfClusters()
int com.android.gallery3d.data.TimeClustering.getNumberOfClusters()
int com.android.gallery3d.data.UnlockImage.getSupportedOperations()
int com.android.gallery3d.data.UriImage.getHeight()
int com.android.gallery3d.data.UriImage.getMediaType()
int com.android.gallery3d.data.UriImage.getRotation()
int com.android.gallery3d.data.UriImage.getSupportedOperations()
int com.android.gallery3d.data.UriImage.getWidth()
int com.android.gallery3d.exif.CountedDataInputStream.getReadByteCount()
int com.android.gallery3d.exif.ExifData.getStripCount()
int com.android.gallery3d.exif.ExifParser.getCompressedImageSize()
int com.android.gallery3d.exif.ExifParser.getCurrentIfd()
int com.android.gallery3d.exif.ExifParser.getStripIndex()
int com.android.gallery3d.exif.ExifParser.getStripSize()
int com.android.gallery3d.exif.ExifTag.getComponentCount()
int com.android.gallery3d.exif.ExifTag.getDataSize()
int com.android.gallery3d.exif.ExifTag.getElementSize(short)
int com.android.gallery3d.exif.ExifTag.getIfd()
int com.android.gallery3d.exif.ExifTag.getIfdIdFromTagId(short)
int com.android.gallery3d.exif.ExifTag.getLong(int)
int com.android.gallery3d.exif.ExifTag.getOffset()
int com.android.gallery3d.exif.ExifTag.getUnsignedShort(int)
int com.android.gallery3d.exif.IfdData.getId()
int com.android.gallery3d.exif.IfdData.getOffsetToNextIfd()
int com.android.gallery3d.exif.IfdData.getTagCount()
int com.android.gallery3d.filtershow.PanelController$Panel.getPosition()
int com.android.gallery3d.filtershow.cache.ImageLoader.getOrientation(Context,Uri)
int com.android.gallery3d.filtershow.cache.ImageLoader.getOrientationFromPath(String)
int com.android.gallery3d.filtershow.cache.ImageLoader.getZoomOrientation()
int com.android.gallery3d.filtershow.filters.ImageFilter.getDefaultParameter()
int com.android.gallery3d.filtershow.filters.ImageFilter.getMaxParameter()
int com.android.gallery3d.filtershow.filters.ImageFilter.getMinParameter()
int com.android.gallery3d.filtershow.filters.ImageFilter.getParameter()
int com.android.gallery3d.filtershow.filters.ImageFilter.getPreviewParameter()
int com.android.gallery3d.filtershow.imageshow.ImageGeometry.getLocalValue()
int com.android.gallery3d.filtershow.imageshow.ImageRotate.getLocalValue()
int com.android.gallery3d.filtershow.imageshow.ImageShow.getDefaultBackgroundColor()
int com.android.gallery3d.filtershow.imageshow.ImageStraighten.getLocalValue()
int com.android.gallery3d.filtershow.ui.Spline.getNbPoints()
int com.android.gallery3d.gadget.WidgetService$PhotoRVFactory.getCount()
int com.android.gallery3d.gadget.WidgetService$PhotoRVFactory.getViewTypeCount()
int com.android.gallery3d.picasasource.FaceImage.getHeight()
int com.android.gallery3d.picasasource.FaceImage.getWidth()
int com.android.gallery3d.picasasource.PicasaAlbum$CoverItem.getHeight()
int com.android.gallery3d.picasasource.PicasaAlbum$CoverItem.getWidth()
int com.android.gallery3d.picasasource.PicasaAlbum.getCacheFlag()
int com.android.gallery3d.picasasource.PicasaAlbum.getCacheStatus()
int com.android.gallery3d.picasasource.PicasaAlbum.getMediaItemCount()
int com.android.gallery3d.picasasource.PicasaAlbum.getSupportedOperations()
int com.android.gallery3d.picasasource.PicasaAlbumSet$PicasaSyncTaskFuture.getSyncResult()
int com.android.gallery3d.picasasource.PicasaAlbumSet.getSubMediaSetCount()
int com.android.gallery3d.picasasource.PicasaImage.getFullImageRotation()
int com.android.gallery3d.picasasource.PicasaImage.getHeight()
int com.android.gallery3d.picasasource.PicasaImage.getMediaType()
int com.android.gallery3d.picasasource.PicasaImage.getSupportedOperations()
int com.android.gallery3d.picasasource.PicasaImage.getWidth()
int com.android.gallery3d.picasasource.PicasaPostAlbum.getMediaItemCount()
int com.android.gallery3d.picasasource.PicasaPostAlbum.getSupportedOperations()
int com.android.gallery3d.ui.AlbumLabelMaker.getBorderSize()
int com.android.gallery3d.ui.BasicTexture.getHeight()
int com.android.gallery3d.ui.BasicTexture.getId()
int com.android.gallery3d.ui.BasicTexture.getTextureHeight()
int com.android.gallery3d.ui.BasicTexture.getTextureWidth()
int com.android.gallery3d.ui.BasicTexture.getWidth()
int com.android.gallery3d.ui.BitmapScreenNail.getHeight()
int com.android.gallery3d.ui.BitmapScreenNail.getWidth()
int com.android.gallery3d.ui.BitmapTexture.getHeight()
int com.android.gallery3d.ui.BitmapTexture.getId()
int com.android.gallery3d.ui.BitmapTexture.getTextureHeight()
int com.android.gallery3d.ui.BitmapTexture.getTextureWidth()
int com.android.gallery3d.ui.BitmapTexture.getWidth()
int com.android.gallery3d.ui.BitmapTileProvider.getImageHeight()
int com.android.gallery3d.ui.BitmapTileProvider.getImageWidth()
int com.android.gallery3d.ui.BitmapTileProvider.getLevelCount()
int com.android.gallery3d.ui.ColorTexture.getHeight()
int com.android.gallery3d.ui.ColorTexture.getWidth()
int com.android.gallery3d.ui.CropView$AnimationController.getCenterX()
int com.android.gallery3d.ui.CropView$AnimationController.getCenterY()
int com.android.gallery3d.ui.CropView.getImageHeight()
int com.android.gallery3d.ui.CropView.getImageWidth()
int com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter.getCount()
int com.android.gallery3d.ui.EdgeEffect$Drawable.getIntrinsicHeight()
int com.android.gallery3d.ui.EdgeEffect$Drawable.getIntrinsicWidth()
int com.android.gallery3d.ui.ExtTexture.getHeight()
int com.android.gallery3d.ui.ExtTexture.getId()
int com.android.gallery3d.ui.ExtTexture.getTarget()
int com.android.gallery3d.ui.ExtTexture.getTextureHeight()
int com.android.gallery3d.ui.ExtTexture.getTextureWidth()
int com.android.gallery3d.ui.ExtTexture.getWidth()
int com.android.gallery3d.ui.FadeTexture.getHeight()
int com.android.gallery3d.ui.FadeTexture.getWidth()
int com.android.gallery3d.ui.FlingScroller.getCurrVelocityX()
int com.android.gallery3d.ui.FlingScroller.getCurrVelocityY()
int com.android.gallery3d.ui.FlingScroller.getCurrX()
int com.android.gallery3d.ui.FlingScroller.getCurrY()
int com.android.gallery3d.ui.FlingScroller.getDuration()
int com.android.gallery3d.ui.FlingScroller.getFinalX()
int com.android.gallery3d.ui.FlingScroller.getFinalY()
int com.android.gallery3d.ui.GLPaint.getColor()
int com.android.gallery3d.ui.GLRootView.getCompensation()
int com.android.gallery3d.ui.GLRootView.getDisplayRotation()
int com.android.gallery3d.ui.GLView.getComponentCount()
int com.android.gallery3d.ui.GLView.getHeight()
int com.android.gallery3d.ui.GLView.getMeasuredHeight()
int com.android.gallery3d.ui.GLView.getMeasuredWidth()
int com.android.gallery3d.ui.GLView.getVisibility()
int com.android.gallery3d.ui.GLView.getWidth()
int com.android.gallery3d.ui.PopupList$ItemDataAdapter.getCount()
int com.android.gallery3d.ui.PositionController.getImageAtEdges()
int com.android.gallery3d.ui.PositionController.getImageHeight()
int com.android.gallery3d.ui.PositionController.getImageWidth()
int com.android.gallery3d.ui.RawTexture.getHeight()
int com.android.gallery3d.ui.RawTexture.getId()
int com.android.gallery3d.ui.RawTexture.getTarget()
int com.android.gallery3d.ui.RawTexture.getTextureHeight()
int com.android.gallery3d.ui.RawTexture.getTextureWidth()
int com.android.gallery3d.ui.RawTexture.getWidth()
int com.android.gallery3d.ui.ResourceTexture.getHeight()
int com.android.gallery3d.ui.ResourceTexture.getId()
int com.android.gallery3d.ui.ResourceTexture.getTextureHeight()
int com.android.gallery3d.ui.ResourceTexture.getTextureWidth()
int com.android.gallery3d.ui.ResourceTexture.getWidth()
int com.android.gallery3d.ui.ScrollerHelper.getPosition()
int com.android.gallery3d.ui.SelectionManager.getSelectedCount()
int com.android.gallery3d.ui.SlideshowView$SlideshowAnimation.getCanvasSaveFlags()
int com.android.gallery3d.ui.SlotView$IntegerAnimation.get()
int com.android.gallery3d.ui.SlotView$IntegerAnimation.getTarget()
int com.android.gallery3d.ui.SlotView$Layout.getScrollLimit()
int com.android.gallery3d.ui.SlotView$Layout.getSlotIndexByPosition(float,float)
int com.android.gallery3d.ui.SlotView$Layout.getVisibleEnd()
int com.android.gallery3d.ui.SlotView$Layout.getVisibleStart()
int com.android.gallery3d.ui.SlotView.getScrollX()
int com.android.gallery3d.ui.SlotView.getScrollY()
int com.android.gallery3d.ui.SlotView.getVisibleEnd()
int com.android.gallery3d.ui.SlotView.getVisibleStart()
int com.android.gallery3d.ui.SurfaceTextureScreenNail.getHeight()
int com.android.gallery3d.ui.SurfaceTextureScreenNail.getWidth()
int com.android.gallery3d.ui.TileImageView$Tile.getTextureHeight()
int com.android.gallery3d.ui.TileImageView$Tile.getTextureWidth()
int com.android.gallery3d.ui.TileImageViewAdapter.getImageHeight()
int com.android.gallery3d.ui.TileImageViewAdapter.getImageWidth()
int com.android.gallery3d.ui.TileImageViewAdapter.getLevelCount()
int com.android.gallery3d.ui.TiledScreenNail.getHeight()
int com.android.gallery3d.ui.TiledScreenNail.getWidth()
int com.android.gallery3d.ui.TiledTexture.getHeight()
int com.android.gallery3d.ui.TiledTexture.getWidth()
int com.android.gallery3d.ui.UploadedTexture.getHeight()
int com.android.gallery3d.ui.UploadedTexture.getTarget()
int com.android.gallery3d.ui.UploadedTexture.getWidth()
int com.android.gallery3d.util.GalleryUtils.getBucketId(String)
int com.android.gallery3d.util.RangeIntArray.get(int)
int com.android.i18n.phonenumbers.PhoneNumberUtil.getLengthOfGeographicalAreaCode(Phonenumber$PhoneNumber)
int com.android.i18n.phonenumbers.PhoneNumberUtil.getLengthOfNationalDestinationCode(Phonenumber$PhoneNumber)
int com.android.i18n.phonenumbers.PhoneNumberUtil.maybeExtractCountryCode(String,Phonemetadata$PhoneMetadata,StringBuilder,boolean,Phonenumber$PhoneNumber)
int com.android.inputmethod.compat.SuggestionsInfoCompatUtils.getValueOf_RESULT_ATTR_HAS_RECOMMENDED_SUGGESTIONS()
int com.android.inputmethod.keyboard.Key.getAltCode()
int com.android.inputmethod.keyboard.Key.getDrawWidth()
int com.android.inputmethod.keyboard.Key.getDrawX()
int com.android.inputmethod.keyboard.Key.getMoreKeyLabelFlags()
int com.android.inputmethod.keyboard.Key.getMoreKeysColumn()
int com.android.inputmethod.keyboard.KeyDetector.getKeyHysteresisDistanceSquared(boolean)
int com.android.inputmethod.keyboard.KeyDetector.getTouchX(int)
int com.android.inputmethod.keyboard.KeyDetector.getTouchY(int)
int com.android.inputmethod.keyboard.KeyboardSwitcher.getKeyboardShiftMode()
int com.android.inputmethod.keyboard.MainKeyboardView.getAltCodeKeyWhileTypingAnimAlpha()
int com.android.inputmethod.keyboard.MainKeyboardView.getLanguageOnSpacebarAnimAlpha()
int com.android.inputmethod.keyboard.MainKeyboardView.getPointerCount()
int com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams.getColumnPos(int)
int com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams.getDefaultKeyCoordX()
int com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams.getX(int,int)
int com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams.getY(int)
int com.android.inputmethod.keyboard.MoreKeysKeyboard.getDefaultCoordX()
int com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector.getDistanceFromDownEvent(int,int)
int com.android.inputmethod.keyboard.PointerTracker.getDistance(int,int,int,int)
int com.android.inputmethod.keyboard.PointerTracker.getLastX()
int com.android.inputmethod.keyboard.PointerTracker.getLastY()
int com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints.getGestureStrokeId()
int com.android.inputmethod.keyboard.internal.KeySpecParser.getCode(String,KeyboardCodesSet)
int com.android.inputmethod.keyboard.internal.KeySpecParser.getIntValue(String[],String,int)
int com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle.getFlag(TypedArray,int)
int com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle.getInt(TypedArray,int,int)
int com.android.inputmethod.keyboard.internal.KeyboardCodesSet.getCode(String)
int com.android.inputmethod.keyboard.internal.KeyboardIconsSet.getIconId(String)
int com.android.inputmethod.keyboard.internal.KeyboardRow.getDefaultBackgroundType()
int com.android.inputmethod.keyboard.internal.KeyboardRow.getDefaultKeyLabelFlags()
int com.android.inputmethod.keyboard.internal.KeyboardRow.getKeyY()
int com.android.inputmethod.keyboard.internal.TouchPositionCorrection.getRows()
int com.android.inputmethod.latin.Dictionary.getFrequency(CharSequence)
int com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord.getFrequency()
int com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord.getFrequency()
int com.android.inputmethod.latin.ExpandableDictionary.setBigramAndGetFrequency(String,String,UserHistoryForgettingCurveUtils$ForgettingCurveParams)
int com.android.inputmethod.latin.InputPointers.getPointerSize()
int com.android.inputmethod.latin.LastComposedWord.getSeparatorLength(String)
int com.android.inputmethod.latin.LatinIME.getCurrentAutoCapsState()
int com.android.inputmethod.latin.ResizableIntArray.get(int)
int com.android.inputmethod.latin.ResizableIntArray.getLength()
int com.android.inputmethod.latin.RichInputConnection.getCodePointBeforeCursor()
int com.android.inputmethod.latin.RichInputConnection.getCursorCapsMode(int,Locale,boolean)
int com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams.getFrequency()
int com.android.inputmethod.latin.WordComposer.getCodeAt(int)
int com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService.getCapitalizationType(String)
int com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam.getColumnNumber(int)
int com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam.getNumColumnInRow(int)
int com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam.getWidth(int)
int com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam.getX(int)
int com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam.getY(int)
int com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams.getMaxMoreSuggestionsRow()
int com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams.setMoreSuggestionsHeight(int)
int com.android.inputmethod.latin.suggestions.SuggestionStripView.setMoreSuggestionsHeight(int)
int com.android.internal.app.AlertController.getIconAttributeResId(int)
int com.android.internal.app.ResolverActivity$ResolveListAdapter.getCount()
int com.android.internal.backup.IBackupTransport$Stub$Proxy.getRestoreData(ParcelFileDescriptor)
int com.android.internal.backup.IBackupTransport$Stub$Proxy.startRestore(long,PackageInfo[])
int com.android.internal.backup.LocalTransport.getRestoreData(ParcelFileDescriptor)
int com.android.internal.backup.LocalTransport.performBackup(PackageInfo,ParcelFileDescriptor)
int com.android.internal.content.PackageMonitor.getChangingUserId()
int com.android.internal.location.ILocationProvider$Stub$Proxy.getStatus(Bundle)
int com.android.internal.os.BatteryStatsImpl$Counter.getCountLocked(int)
int com.android.internal.os.BatteryStatsImpl$SamplingTimer.getUpdateVersion()
int com.android.internal.os.BatteryStatsImpl$Timer.getCountLocked(int)
int com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv.getLaunches(int)
int com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv.getStarts(int)
int com.android.internal.os.BatteryStatsImpl$Uid$Pkg.getWakeups(int)
int com.android.internal.os.BatteryStatsImpl$Uid$Proc.getStarts(int)
int com.android.internal.os.BatteryStatsImpl$Uid$Sensor.getHandle()
int com.android.internal.os.BatteryStatsImpl$Uid.getUid()
int com.android.internal.os.BatteryStatsImpl$Uid.getUserActivityCount(int,int)
int com.android.internal.os.BatteryStatsImpl.getBluetoothPingCount()
int com.android.internal.os.BatteryStatsImpl.getCpuSpeedSteps()
int com.android.internal.os.BatteryStatsImpl.getDischargeAmountScreenOff()
int com.android.internal.os.BatteryStatsImpl.getDischargeAmountScreenOffSinceCharge()
int com.android.internal.os.BatteryStatsImpl.getDischargeAmountScreenOn()
int com.android.internal.os.BatteryStatsImpl.getDischargeAmountScreenOnSinceCharge()
int com.android.internal.os.BatteryStatsImpl.getDischargeCurrentLevel()
int com.android.internal.os.BatteryStatsImpl.getDischargeCurrentLevelLocked()
int com.android.internal.os.BatteryStatsImpl.getDischargeStartLevel()
int com.android.internal.os.BatteryStatsImpl.getDischargeStartLevelLocked()
int com.android.internal.os.BatteryStatsImpl.getHighDischargeAmountSinceCharge()
int com.android.internal.os.BatteryStatsImpl.getInputEventCount(int)
int com.android.internal.os.BatteryStatsImpl.getLowDischargeAmountSinceCharge()
int com.android.internal.os.BatteryStatsImpl.getPhoneDataConnectionCount(int,int)
int com.android.internal.os.BatteryStatsImpl.getPhoneSignalStrengthCount(int,int)
int com.android.internal.os.BatteryStatsImpl.getStartCount()
int com.android.internal.os.PowerProfile.getNumSpeedSteps()
int com.android.internal.os.ProcessStats.getLastIdleTime()
int com.android.internal.os.ProcessStats.getLastIoWaitTime()
int com.android.internal.os.ProcessStats.getLastIrqTime()
int com.android.internal.os.ProcessStats.getLastSoftIrqTime()
int com.android.internal.os.ProcessStats.getLastSystemTime()
int com.android.internal.os.ProcessStats.getLastUserTime()
int com.android.internal.policy.impl.GlobalActions$MyAdapter.getCount()
int com.android.internal.policy.impl.PhoneWindowManager.finishPostLayoutPolicyLw()
int com.android.internal.policy.impl.PhoneWindowManager.getAboveUniverseLayer()
int com.android.internal.policy.impl.PhoneWindowManager.getConfigDisplayHeight(int,int,int)
int com.android.internal.policy.impl.PhoneWindowManager.getConfigDisplayWidth(int,int,int)
int com.android.internal.policy.impl.PhoneWindowManager.getMaxWallpaperLayer()
int com.android.internal.policy.impl.PhoneWindowManager.getNonDecorDisplayHeight(int,int,int)
int com.android.internal.policy.impl.PhoneWindowManager.getNonDecorDisplayWidth(int,int,int)
int com.android.internal.policy.impl.PhoneWindowManager.getSystemDecorRectLw(Rect)
int com.android.internal.policy.impl.keyguard.KeyguardAbsKeyInputView.getWrongPasswordStringId()
int com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable.getOpacity()
int com.android.internal.policy.impl.keyguard.KeyguardPasswordView.getPasswordTextViewId()
int com.android.internal.policy.impl.keyguard.KeyguardPasswordView.getWrongPasswordStringId()
int com.android.internal.policy.impl.keyguard.KeyguardStatusView.getAppWidgetId()
int com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getFailedUnlockAttempts()
int com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.getPhoneState()
int com.android.internal.policy.impl.keyguard.KeyguardViewStateManager.getTransportState()
int com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getContentAppWidgetId()
int com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame.getSmallFrameHeight()
int com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.getWidgetPageIndex(View)
int com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.getWidgetToResetOnPageFadeOut()
int com.android.internal.policy.impl.keyguard.PagedView.getChildIndexForRelativeOffset(int)
int com.android.internal.policy.impl.keyguard.PagedView.getChildOffset(int)
int com.android.internal.policy.impl.keyguard.PagedView.getChildWidth(int)
int com.android.internal.policy.impl.keyguard.PagedView.getCurrentPage()
int com.android.internal.policy.impl.keyguard.PagedView.getNextPage()
int com.android.internal.policy.impl.keyguard.PagedView.getPageCount()
int com.android.internal.policy.impl.keyguard.PagedView.getPageForView(View)
int com.android.internal.policy.impl.keyguard.PagedView.getPageNearestToCenterOfScreen()
int com.android.internal.policy.impl.keyguard.PagedView.getPageNearestToPoint(float)
int com.android.internal.policy.impl.keyguard.PagedView.getRelativeChildOffset(int)
int com.android.internal.policy.impl.keyguard.PagedView.getScaledMeasuredWidth(View)
int com.android.internal.policy.impl.keyguard.PagedView.getViewportHeight()
int com.android.internal.policy.impl.keyguard.PagedView.getViewportOffsetX()
int com.android.internal.policy.impl.keyguard.PagedView.getViewportOffsetY()
int com.android.internal.policy.impl.keyguard.PagedView.getViewportWidth()
int com.android.internal.policy.impl.keyguard.SlidingChallengeLayout.getBouncerAnimationDuration()
int com.android.internal.policy.impl.keyguard.SlidingChallengeLayout.getMaxChallengeTop()
int com.android.internal.statusbar.StatusBarNotification.getUserId()
int com.android.internal.telephony.ApnContext.getRetryCount()
int com.android.internal.telephony.CallManager.getServiceState()
int com.android.internal.telephony.DataConnection.getRilRadioTechnology(int)
int com.android.internal.telephony.DataConnectionTracker.getRecoveryAction()
int com.android.internal.telephony.ISms$Stub$Proxy.getPremiumSmsPermission(String)
int com.android.internal.telephony.IccSmsInterfaceManager.getPremiumSmsPermission(String)
int com.android.internal.telephony.IccSmsInterfaceManagerProxy.getPremiumSmsPermission(String)
int com.android.internal.telephony.SMSDispatcher.getPremiumSmsPermission(String)
int com.android.internal.telephony.SmsUsageMonitor$ShortCodePatternMatcher.getNumberCategory(String)
int com.android.internal.telephony.SmsUsageMonitor.getPremiumSmsPermission(String)
int com.android.internal.telephony.cdma.CdmaSMSDispatcher.processMessagePart(byte[],String,int,int,int,long,int,boolean)
int com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager.getCdmaSubscriptionSource()
int com.android.internal.telephony.gsm.GsmSMSDispatcher.processMessagePart(byte[],String,int,int,int,long,int,boolean)
int com.android.internal.telephony.gsm.SmsCbHeader.getDataCodingScheme()
int com.android.internal.telephony.gsm.SmsCbHeader.getGeographicalScope()
int com.android.internal.telephony.gsm.SmsCbHeader.getNumberOfPages()
int com.android.internal.telephony.gsm.SmsCbHeader.getPageIndex()
int com.android.internal.telephony.gsm.SmsCbHeader.getSerialNumber()
int com.android.internal.telephony.gsm.SmsCbHeader.getServiceCategory()
int com.android.internal.telephony.ims.IsimUiccRecords.getDisplayRule(String)
int com.android.internal.telephony.sip.SipPhone.getPhoneType()
int com.android.internal.util.StateMachine.getLogRecCount()
int com.android.internal.util.StateMachine.getLogRecSize()
int com.android.internal.view.ActionBarPolicy.getEmbeddedMenuWidthLimit()
int com.android.internal.view.ActionBarPolicy.getMaxActionButtons()
int com.android.internal.view.ActionBarPolicy.getStackedTabMaxWidth()
int com.android.internal.view.ActionBarPolicy.getTabContainerHeight()
int com.android.internal.widget.ActionBarView$HomeView.getStartOffset()
int com.android.internal.widget.DrawableHolder.getHeight()
int com.android.internal.widget.DrawableHolder.getWidth()
int com.android.internal.widget.LockPatternUtils.getActivePasswordQuality()
int com.android.internal.widget.LockPatternUtils.getCurrentUser()
int com.android.internal.widget.LockPatternUtils.getFallbackAppWidgetId()
int com.android.internal.widget.LockPatternUtils.getKeyguardStoredPasswordQuality()
int com.android.internal.widget.LockPatternUtils.getRequestedMinimumPasswordLength()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordHistoryLength()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumLetters()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumLowerCase()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumNonLetter()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumNumeric()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumSymbols()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumUpperCase()
int com.android.internal.widget.LockPatternUtils.getRequestedPasswordQuality()
int com.android.internal.widget.LockPatternView$Cell.getColumn()
int com.android.internal.widget.LockPatternView$Cell.getRow()
int com.android.internal.widget.LockPatternView$SavedState.getDisplayMode()
int com.android.internal.widget.LockPatternView.getSuggestedMinimumHeight()
int com.android.internal.widget.LockPatternView.getSuggestedMinimumWidth()
int com.android.internal.widget.SlidingTab$Slider.getTabHeight()
int com.android.internal.widget.SlidingTab$Slider.getTabWidth()
int com.android.internal.widget.WaveView.getSuggestedMinimumHeight()
int com.android.internal.widget.WaveView.getSuggestedMinimumWidth()
int com.android.internal.widget.multiwaveview.GlowPadView.getDirectionDescriptionsResourceId()
int com.android.internal.widget.multiwaveview.GlowPadView.getScaledSuggestedMinimumHeight()
int com.android.internal.widget.multiwaveview.GlowPadView.getScaledSuggestedMinimumWidth()
int com.android.internal.widget.multiwaveview.GlowPadView.getSuggestedMinimumHeight()
int com.android.internal.widget.multiwaveview.GlowPadView.getSuggestedMinimumWidth()
int com.android.internal.widget.multiwaveview.GlowPadView.getTargetDescriptionsResourceId()
int com.android.internal.widget.multiwaveview.GlowPadView.getTargetPosition(int)
int com.android.internal.widget.multiwaveview.GlowPadView.getTargetResourceId()
int com.android.internal.widget.multiwaveview.MultiWaveView.getDirectionDescriptionsResourceId()
int com.android.internal.widget.multiwaveview.MultiWaveView.getSuggestedMinimumHeight()
int com.android.internal.widget.multiwaveview.MultiWaveView.getSuggestedMinimumWidth()
int com.android.internal.widget.multiwaveview.MultiWaveView.getTargetDescriptionsResourceId()
int com.android.internal.widget.multiwaveview.MultiWaveView.getTargetPosition(int)
int com.android.internal.widget.multiwaveview.MultiWaveView.getTargetResourceId()
int com.android.internal.widget.multiwaveview.PointCloud.getAlphaForPoint(PointCloud$Point)
int com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.getOpacity()
int com.android.internal.widget.multiwaveview.TargetDrawable.getHeight()
int com.android.internal.widget.multiwaveview.TargetDrawable.getResourceId()
int com.android.internal.widget.multiwaveview.TargetDrawable.getWidth()
int com.android.launcher2.AppsCustomizePagedView.getAssociatedLowerPageBound(int)
int com.android.launcher2.AppsCustomizePagedView.getAssociatedUpperPageBound(int)
int com.android.launcher2.AppsCustomizePagedView.getPageContentWidth()
int com.android.launcher2.AppsCustomizePagedView.getPageForComponent(int)
int com.android.launcher2.AppsCustomizePagedView.getSaveInstanceStateIndex()
int com.android.launcher2.AppsCustomizeTabHost.getDescendantFocusability()
int com.android.launcher2.BubbleTextView.getPressedOrFocusedBackgroundPadding()
int com.android.launcher2.CellLayout$LayoutParams.getHeight()
int com.android.launcher2.CellLayout$LayoutParams.getWidth()
int com.android.launcher2.CellLayout$LayoutParams.getX()
int com.android.launcher2.CellLayout$LayoutParams.getY()
int com.android.launcher2.CellLayout.getCellHeight()
int com.android.launcher2.CellLayout.getCellWidth()
int com.android.launcher2.CellLayout.getCountX()
int com.android.launcher2.CellLayout.getCountY()
int com.android.launcher2.CellLayout.getDesiredHeight()
int com.android.launcher2.CellLayout.getDesiredWidth()
int com.android.launcher2.CellLayout.getHeightGap()
int com.android.launcher2.CellLayout.getWidthGap()
int com.android.launcher2.DragLayer$LayoutParams.getHeight()
int com.android.launcher2.DragLayer$LayoutParams.getWidth()
int com.android.launcher2.DragLayer$LayoutParams.getX()
int com.android.launcher2.DragLayer$LayoutParams.getY()
int com.android.launcher2.DragLayer.getChildDrawingOrder(int,int)
int com.android.launcher2.FastBitmapDrawable.getIntrinsicHeight()
int com.android.launcher2.FastBitmapDrawable.getIntrinsicWidth()
int com.android.launcher2.FastBitmapDrawable.getMinimumHeight()
int com.android.launcher2.FastBitmapDrawable.getMinimumWidth()
int com.android.launcher2.FastBitmapDrawable.getOpacity()
int com.android.launcher2.FocusOnlyTabWidget.getChildTabIndex(View)
int com.android.launcher2.Folder.getItemCount()
int com.android.launcher2.Hotseat.getCellXFromOrder(int)
int com.android.launcher2.Hotseat.getCellYFromOrder(int)
int com.android.launcher2.Hotseat.getOrderInHotseat(int,int)
int com.android.launcher2.Launcher.getCurrentWorkspaceScreen()
int com.android.launcher2.LauncherAppWidgetHostView.getDescendantFocusability()
int com.android.launcher2.LauncherApplication.getLongPressTimeout()
int com.android.launcher2.LauncherModel.getCellCountX()
int com.android.launcher2.LauncherModel.getCellCountY()
int com.android.launcher2.LauncherModel.getCellLayoutChildId(long,int,int,int,int,int)
int com.android.launcher2.LauncherProvider.update(Uri,ContentValues,String,String[])
int com.android.launcher2.PagedView.getAssociatedLowerPageBound(int)
int com.android.launcher2.PagedView.getAssociatedUpperPageBound(int)
int com.android.launcher2.PagedView.getChildOffset(int)
int com.android.launcher2.PagedView.getChildWidth(int)
int com.android.launcher2.PagedView.getCurrentPage()
int com.android.launcher2.PagedView.getNextPage()
int com.android.launcher2.PagedView.getPageCount()
int com.android.launcher2.PagedView.getPageForView(View)
int com.android.launcher2.PagedView.getPageNearestToCenterOfScreen()
int com.android.launcher2.PagedView.getRelativeChildOffset(int)
int com.android.launcher2.PagedView.getScaledMeasuredWidth(View)
int com.android.launcher2.PagedViewCellLayout.getCellCountX()
int com.android.launcher2.PagedViewCellLayout.getCellCountY()
int com.android.launcher2.PagedViewCellLayout.getContentHeight()
int com.android.launcher2.PagedViewCellLayout.getContentWidth()
int com.android.launcher2.PagedViewCellLayout.getPageChildCount()
int com.android.launcher2.PagedViewCellLayout.getWidthBeforeFirstLayout()
int com.android.launcher2.PagedViewGridLayout.getCellCountX()
int com.android.launcher2.PagedViewGridLayout.getCellCountY()
int com.android.launcher2.PagedViewGridLayout.getPageChildCount()
int com.android.launcher2.SearchDropTargetBar.getTransitionInDuration()
int com.android.launcher2.SmoothPagedView.getScrollMode()
int com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter.getCount()
int com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable.getOpacity()
int com.android.launcher2.Workspace.getDescendantFocusability()
int com.android.launcher2.Workspace.getScrollMode()
int com.android.mms.MmsConfig.getAliasMaxChars()
int com.android.mms.MmsConfig.getAliasMinChars()
int com.android.mms.MmsConfig.getDefaultMMSMessagesPerThread()
int com.android.mms.MmsConfig.getDefaultSMSMessagesPerThread()
int com.android.mms.MmsConfig.getHttpSocketTimeout()
int com.android.mms.MmsConfig.getMaxImageHeight()
int com.android.mms.MmsConfig.getMaxImageWidth()
int com.android.mms.MmsConfig.getMaxMessageCountPerThread()
int com.android.mms.MmsConfig.getMaxMessageSize()
int com.android.mms.MmsConfig.getMaxSizeScaleForPendingMmsAllowed()
int com.android.mms.MmsConfig.getMaxSubjectLength()
int com.android.mms.MmsConfig.getMaxTextLimit()
int com.android.mms.MmsConfig.getMinMessageCountPerThread()
int com.android.mms.MmsConfig.getMinimumSlideElementDuration()
int com.android.mms.MmsConfig.getRecipientLimit()
int com.android.mms.MmsConfig.getSmsToMmsTextThreshold()
int com.android.mms.data.Contact.getContactMethodType()
int com.android.mms.data.Conversation.getMessageCount()
int com.android.mms.dom.NamedNodeMapImpl.getLength()
int com.android.mms.dom.NodeListImpl.getLength()
int com.android.mms.dom.events.EventImpl.getSeekTo()
int com.android.mms.dom.smil.ElementTimeImpl.getBeginConstraints()
int com.android.mms.dom.smil.ElementTimeImpl.getEndConstraints()
int com.android.mms.dom.smil.SmilPlayer$TimelineEntry.getAction()
int com.android.mms.dom.smil.SmilPlayer.getCurrentPosition()
int com.android.mms.dom.smil.SmilPlayer.getDuration()
int com.android.mms.dom.smil.SmilRegionElementImpl.getHeight()
int com.android.mms.dom.smil.SmilRegionElementImpl.getLeft()
int com.android.mms.dom.smil.SmilRegionElementImpl.getTop()
int com.android.mms.dom.smil.SmilRegionElementImpl.getWidth()
int com.android.mms.dom.smil.SmilRootLayoutElementImpl.getHeight()
int com.android.mms.dom.smil.SmilRootLayoutElementImpl.getWidth()
int com.android.mms.dom.smil.TimeListImpl.getLength()
int com.android.mms.layout.HVGALayoutParameters.getHeight()
int com.android.mms.layout.HVGALayoutParameters.getImageHeight()
int com.android.mms.layout.HVGALayoutParameters.getTextHeight()
int com.android.mms.layout.HVGALayoutParameters.getWidth()
int com.android.mms.model.LayoutModel.getLayoutHeight()
int com.android.mms.model.LayoutModel.getLayoutType()
int com.android.mms.model.LayoutModel.getLayoutWidth()
int com.android.mms.model.MediaModel.getBegin()
int com.android.mms.model.MediaModel.getDuration()
int com.android.mms.model.MediaModel.getMediaSize()
int com.android.mms.model.MediaModel.getSeekTo()
int com.android.mms.model.RegionModel.getHeight()
int com.android.mms.model.RegionModel.getLeft()
int com.android.mms.model.RegionModel.getTop()
int com.android.mms.model.RegionModel.getWidth()
int com.android.mms.model.SlideModel.getDuration()
int com.android.mms.model.SlideModel.getSlideSize()
int com.android.mms.model.SlideshowModel.getCurrentMessageSize()
int com.android.mms.model.SlideshowModel.getTotalMessageSize()
int com.android.mms.model.TextModel.getCharset()
int com.android.mms.transaction.DefaultRetryScheme.getRetryLimit()
int com.android.mms.transaction.NotificationTransaction.getType()
int com.android.mms.transaction.ReadRecTransaction.getType()
int com.android.mms.transaction.RetrieveTransaction.getType()
int com.android.mms.transaction.SendTransaction.getType()
int com.android.mms.transaction.Transaction.getServiceId()
int com.android.mms.transaction.TransactionBundle.getProxyPort()
int com.android.mms.transaction.TransactionBundle.getTransactionType()
int com.android.mms.transaction.TransactionSettings.getProxyPort()
int com.android.mms.transaction.TransactionState.getState()
int com.android.mms.ui.AttachmentTypeSelectorAdapter$AttachmentListItem.getCommand()
int com.android.mms.ui.ChipsRecipientAdapter.getItemLayout()
int com.android.mms.ui.IconListAdapter$IconListItem.getResource()
int com.android.mms.ui.MessageItem.getMmsDownloadStatus()
int com.android.mms.ui.MessageListAdapter.getItemViewType(int)
int com.android.mms.ui.MessageListAdapter.getViewTypeCount()
int com.android.mms.ui.RecipientsEditor.getRecipientCount()
int com.android.mms.ui.SlideshowActivity$SmilPlayerController.getBufferPercentage()
int com.android.mms.ui.SlideshowActivity$SmilPlayerController.getCurrentPosition()
int com.android.mms.ui.SlideshowActivity$SmilPlayerController.getDuration()
int com.android.mms.ui.UriImage.getHeight()
int com.android.mms.ui.UriImage.getWidth()
int com.android.mms.util.Recycler$MmsRecycler.getMessageLimit(Context)
int com.android.mms.util.Recycler$SmsRecycler.getMessageLimit(Context)
int com.android.mms.util.Recycler.getMessageMaxLimit()
int com.android.mms.util.Recycler.getMessageMinLimit()
int com.android.mms.widget.MmsWidgetService$MmsFactory.getCount()
int com.android.mms.widget.MmsWidgetService$MmsFactory.getViewTypeCount()
int com.android.musicfx.ControlPanelEffect.getParameterInt(Context,String,int,ControlPanelEffect$Key)
int com.android.musicfx.ControlPanelEffect.getParameterInt(Context,String,int,String)
int com.android.musicfx.seekbar.AbsSeekBar.getThumbOffset()
int com.android.musicfx.seekbar.ProgressBar.getMax()
int com.android.musicfx.seekbar.ProgressBar.getProgress()
int com.android.nfc.LlcpPacket.getRemoteSap()
int com.android.nfc.NfcService$NfcAdapterExtrasService.getCardEmulationRoute(String)
int com.android.nfc.NfcService$NfcAdapterService.getState()
int com.android.nfc.NfcService$TagService.getMaxTransceiveLength(int)
int com.android.nfc.NfcService$TagService.getTimeout(int)
int com.android.nfc.NfcService$TagService.ndefWrite(int,NdefMessage)
int com.android.nfc.NfcService$TagService.setTimeout(int,int)
int com.android.nfc.P2pLinkManager.getMessageAarPresent(NdefMessage)
int com.android.nfc.P2pLinkManager.getMessageSize(NdefMessage)
int com.android.nfc.P2pLinkManager.getMessageTnf(NdefMessage)
int com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket.getHandle()
int com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket.getLinkMiu()
int com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket.getSap()
int com.android.nfc.dhimpl.NativeLlcpSocket.getLocalMiu()
int com.android.nfc.dhimpl.NativeLlcpSocket.getLocalRw()
int com.android.nfc.dhimpl.NativeLlcpSocket.getLocalSap()
int com.android.nfc.dhimpl.NativeLlcpSocket.getRemoteMiu()
int com.android.nfc.dhimpl.NativeLlcpSocket.getRemoteRw()
int com.android.nfc.dhimpl.NativeNfcManager.getDefaultLlcpMiu()
int com.android.nfc.dhimpl.NativeNfcManager.getDefaultLlcpRwSize()
int com.android.nfc.dhimpl.NativeNfcManager.getMaxTransceiveLength(int)
int com.android.nfc.dhimpl.NativeNfcManager.getTimeout(int)
int com.android.nfc.dhimpl.NativeNfcTag.getConnectedTechnology()
int com.android.nfc.dhimpl.NativeNfcTag.getHandle()
int com.android.nfc.dhimpl.NativeP2pDevice.getHandle()
int com.android.nfc.dhimpl.NativeP2pDevice.getMode()
int com.android.nfc.handover.HandoverTransfer.getTransferId()
int com.android.nfc.snep.SnepMessage.getAcceptableLength()
int com.android.nfc.snep.SnepMessage.getLength()
int com.android.org.bouncycastle.asn1.ASN1InputStream.getLimit()
int com.android.org.bouncycastle.asn1.ASN1TaggedObject.getTagNo()
int com.android.org.bouncycastle.asn1.BERTaggedObjectParser.getTagNo()
int com.android.org.bouncycastle.asn1.DERApplicationSpecific.getApplicationTag()
int com.android.org.bouncycastle.asn1.DERBitString.getPadBits()
int com.android.org.bouncycastle.asn1.DERBitString.getPadBits(int)
int com.android.org.bouncycastle.asn1.DERExternal.getEncoding()
int com.android.org.bouncycastle.asn1.DefiniteLengthInputStream.getRemaining()
int com.android.org.bouncycastle.asn1.LimitedInputStream.getRemaining()
int com.android.org.bouncycastle.util.io.pem.PemWriter.getOutputSize(PemObject)
int com.android.phone.ContactsAsyncHelper$ImageTracker.getPhotoState()
int com.android.phone.InCallTouchUi.getTouchUiHeight()
int com.android.phone.ManageConferenceUtils.getNumCallersInConference()
int com.android.phone.PhoneInterfaceManager.disableApnType(String)
int com.android.phone.PhoneInterfaceManager.enableApnType(String)
int com.android.phone.PhoneInterfaceManager.getActivePhoneType()
int com.android.phone.PhoneInterfaceManager.getCallState()
int com.android.phone.PhoneInterfaceManager.getCdmaEriIconIndex()
int com.android.phone.PhoneInterfaceManager.getCdmaEriIconMode()
int com.android.phone.PhoneInterfaceManager.getDataActivity()
int com.android.phone.PhoneInterfaceManager.getDataState()
int com.android.phone.PhoneInterfaceManager.getLteOnCdmaMode()
int com.android.phone.PhoneInterfaceManager.getNetworkType()
int com.android.phone.PhoneInterfaceManager.getVoiceMessageCount()
int com.android.phone.sip.SipProfileDb.getProfilesCount()
int com.android.phone.sip.SipSharedPreferences.getProfilesCount()
int com.android.providers.calendar.CalendarProvider2.updateInTransaction(Uri,ContentValues,String,String[],boolean)
int com.android.providers.calendar.SQLiteContentProvider.bulkInsert(Uri,ContentValues[])
int com.android.providers.calendar.SQLiteContentProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.contacts.AbstractContactsProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.contacts.ContactDirectoryManager.scanAllPackages()
int com.android.providers.contacts.ContactsDatabaseHelper.getAggregationMode(long)
int com.android.providers.contacts.ContactsDatabaseHelper.getDisplayNameSourceForMimeTypeId(int)
int com.android.providers.contacts.ContactsProvider2.getMaxDisplayPhotoDim()
int com.android.providers.contacts.ContactsProvider2.getMaxThumbnailDim()
int com.android.providers.contacts.DataRowHandler.getTypeRank(int)
int com.android.providers.contacts.DataRowHandlerForEmail.getTypeRank(int)
int com.android.providers.contacts.DataRowHandlerForOrganization.getTypeRank(int)
int com.android.providers.contacts.DataRowHandlerForPhoneNumber.getTypeRank(int)
int com.android.providers.contacts.DbModifierWithNotification.update(String,ContentValues,String,String[])
int com.android.providers.contacts.LegacyApiSupport.update(Uri,ContentValues,String,String[])
int com.android.providers.contacts.MemoryCursor.getCount()
int com.android.providers.contacts.NameSplitter.getAdjustedFullNameStyle(int)
int com.android.providers.contacts.NameSplitter.getAdjustedNameStyleBasedOnPhoneticNameStyle(int,int)
int com.android.providers.contacts.PhotoPriorityResolver.getPhotoPriority(String)
int com.android.providers.contacts.PhotoProcessor.getMaxThumbnailPhotoDim()
int com.android.providers.contacts.ReorderingCursorWrapper.getCount()
int com.android.providers.contacts.ReorderingCursorWrapper.getInt(int)
int com.android.providers.contacts.ReorderingCursorWrapper.getType(int)
int com.android.providers.contacts.SearchIndexManager$IndexBuilder.getInt(String)
int com.android.providers.contacts.VoicemailContentTable.update(VoicemailContentProvider$UriData,ContentValues,String,String[])
int com.android.providers.contacts.VoicemailStatusTable.update(VoicemailContentProvider$UriData,ContentValues,String,String[])
int com.android.providers.contacts.aggregation.ContactAggregator.markAllVisibleForAggregation(SQLiteDatabase)
int com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore.getScore()
int com.android.providers.downloads.DownloadProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.media.MediaProvider.getDatabaseVersion(Context)
int com.android.providers.media.MediaProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.telephony.MmsProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.telephony.MmsSmsProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.telephony.SmsProvider.update(Uri,ContentValues,String,String[])
int com.android.providers.userdictionary.UserDictionaryProvider.update(Uri,ContentValues,String,String[])
int com.android.server.AppWidgetService.allocateAppWidgetId(String,int)
int com.android.server.AppWidgetServiceImpl.getUidForPackage(String)
int com.android.server.BackupManagerService$ActiveRestoreSession.restorePackage(String,IRestoreObserver)
int com.android.server.BackupManagerService$ActiveRestoreSession.restoreSome(long,IRestoreObserver,String[])
int com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver.getResult()
int com.android.server.BatteryService.getBatteryLevel()
int com.android.server.BatteryService.getPlugType()
int com.android.server.ConnectivityService.getLastTetherError(String)
int com.android.server.ConnectivityService.getNetworkPreference()
int com.android.server.ConnectivityService.setUsbTethering(boolean)
int com.android.server.DevicePolicyManagerService$ActiveAdmin.getUid()
int com.android.server.DevicePolicyManagerService.getCurrentFailedPasswordAttempts(int)
int com.android.server.DevicePolicyManagerService.getKeyguardDisabledFeatures(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getMaximumFailedPasswordsForWipe(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordHistoryLength(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumLength(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumLetters(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumLowerCase(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumNonLetter(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumNumeric(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumSymbols(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordMinimumUpperCase(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getPasswordQuality(ComponentName,int)
int com.android.server.DevicePolicyManagerService.getStorageEncryptionStatus(int)
int com.android.server.DevicePolicyManagerService.setStorageEncryption(ComponentName,boolean,int)
int com.android.server.InputMethodManagerService$InputMethodSettings.getCurrentUserId()
int com.android.server.InputMethodManagerService$InputMethodSettings.getSelectedInputMethodSubtypeHashCode()
int com.android.server.MountService.changeEncryptionPassword(String)
int com.android.server.MountService.decryptStorage(String)
int com.android.server.MountService.getEncryptionState()
int com.android.server.MountService.verifyEncryptionPassword(String)
int com.android.server.NativeDaemonConnectorException.getCode()
int com.android.server.NativeDaemonEvent.getCmdNumber()
int com.android.server.NativeDaemonEvent.getCode()
int com.android.server.NetworkManagementService.getInterfaceRxThrottle(String)
int com.android.server.NetworkManagementService.getInterfaceTxThrottle(String)
int com.android.server.ServiceWatcher.getBestVersion()
int com.android.server.TextServicesManagerService$TextServicesSettings.getCurrentUserId()
int com.android.server.ThrottleService$DataRecorder.getPeriodCount()
int com.android.server.ThrottleService.getCliffLevel(String,int)
int com.android.server.ThrottleService.getThrottle(String)
int com.android.server.UiModeManagerService.getCurrentModeType()
int com.android.server.UiModeManagerService.getNightMode()
int com.android.server.WallpaperManagerService.getHeightHint()
int com.android.server.WallpaperManagerService.getWidthHint()
int com.android.server.WifiService$Multicaster.getUid()
int com.android.server.WifiService.getFrequencyBand()
int com.android.server.WifiService.getWifiApEnabledState()
int com.android.server.WifiService.getWifiEnabledState()
int com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy.getRetrievalAllowingWindowLocked()
int com.android.server.accessibility.AccessibilityManagerService.getActiveWindowId()
int com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow.getAlpha()
int com.android.server.accessibility.TouchExplorer$InjectedPointerTracker.getInjectedPointerDownCount()
int com.android.server.accessibility.TouchExplorer$InjectedPointerTracker.getInjectedPointersDown()
int com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getActivePointerCount()
int com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getActivePointers()
int com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getLastReceivedDownEdgeFlags()
int com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getLastReceivedUpPointerId()
int com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getPrimaryActivePointerId()
int com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getReceivedPointerDownCount()
int com.android.server.am.ActivityManagerService.getCurrentUserIdLocked()
int com.android.server.am.ActivityManagerService.getFrontActivityScreenCompatMode()
int com.android.server.am.ActivityManagerService.getLaunchedFromUid(IBinder)
int com.android.server.am.ActivityManagerService.getPackageScreenCompatMode(String)
int com.android.server.am.ActivityManagerService.getProcessLimit()
int com.android.server.am.ActivityManagerService.getRequestedOrientation(IBinder)
int com.android.server.am.ActivityManagerService.getTaskForActivityLocked(IBinder,boolean)
int com.android.server.am.ActivityManagerService.getUidForIntentSender(IIntentSender)
int com.android.server.am.ActivityManagerService.startActivityIntentSender(IApplicationThread,IntentSender,Intent,String,IBinder,String,int,int,int,Bundle)
int com.android.server.am.ActivityStack.startActivityMayWait(IApplicationThread,int,Intent,String,IBinder,String,int,int,String,ParcelFileDescriptor,IActivityManager$WaitResult,Configuration,Bundle,int)
int com.android.server.am.ActivityStack.startActivityUncheckedLocked(ActivityRecord,ActivityRecord,int,boolean,Bundle)
int com.android.server.am.AppErrorResult.get()
int com.android.server.am.CompatModePackages.getFrontActivityScreenCompatModeLocked()
int com.android.server.am.CompatModePackages.getPackageScreenCompatModeLocked(String)
int com.android.server.am.PendingIntentRecord.send(int,Intent,String,IIntentReceiver,String)
int com.android.server.am.PendingIntentRecord.sendInner(int,Intent,String,IIntentReceiver,String,IBinder,String,int,int,int,Bundle)
int com.android.server.am.ServiceRecord.getLastStartId()
int com.android.server.connectivity.Tethering$TetherInterfaceSM.getLastError()
int com.android.server.connectivity.Tethering.getLastTetherError(String)
int com.android.server.connectivity.Tethering.setUsbTethering(boolean)
int com.android.server.display.LogicalDisplay.getDisplayIdLocked()
int com.android.server.input.InputManagerService.getKeyCodeState(int,int,int)
int com.android.server.input.InputManagerService.getScanCodeState(int,int,int)
int com.android.server.input.InputManagerService.getSwitchState(int,int,int)
int com.android.server.location.GpsLocationProvider.getStatus(Bundle)
int com.android.server.location.LocationProviderProxy.getStatus(Bundle)
int com.android.server.location.MockProvider.getStatus(Bundle)
int com.android.server.location.PassiveProvider.getStatus(Bundle)
int com.android.server.net.NetworkPolicyManagerService.getUidPolicy(int)
int com.android.server.pm.Installer.getSizeInfo(String,int,String,String,String,PackageStats)
int com.android.server.pm.PackageManagerService.getApplicationEnabledSetting(String,int)
int com.android.server.pm.PackageManagerService.getComponentEnabledSetting(ComponentName,int)
int com.android.server.pm.PackageManagerService.getInstallLocation()
int com.android.server.pm.PackageManagerService.getPackageUid(String,int)
int com.android.server.pm.PackageManagerService.getPreferredActivities(List,List,String)
int com.android.server.pm.PackageManagerService.getUidForSharedUser(String)
int com.android.server.pm.PackageManagerService.installExistingPackage(String)
int com.android.server.pm.PackageSettingBase.getCurrentEnabledStateLPr(String,int)
int com.android.server.pm.PackageSettingBase.getEnabled(int)
int com.android.server.pm.PackageSettingBase.getInstallStatus()
int com.android.server.pm.Settings.getApplicationEnabledSettingLPr(String,int)
int com.android.server.pm.Settings.getComponentEnabledSettingLPr(ComponentName,int)
int com.android.server.pm.UserManagerService.getUserHandle(int)
int com.android.server.pm.UserManagerService.getUserSerialNumber(int)
int com.android.server.power.DisplayPowerState.getScreenBrightness()
int com.android.server.sip.SipSessionGroup$MakeCallCommand.getTimeout()
int com.android.server.sip.SipSessionGroup$RegisterCommand.getDuration()
int com.android.server.sip.SipSessionGroup$SipSessionImpl.getState()
int com.android.server.wm.DisplayContent.getDisplayId()
int com.android.server.wm.DragState.getDragLayerLw()
int com.android.server.wm.InputMonitor.getPointerLayer()
int com.android.server.wm.WindowManagerService.addWindow(Session,IWindow,int,WindowManager$LayoutParams,int,int,Rect,InputChannel)
int com.android.server.wm.WindowManagerService.getAppOrientation(IApplicationToken)
int com.android.server.wm.WindowManagerService.getLidState()
int com.android.server.wm.WindowManagerService.getOrientationFromAppTokensLocked()
int com.android.server.wm.WindowManagerService.getOrientationFromWindowsLocked()
int com.android.server.wm.WindowManagerService.getPendingAppTransition()
int com.android.server.wm.WindowManagerService.getPreferredOptionsPanelGravity()
int com.android.server.wm.WindowManagerService.getPropertyInt(String[],int,int,int,DisplayMetrics)
int com.android.server.wm.WindowManagerService.getRotation()
int com.android.server.wm.WindowState.getDisplayId()
int com.android.server.wm.WindowState.getSurfaceLayer()
int com.android.server.wm.WindowState.getSystemUiVisibility()
int com.android.soundrecorder.Recorder.getMaxAmplitude()
int com.android.systemui.ExpandHelper$ViewScaler.getNaturalHeight(int)
int com.android.systemui.recent.RecentsHorizontalScrollView.getHorizontalFadingEdgeLength()
int com.android.systemui.recent.RecentsHorizontalScrollView.getVerticalFadingEdgeLength()
int com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter.getCount()
int com.android.systemui.recent.RecentsScrollViewPerformanceHelper.getHorizontalFadingEdgeLengthCallback()
int com.android.systemui.recent.RecentsScrollViewPerformanceHelper.getVerticalFadingEdgeLengthCallback()
int com.android.systemui.recent.RecentsVerticalScrollView.getHorizontalFadingEdgeLength()
int com.android.systemui.recent.RecentsVerticalScrollView.getVerticalFadingEdgeLength()
int com.android.systemui.statusbar.phone.PanelHolder.getChildDrawingOrder(int,int)
int com.android.systemui.statusbar.phone.PanelHolder.getPanelIndex(PanelView)
int com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.getOpacity()
int com.android.systemui.statusbar.phone.PhoneStatusBar.getStatusBarGravity()
int com.android.systemui.statusbar.phone.PhoneStatusBar.getStatusBarHeight()
int com.android.systemui.statusbar.phone.QuickSettingsTileView.getColumnSpan()
int com.android.systemui.statusbar.policy.CurrentUserTracker.getCurrentUserId()
int com.android.systemui.statusbar.policy.DateView.getSuggestedMinimumWidth()
int com.android.systemui.statusbar.tablet.TabletStatusBar.getStatusBarGravity()
int com.android.systemui.statusbar.tablet.TabletStatusBar.getStatusBarHeight()
int com.android.uiautomator.core.QueryController.getPatternCount(UiSelector)
int com.android.uiautomator.core.UiDevice.getDisplayHeight()
int com.android.uiautomator.core.UiDevice.getDisplayRotation()
int com.android.uiautomator.core.UiDevice.getDisplayWidth()
int com.android.uiautomator.core.UiSelector.getInstance()
int com.android.uiautomator.core.UiSelector.getInt(int)
int com.android.vcard.VCardComposer.getCount()
int com.android.vcard.VCardConfig.getNameOrderType(int)
int com.android.vcard.VCardEntryCounter.getCount()
int com.android.vcard.VCardParserImpl_V21.getVersion()
int com.android.vcard.VCardParserImpl_V30.getVersion()
int com.android.vcard.VCardParserImpl_V40.getVersion()
int com.android.vcard.VCardSourceDetector.getEstimatedType()
int com.android.videoeditor.OverlayType.getType()
int com.android.videoeditor.OverlaysAdapter.getCount()
int com.android.videoeditor.ProjectPickerAdapter.getCount()
int com.android.videoeditor.TransitionType.getType()
int com.android.videoeditor.TransitionsAdapter.getCount()
int com.android.videoeditor.service.MovieAudioTrack.getAppVolume()
int com.android.videoeditor.service.MovieAudioTrack.getAudioBitrate()
int com.android.videoeditor.service.MovieAudioTrack.getAudioChannels()
int com.android.videoeditor.service.MovieAudioTrack.getAudioSamplingFrequency()
int com.android.videoeditor.service.MovieAudioTrack.getAudioType()
int com.android.videoeditor.service.MovieAudioTrack.getRawResourceId()
int com.android.videoeditor.service.MovieAudioTrack.getVolume()
int com.android.videoeditor.service.MovieEffect.getType()
int com.android.videoeditor.service.MovieMediaItem.getAppRenderingMode()
int com.android.videoeditor.service.MovieMediaItem.getAppVolume()
int com.android.videoeditor.service.MovieMediaItem.getAspectRatio()
int com.android.videoeditor.service.MovieMediaItem.getHeight()
int com.android.videoeditor.service.MovieMediaItem.getRenderingMode()
int com.android.videoeditor.service.MovieMediaItem.getVolume()
int com.android.videoeditor.service.MovieMediaItem.getWidth()
int com.android.videoeditor.service.MovieOverlay.getType()
int com.android.videoeditor.service.MovieTheme.getNameResId()
int com.android.videoeditor.service.MovieTheme.getPreviewImageResId()
int com.android.videoeditor.service.MovieTheme.getPreviewMovieResId()
int com.android.videoeditor.service.MovieTransition.getAlphaMaskBlendingPercent()
int com.android.videoeditor.service.MovieTransition.getAlphaMaskResId()
int com.android.videoeditor.service.MovieTransition.getBehavior()
int com.android.videoeditor.service.MovieTransition.getSlidingDirection()
int com.android.videoeditor.service.MovieTransition.getType()
int com.android.videoeditor.service.VideoEditorProject.getAspectRatio()
int com.android.videoeditor.service.VideoEditorProject.getMediaItemCount()
int com.android.videoeditor.service.VideoEditorProject.getZoomLevel()
int com.android.videoeditor.widgets.HorizontalScrollView.getMaxScrollAmount()
int com.android.videoeditor.widgets.MediaLinearLayout.getSelectedViewPos()
int com.android.videoeditor.widgets.OverlayView.getState()
int com.android.videoeditor.widgets.ProgressBar.getHeight()
int com.beetstra.jutf7.Base64Util.getSextet(byte)
int com.coremedia.iso.boxes.CompositionTimeToSample$Entry.getCount()
int com.coremedia.iso.boxes.CompositionTimeToSample$Entry.getOffset()
int com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry.getReserved()
int com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry.getSampleDependsOn()
int com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry.getSampleHasRedundancy()
int com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry.getSampleIsDependentOn()
int com.coremedia.iso.boxes.TrackHeaderBox.getAlternateGroup()
int com.coremedia.iso.boxes.TrackHeaderBox.getLayer()
int com.coremedia.iso.boxes.fragment.TrackRunBox$Entry.getSampleCompositionTimeOffset()
int com.coremedia.iso.boxes.fragment.TrackRunBox.getDataOffset()
int com.google.android.apps.lightcycle.opengl.GLTexture.getIndex()
int com.google.android.apps.lightcycle.opengl.Shader.getAttribute(int,String)
int com.google.android.apps.lightcycle.opengl.Shader.getUniform(int,String)
int com.google.android.apps.lightcycle.opengl.Sphere.getTextureId()
int com.google.android.apps.lightcycle.opengl.Sprite.getHeight()
int com.google.android.apps.lightcycle.opengl.Sprite.getWidth()
int com.google.android.apps.lightcycle.panorama.LightCycleView.getTotalPhotos()
int com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay.getTextureId()
int com.google.android.apps.lightcycle.panorama.PhotoCollection.getNumFrames()
int com.google.android.apps.lightcycle.sensor.DeviceOrientationDetector.getDisplayInitialOrientationDegrees()
int com.google.android.apps.lightcycle.sensor.SensorReader.getAzimuthInDeg()
int com.google.android.apps.lightcycle.sensor.SensorReader.getNumGyroSamples()
int com.google.android.gms.common.ConnectionResult.getErrorCode()
int com.google.android.mms.pdu.AcknowledgeInd.getReportAllowed()
int com.google.android.mms.pdu.DeliveryInd.getStatus()
int com.google.android.mms.pdu.EncodedStringValue.getCharacterSet()
int com.google.android.mms.pdu.GenericPdu.getMessageType()
int com.google.android.mms.pdu.GenericPdu.getMmsVersion()
int com.google.android.mms.pdu.MultimediaMessagePdu.getPriority()
int com.google.android.mms.pdu.NotificationInd.getContentClass()
int com.google.android.mms.pdu.NotificationInd.getDeliveryReport()
int com.google.android.mms.pdu.NotifyRespInd.getReportAllowed()
int com.google.android.mms.pdu.NotifyRespInd.getStatus()
int com.google.android.mms.pdu.PduBody.getPartIndex(PduPart)
int com.google.android.mms.pdu.PduBody.getPartsNum()
int com.google.android.mms.pdu.PduComposer$PositionMarker.getLength()
int com.google.android.mms.pdu.PduHeaders.getOctet(int)
int com.google.android.mms.pdu.PduPart.getCharset()
int com.google.android.mms.pdu.ReadOrigInd.getReadStatus()
int com.google.android.mms.pdu.ReadRecInd.getReadStatus()
int com.google.android.mms.pdu.RetrieveConf.getDeliveryReport()
int com.google.android.mms.pdu.RetrieveConf.getReadReport()
int com.google.android.mms.pdu.RetrieveConf.getRetrieveStatus()
int com.google.android.mms.pdu.SendConf.getResponseStatus()
int com.google.android.mms.pdu.SendReq.getDeliveryReport()
int com.google.android.mms.pdu.SendReq.getReadReport()
int com.google.android.mms.util.PduCacheEntry.getMessageBox()
int com.google.android.picasasync.PicasaApi.getAlbumPhotos(AlbumEntry,PicasaApi$EntryHandler)
int com.google.android.picasasync.PicasaApi.getAlbums(UserEntry,PicasaApi$EntryHandler)
int com.google.android.picasasync.PicasaApi.getUploadedPhotos(AlbumEntry,PicasaApi$EntryHandler)
int com.google.android.picasasync.PicasaJsonReaderParser$BooleanObjectField.getValue(boolean)
int com.google.android.picasasync.PrefetchHelper$PrefetchContext.getDownloadFailCount()
int com.google.android.picasasync.SyncState.getState(SQLiteDatabase,String)
int com.google.android.picasasync.UploadTaskEntry.getPercentageUploaded()
int com.google.android.picasasync.UploadTaskEntry.getState()
int com.google.android.picasasync.UploadTaskEntry.getUid()
int com.google.common.collect.AbstractMultiset.setCount(Object,int)
int com.google.common.collect.ForwardingMultiset.add(Object,int)
int com.google.common.collect.ForwardingMultiset.count(Object)
int com.google.common.collect.ForwardingMultiset.setCount(Object,int)
int com.google.common.collect.ForwardingSet.standardHashCode()
int com.google.common.collect.MapMaker.getConcurrencyLevel()
int com.google.common.collect.MapMaker.getInitialCapacity()
int com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getHash()
int com.google.common.collect.MapMakerInternalMap$NullEntry.getHash()
int com.google.common.collect.MapMakerInternalMap$SoftEntry.getHash()
int com.google.common.collect.MapMakerInternalMap$StrongEntry.getHash()
int com.google.common.collect.MapMakerInternalMap$WeakEntry.getHash()
int com.google.common.collect.Multisets$ImmutableEntry.getCount()
int com.google.common.collect.Multisets$UnmodifiableMultiset.setCount(Object,int)
int com.google.common.collect.TreeMultiset$LiveEntry.getCount()
int com.google.common.collect.TreeMultiset.setCount(Object,int)
int com.googlecode.mp4parser.AbstractFullBox.getFlags()
int com.googlecode.mp4parser.AbstractFullBox.getVersion()
int com.googlecode.mp4parser.authoring.TrackMetaData.getGroup()
int com.googlecode.mp4parser.authoring.TrackMetaData.getLayer()
int com.googlecode.mp4parser.util.ByteBufferByteChannel.write(ByteBuffer)
int java.security.cert.CertPathValidatorException.getIndex()
int java.security.spec.ECFieldF2m.getFieldSize()
int java.security.spec.ECFieldF2m.getM()
int java.security.spec.ECFieldFp.getFieldSize()
int java.security.spec.ECParameterSpec.getCofactor()
int java.text.AttributedString$AttributedIterator.getRunLimit(AttributedCharacterIterator$Attribute)
int java.text.AttributedString$AttributedIterator.getRunStart(AttributedCharacterIterator$Attribute)
int java.text.CollationKey.compareTo(Object)
int java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength(AbstractQueuedSynchronizer$ConditionObject)
int javax.crypto.ExemptionMechanism.getOutputSize(int)
int javax.obex.ClientOperation.getHeaderLength()
int javax.obex.ClientOperation.getMaxPacketSize()
int javax.obex.ClientOperation.getResponseCode()
int javax.obex.HeaderSet.getResponseCode()
int javax.obex.ServerOperation.getHeaderLength()
int javax.obex.ServerOperation.getMaxPacketSize()
int javax.obex.ServerOperation.getResponseCode()
int libcore.util.ZoneInfo.getDSTSavings()
int org.apache.harmony.security.fortress.Services.getCacheVersion()
int org.apache.harmony.xml.dom.DOMConfigurationImpl$13.getLength()
int org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey.getPkeyContext()
int org.apache.harmony.xnet.provider.jsse.OpenSSLEngine.getEngineContext()
int org.apache.harmony.xnet.provider.jsse.OpenSSLKey.getPkeyContext()
int org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey.getPkeyContext()
int org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.getPeerPort()
int org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.getSoWriteTimeout()
int org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.getPeerPort()
int org.apache.harmony.xnet.provider.jsse.SSLSocketImpl.getWrappedPort()
int org.apache.http.params.AbstractHttpParams.getIntParameter(String,int)
int org.apache.james.mime4j.RootInputStream.getLineNumber()
int org.apache.james.mime4j.field.address.parser.SimpleCharStream.getBeginColumn()
int org.apache.james.mime4j.field.address.parser.SimpleCharStream.getBeginLine()
int org.apache.james.mime4j.field.address.parser.SimpleCharStream.getEndColumn()
int org.apache.james.mime4j.field.address.parser.SimpleCharStream.getEndLine()
int org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream.getBeginColumn()
int org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream.getBeginLine()
int org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream.getEndColumn()
int org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream.getEndLine()
int org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date.getDay()
int org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date.getMonth()
int org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time.getHour()
int org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time.getMinute()
int org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time.getSecond()
int org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time.getZone()
int org.apache.james.mime4j.field.datetime.parser.SimpleCharStream.getBeginColumn()
int org.apache.james.mime4j.field.datetime.parser.SimpleCharStream.getBeginLine()
int org.apache.james.mime4j.field.datetime.parser.SimpleCharStream.getEndColumn()
int org.apache.james.mime4j.field.datetime.parser.SimpleCharStream.getEndLine()
int[] android.app.ActivityManagerProxy.getRunningUserIds()
int[] android.appwidget.AppWidgetHost.getAppWidgetIds()
int[] android.filterfw.core.FrameFormat.getDimensions()
int[] android.filterfw.core.GLFrame.getInts()
int[] android.filterfw.core.NativeFrame.getInts()
int[] android.filterfw.core.SerializedFrame.getInts()
int[] android.filterfw.core.SimpleFrame.getInts()
int[] android.filterfw.core.VertexFrame.getInts()
int[] android.graphics.Bitmap.getLayoutBounds()
int[] android.graphics.YuvImage.getStrides()
int[] android.hardware.display.DisplayManagerGlobal.getDisplayIds()
int[] android.hardware.display.IDisplayManager$Stub$Proxy.getDisplayIds()
int[] android.hardware.input.IInputManager$Stub$Proxy.getInputDeviceIds()
int[] android.hardware.input.InputManager.getInputDeviceIds()
int[] android.media.audiofx.Equalizer.getBandFreqRange(short)
int[] android.media.videoeditor.MediaProperties.getAllSupportedAspectRatios()
int[] android.media.videoeditor.MediaProperties.getSupportedAudioCodecs()
int[] android.media.videoeditor.MediaProperties.getSupportedVideoBitrates()
int[] android.media.videoeditor.MediaProperties.getSupportedVideoCodecs()
int[] android.media.videoeditor.MediaProperties.getSupportedVideoFileFormat()
int[] android.mtp.MtpDevice.getObjectHandles(int,int,int)
int[] android.mtp.MtpDevice.getStorageIds()
int[] android.net.INetworkPolicyManager$Stub$Proxy.getUidsWithPolicy(int)
int[] android.net.NetworkPolicyManager.getUidsWithPolicy(int)
int[] android.text.DynamicLayout.getBlockEndLines()
int[] android.text.DynamicLayout.getBlockIndices()
int[] android.view.AccessibilityIterators$AbstractTextSegmentIterator.getRange(int,int)
int[] android.widget.GridLayout$Axis.getLeadingMargins()
int[] android.widget.GridLayout$Axis.getLocations()
int[] android.widget.GridLayout$Axis.getTrailingMargins()
int[] android.widget.RelativeLayout$LayoutParams.getRules(int)
int[] com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter$TabletCalendarItemBackgrounds.getBackgrounds()
int[] com.android.camera.IconListPreference.getImageIds()
int[] com.android.camera.IconListPreference.getLargeIconIds()
int[] com.android.camera.Util.getRelativeLocation(View,View)
int[] com.android.deskclock.AlarmClock$AlarmItemAdapter.getExpandedArray()
int[] com.android.deskclock.AlarmClock$AlarmItemAdapter.getRepeatArray()
int[] com.android.deskclock.AlarmClock$AlarmItemAdapter.getSelectedAlarmsArray()
int[] com.android.gallery3d.util.IntArray.getInternalArray()
int[] com.android.inputmethod.keyboard.Key.getCurrentDrawableState()
int[] com.android.inputmethod.latin.InputPointers.getPointerIds()
int[] com.android.inputmethod.latin.InputPointers.getTimes()
int[] com.android.inputmethod.latin.InputPointers.getXCoordinates()
int[] com.android.inputmethod.latin.InputPointers.getYCoordinates()
int[] com.android.inputmethod.latin.ResizableIntArray.getPrimitiveArray()
int[] com.android.inputmethod.latin.spellcheck.SpellCheckerProximityInfo.getProximityForScript(int)
int[] com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.getAppWidgetIdsForHost(int)
int[] com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.startListeningAsUser(IAppWidgetHost,String,int,List,int)
int[] com.android.internal.widget.LockPatternUtils.getAppWidgets()
int[] com.android.launcher2.CellLayout$ViewCluster.getBottomEdge()
int[] com.android.launcher2.CellLayout$ViewCluster.getEdge(int)
int[] com.android.launcher2.CellLayout$ViewCluster.getLeftEdge()
int[] com.android.launcher2.CellLayout$ViewCluster.getRightEdge()
int[] com.android.launcher2.CellLayout$ViewCluster.getTopEdge()
int[] com.android.launcher2.Launcher.getMinSpanForWidget(Context,AppWidgetProviderInfo)
int[] com.android.launcher2.Launcher.getSpanForWidget(Context,AppWidgetProviderInfo)
int[] com.android.launcher2.Launcher.getSpanForWidget(Context,ComponentName,int,int)
int[] com.android.launcher2.PagedViewWidget.getPreviewSize()
int[] com.android.musicfx.ControlPanelEffect.getParameterIntArray(Context,String,int,ControlPanelEffect$Key)
int[] com.android.nfc.NfcService$TagService.getTechList(int)
int[] com.android.nfc.dhimpl.NativeNfcTag.getTechList()
int[] com.android.server.AppWidgetService.getAppWidgetIds(ComponentName)
int[] com.android.server.AppWidgetService.getAppWidgetIdsForHost(int)
int[] com.android.server.AppWidgetService.startListening(IAppWidgetHost,String,int,List)
int[] com.android.server.AppWidgetService.startListeningAsUser(IAppWidgetHost,String,int,List,int)
int[] com.android.server.AppWidgetServiceImpl.getAppWidgetIds(AppWidgetServiceImpl$Host)
int[] com.android.server.AppWidgetServiceImpl.getAppWidgetIds(AppWidgetServiceImpl$Provider)
int[] com.android.server.AppWidgetServiceImpl.getAppWidgetIds(ComponentName)
int[] com.android.server.AppWidgetServiceImpl.getAppWidgetIdsForHost(int)
int[] com.android.server.MountService.getStorageUsers(String)
int[] com.android.server.am.ActivityManagerService.getRunningUserIds()
int[] com.android.server.am.ActivityManagerService.getUsersLocked()
int[] com.android.server.connectivity.Tethering.getUpstreamIfaceTypes()
int[] com.android.server.display.DisplayManagerService.getDisplayIds()
int[] com.android.server.input.InputManagerService.getInputDeviceIds()
int[] com.android.server.net.NetworkPolicyManagerService.getUidsWithPolicy(int)
int[] com.android.server.pm.PackageManagerService.getPackageGids(String)
int[] com.android.server.pm.UserManagerService.getUserIds()
int[] com.android.server.pm.UserManagerService.getUserIdsLPr()
int[] com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder.getChunkSizes(Track,Movie)
int[] java.security.spec.ECFieldF2m.getMidTermsOfReductionPolynomial()
int[] javax.obex.HeaderSet.getHeaderList()
long android.app.ActivityManagerProxy.inputDispatchingTimedOut(int,boolean)
long android.app.DownloadManager.getActiveNetworkWarningBytes(Context)
long android.app.admin.DevicePolicyManager.getMaximumTimeToLock(ComponentName,int)
long android.app.admin.IDevicePolicyManager$Stub$Proxy.getMaximumTimeToLock(ComponentName,int)
long android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordExpiration(ComponentName,int)
long android.app.admin.IDevicePolicyManager$Stub$Proxy.getPasswordExpirationTimeout(ComponentName,int)
long android.content.SyncManager.access$3000()
long android.content.SyncManager.access$3700()
long android.content.SyncStorageEngine.getDelayUntilTime(Account,int,String)
long android.content.pm.ContainerEncryptionParams.getAuthenticatedDataStart()
long android.content.pm.ContainerEncryptionParams.getDataEnd()
long android.content.pm.ContainerEncryptionParams.getEncryptedDataStart()
long android.database.sqlite.SQLiteConnection.executeForLastInsertedRowId(String,Object[],CancellationSignal)
long android.database.sqlite.SQLiteConnection.executeForLong(String,Object[],CancellationSignal)
long android.filterfw.core.Frame.getBindingId()
long android.filterfw.core.Frame.getTimestamp()
long android.gesture.Gesture.getID()
long android.location.Country.getTimestamp()
long android.location.Location.getElapsedRealtimeNanos()
long android.location.LocationRequest.getExpireAt()
long android.location.LocationRequest.getFastestInterval()
long android.location.LocationRequest.getInterval()
long android.media.Metadata.getLong(int)
long android.media.videoeditor.AudioTrack.getBoundaryBeginTime()
long android.media.videoeditor.AudioTrack.getBoundaryEndTime()
long android.media.videoeditor.AudioTrack.getDuration()
long android.media.videoeditor.AudioTrack.getStartTime()
long android.media.videoeditor.AudioTrack.getTimelineDuration()
long android.media.videoeditor.Effect.getDuration()
long android.media.videoeditor.Effect.getStartTime()
long android.media.videoeditor.MediaImageItem.getDuration()
long android.media.videoeditor.MediaImageItem.getTimelineDuration()
long android.media.videoeditor.MediaVideoItem.getBoundaryBeginTime()
long android.media.videoeditor.MediaVideoItem.getBoundaryEndTime()
long android.media.videoeditor.MediaVideoItem.getDuration()
long android.media.videoeditor.MediaVideoItem.getTimelineDuration()
long android.media.videoeditor.Overlay.getDuration()
long android.media.videoeditor.Overlay.getStartTime()
long android.media.videoeditor.Transition.getDuration()
long android.media.videoeditor.Transition.getMaximumDuration()
long android.media.videoeditor.VideoEditorImpl.getDuration()
long android.mtp.MtpDevice.getParent(int)
long android.mtp.MtpDevice.getStorageId(int)
long android.mtp.MtpObjectInfo.getDateCreated()
long android.mtp.MtpObjectInfo.getDateModified()
long android.mtp.MtpStorage.getMaxFileSize()
long android.mtp.MtpStorage.getReserveSpace()
long android.mtp.MtpStorageInfo.getFreeSpace()
long android.mtp.MtpStorageInfo.getMaxCapacity()
long android.net.INetworkStatsService$Stub$Proxy.getNetworkTotalBytes(NetworkTemplate,long,long)
long android.net.NetworkStatsHistory.getTotalBytes()
long android.net.SntpClient.getNtpTime()
long android.net.SntpClient.getNtpTimeReference()
long android.net.SntpClient.getRoundTripTime()
long android.os.BatteryStats.getRadioDataUptimeMs()
long android.os.CommonTimeConfig.getMasterElectionGroupId()
long android.os.UserManager.getSerialNumberForUser(UserHandle)
long android.provider.CalendarContract$CalendarAlerts.findNextAlarmTime(ContentResolver,long)
long android.provider.Settings$Global.getLong(ContentResolver,String)
long android.provider.Settings$Global.getLong(ContentResolver,String,long)
long android.provider.Settings$Secure.getLongForUser(ContentResolver,String,int)
long android.provider.Settings$Secure.getLongForUser(ContentResolver,String,long,int)
long android.provider.Settings$System.getLongForUser(ContentResolver,String,int)
long android.provider.Settings$System.getLongForUser(ContentResolver,String,long,int)
long android.security.KeyStore.getmtime(String)
long android.speech.tts.BlockingAudioTrack.getAudioLengthMs(int)
long android.support.v13.app.FragmentPagerAdapter.getItemId(int)
long android.telephony.CellInfo.getTimeStamp()
long android.telephony.SmsCbEtwsInfo.getPrimaryNotificationTimestamp()
long android.text.Layout.getLineRangeForDraw(Canvas)
long android.util.NtpTrustedTime.getCacheAge()
long android.util.NtpTrustedTime.getCacheCertainty()
long android.util.NtpTrustedTime.getCachedNtpTime()
long android.util.NtpTrustedTime.getCachedNtpTimeReference()
long android.util.SparseLongArray.get(int)
long android.util.SparseLongArray.get(int,long)
long android.view.Choreographer.getFrameDelay()
long android.view.Choreographer.getFrameTime()
long android.view.Choreographer.getFrameTimeNanos()
long android.view.HardwareRenderer$GlRenderer.getFrameCount()
long android.view.MotionEvent.getHistoricalEventTimeNano(int)
long android.view.accessibility.AccessibilityNodeInfo.getParentNodeId()
long android.view.accessibility.AccessibilityNodeInfo.getSourceNodeId()
long android.view.accessibility.AccessibilityRecord.getSourceNodeId()
long android.webkit.DateSorter.getBoundary(int)
long android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter.getItemId(int)
long android.widget.Chronometer.getBase()
long android.widget.CursorTreeAdapter$MyCursorHelper.getId(int)
long android.widget.CursorTreeAdapter.getChildId(int,int)
long android.widget.CursorTreeAdapter.getGroupId(int)
long android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter.getItemId(int)
long android.widget.RemoteViewsService$RemoteViewsFactoryAdapter.getItemId(int)
long com.android.browser.BrowserBookmarksAdapter.getItemId(Cursor)
long com.android.browser.BrowserHistoryPage$HistoryAdapter.getChildId(int,int)
long com.android.browser.BrowserHistoryPage$HistoryChildWrapper.getItemId(int)
long com.android.browser.BrowserHistoryPage$HistoryGroupWrapper.getItemId(int)
long com.android.browser.BrowserSettings.getLastRecovered()
long com.android.browser.DateSortedExpandableListAdapter.getChildId(int,int)
long com.android.browser.DateSortedExpandableListAdapter.getCombinedChildId(long,long)
long com.android.browser.DateSortedExpandableListAdapter.getCombinedGroupId(long)
long com.android.browser.DateSortedExpandableListAdapter.getGroupId(int)
long com.android.browser.DateSortedExpandableListAdapter.getLong(int)
long com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList.getItemId(int)
long com.android.browser.NavScreen$TabAdapter.getItemId(int)
long com.android.browser.PieControl$TabAdapter.getItemId(int)
long com.android.browser.SnapshotTab.getDateCreated()
long com.android.browser.SnapshotTab.getId()
long com.android.browser.SuggestionsAdapter.getItemId(int)
long com.android.browser.Tab.getId()
long com.android.browser.TabControl.getNextId()
long com.android.browser.WebStorageSizeManager$StatFsDiskInfo.getFreeSpaceSizeBytes()
long com.android.browser.WebStorageSizeManager$StatFsDiskInfo.getTotalSizeBytes()
long com.android.browser.WebStorageSizeManager$WebKitAppCacheInfo.getAppCacheSizeBytes()
long com.android.browser.WebStorageSizeManager.getAppCacheMaxSize()
long com.android.browser.addbookmark.FolderSpinnerAdapter.getItemId(int)
long com.android.browser.provider.BrowserProvider$MySuggestionCursor.getLong(int)
long com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getLong(int)
long com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getLong(int)
long com.android.browser.util.ThreadedCursorAdapter.getItemId(int)
long com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getChildId(int,int)
long com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter.getGroupId(int)
long com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory.getItemId(int)
long com.android.calendar.AllInOneActivity.getSupportedEventTypes()
long com.android.calendar.AsyncQueryServiceHelper$OperationInfo.getDelay(TimeUnit)
long com.android.calendar.CalendarController.getDateFlags()
long com.android.calendar.CalendarController.getEventId()
long com.android.calendar.CalendarController.getTime()
long com.android.calendar.CalendarViewAdapter.getItemId(int)
long com.android.calendar.DayFragment.getSelectedTimeInMillis()
long com.android.calendar.DayFragment.getSupportedEventTypes()
long com.android.calendar.DayView.getSelectedTimeInMillis()
long com.android.calendar.Event.getEndMillis()
long com.android.calendar.Event.getStartMillis()
long com.android.calendar.EventInfoFragment.getEndMillis()
long com.android.calendar.EventInfoFragment.getEventId()
long com.android.calendar.EventInfoFragment.getStartMillis()
long com.android.calendar.EventInfoFragment.getSupportedEventTypes()
long com.android.calendar.SearchActivity.getSupportedEventTypes()
long com.android.calendar.Utils.getNextMidnight(Time,long,String)
long com.android.calendar.Utils.getTardis()
long com.android.calendar.agenda.AgendaByDayAdapter.getInstanceId(int)
long com.android.calendar.agenda.AgendaByDayAdapter.getItemId(int)
long com.android.calendar.agenda.AgendaByDayAdapter.getStartTime(int)
long com.android.calendar.agenda.AgendaFragment.getLastShowEventId()
long com.android.calendar.agenda.AgendaFragment.getSupportedEventTypes()
long com.android.calendar.agenda.AgendaListView.getFirstVisibleTime(AgendaWindowAdapter$EventInfo)
long com.android.calendar.agenda.AgendaListView.getSelectedInstanceId()
long com.android.calendar.agenda.AgendaWindowAdapter.getItemId(int)
long com.android.calendar.agenda.AgendaWindowAdapter.getSelectedInstanceId()
long com.android.calendar.event.EditEventFragment.getSupportedEventTypes()
long com.android.calendar.event.EditEventHelper.constructDefaultStartTime(long)
long com.android.calendar.month.MonthByWeekFragment.getSupportedEventTypes()
long com.android.calendar.month.SimpleWeeksAdapter.getItemId(int)
long com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.getItemId(int)
long com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.getItemId(int)
long com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment.getSupportedEventTypes()
long com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory.getItemId(int)
long com.android.calendarcommon2.Duration.getMillis()
long com.android.camera.ActivityBase.getStorageSpace()
long com.android.camera.CameraActivity.getAutoFocusTime()
long com.android.camera.CameraActivity.getCaptureStartTime()
long com.android.camera.CameraActivity.getJpegCallbackFinishTime()
long com.android.camera.CameraActivity.getPictureDisplayedToJpegCallbackTime()
long com.android.camera.CameraActivity.getShutterLag()
long com.android.camera.CameraActivity.getShutterToPictureDisplayedTime()
long com.android.camera.ComboPreferences.getLong(String,long)
long com.android.camera.Storage.getAvailableSpace()
long com.android.commands.monkey.MonkeyKeyEvent.getDownTime()
long com.android.commands.monkey.MonkeyKeyEvent.getEventTime()
long com.android.commands.monkey.MonkeyMotionEvent.getDownTime()
long com.android.commands.monkey.MonkeyMotionEvent.getEventTime()
long com.android.contacts.ContactPhotoManagerImpl$Request.getId()
long com.android.contacts.GroupMetaData.getGroupId()
long com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler.getWritableEntityId()
long com.android.contacts.calllog.CallDetailHistoryAdapter.getItemId(int)
long com.android.contacts.calllog.ExtendedCursor.getLong(int)
long com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter.getItemId(int)
long com.android.contacts.detail.ContactDetailFragment$ViewAdapter.getItemId(int)
long com.android.contacts.detail.ContactDetailFragment$ViewEntry.getId()
long com.android.contacts.detail.PhotoSelectionHandler.getWritableEntityId()
long com.android.contacts.detail.StreamItemAdapter.getItemId(int)
long com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter.getItemId(int)
long com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter.getItemId(int)
long com.android.contacts.editor.ContactEditorFragment$PhotoHandler.getWritableEntityId()
long com.android.contacts.editor.ContactEditorFragment.getContactId()
long com.android.contacts.editor.GroupMembershipView$GroupSelectionItem.getGroupId()
long com.android.contacts.editor.RawContactEditorView.getRawContactId()
long com.android.contacts.editor.RawContactReadOnlyEditorView.getRawContactId()
long com.android.contacts.group.GroupBrowseListAdapter.getItemId(int)
long com.android.contacts.group.GroupDetailFragment.getGroupId()
long com.android.contacts.group.GroupEditorFragment$Member.getContactId()
long com.android.contacts.group.GroupEditorFragment$Member.getRawContactId()
long com.android.contacts.group.GroupEditorFragment$MemberListAdapter.getItemId(int)
long com.android.contacts.group.GroupListItem.getGroupId()
long com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember.getContactId()
long com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember.getRawContactId()
long com.android.contacts.list.AccountFilterActivity$FilterListAdapter.getItemId(int)
long com.android.contacts.list.ContactListAdapter.getSelectedContactDirectoryId()
long com.android.contacts.list.ContactListAdapter.getSelectedContactId()
long com.android.contacts.list.ContactTileAdapter.getItemId(int)
long com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getChildId(int,int)
long com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter.getGroupId(int)
long com.android.contacts.list.DirectoryPartition.getDirectoryId()
long com.android.contacts.list.PhoneFavoriteMergedAdapter.getItemId(int)
long com.android.contacts.model.Contact.getDirectoryId()
long com.android.contacts.model.Contact.getFirstWritableRawContactId(Context)
long com.android.contacts.model.Contact.getId()
long com.android.contacts.model.Contact.getNameRawContactId()
long com.android.contacts.model.Contact.getPhotoId()
long com.android.contacts.model.dataitem.DataItem.getId()
long com.android.contacts.model.dataitem.GroupMembershipDataItem.getGroupRowId()
long com.android.contacts.quickcontact.QuickContactListFragment$1.getItemId(int)
long com.android.contacts.util.AccountsListAdapter.getItemId(int)
long com.android.contacts.util.MemoryUtils.getTotalMemorySize()
long com.android.contacts.util.StreamItemEntry.getId()
long com.android.contacts.util.StreamItemEntry.getTimestamp()
long com.android.contacts.util.StreamItemPhotoEntry.getId()
long com.android.contacts.vcard.ImportVCardActivity$VCardFile.getLastModified()
long com.android.deskclock.Alarms.setAlarm(Context,Alarm)
long com.android.deskclock.Utils.getTimeNow()
long com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.getItemId(int)
long com.android.deskclock.timer.TimerFragment$TimersListAdapter.getItemId(int)
long com.android.deskclock.timer.TimerObj.getTimesupTime()
long com.android.deskclock.worldclock.CitiesActivity$CityAdapter.getItemId(int)
long com.android.deskclock.worldclock.WorldClockAdapter.getItemId(int)
long com.android.email.Clock.getTime()
long com.android.email.Controller.findOrCreateMailboxOfType(long,int)
long com.android.email.MessageListContext.getMailboxId()
long com.android.email.MessageListContext.getSearchedMailbox()
long com.android.email.Preferences.getLastUsedAccountId()
long com.android.email.RefreshManager$Status.getLastRefreshTime()
long com.android.email.RefreshManager.getLastMailboxListRefreshTime(long)
long com.android.email.RefreshManager.getLastMessageListRefreshTime(long)
long com.android.email.Throttle.getLastEventTimeForTest()
long com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getAccountId()
long com.android.email.activity.AccountSelectorAdapter$CursorWithExtras.getMailboxId()
long com.android.email.activity.AccountSelectorAdapter.getAccountId(int)
long com.android.email.activity.AccountSelectorAdapter.getId(int)
long com.android.email.activity.MailboxFragmentAdapter.getAccountId(Cursor)
long com.android.email.activity.MailboxFragmentAdapter.getAccountId(int)
long com.android.email.activity.MailboxFragmentAdapter.getId(Cursor)
long com.android.email.activity.MailboxFragmentAdapter.getId(int)
long com.android.email.activity.MailboxListFragment.getAccountId()
long com.android.email.activity.MailboxListFragment.getInitialCurrentMailboxId()
long com.android.email.activity.MailboxListFragment.getSelectedMailboxId()
long com.android.email.activity.MessageList.getAccountFromIntent(Context,Intent)
long com.android.email.activity.MessageListFragment.getAccountId()
long com.android.email.activity.MessageListFragment.getMailboxId()
long com.android.email.activity.MessageOrderManager.getCurrentMessageId()
long com.android.email.activity.MessageViewFragment.getMessageId()
long com.android.email.activity.MessageViewFragmentBase.getAccountId()
long com.android.email.activity.UIControllerBase.getActualAccountId()
long com.android.email.activity.UIControllerBase.getMailboxListMailboxId()
long com.android.email.activity.UIControllerBase.getMessageId()
long com.android.email.activity.UIControllerBase.getMessageListMailboxId()
long com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback.getMailboxId()
long com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback.getUIAccountId()
long com.android.email.activity.UIControllerOnePane.getMailboxSettingsMailboxId()
long com.android.email.activity.UIControllerOnePane.getUIAccountId()
long com.android.email.activity.UIControllerSearchTwoPane.getMailboxSettingsMailboxId()
long com.android.email.activity.UIControllerSearchTwoPane.getUIAccountId()
long com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback.getMailboxId()
long com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback.getUIAccountId()
long com.android.email.activity.UIControllerTwoPane.getMailboxSettingsMailboxId()
long com.android.email.activity.UIControllerTwoPane.getUIAccountId()
long com.android.email.mail.transport.CountingOutputStream.getCount()
long com.android.email.widget.EmailWidget.getItemId(int)
long com.android.email.widget.WidgetManager.loadAccountIdPref(Context,int)
long com.android.email.widget.WidgetManager.loadMailboxIdPref(Context,int)
long com.android.emailcommon.provider.Mailbox.findMailboxOfType(Context,long,int)
long com.android.emailcommon.utility.SSLUtils$TrackingKeyManager.getLastCertReqTime()
long com.android.ex.chips.BaseRecipientAdapter.getItemId(int)
long com.android.ex.chips.RecipientAlternatesAdapter.getItemId(int)
long com.android.ex.chips.RecipientChip.getContactId()
long com.android.ex.chips.RecipientChip.getDataId()
long com.android.ex.chips.RecipientEntry.getContactId()
long com.android.ex.chips.RecipientEntry.getDataId()
long com.android.exchange.EasOutboxService$SendMailEntity.getContentLength()
long com.android.exchange.provider.ExchangeDirectoryProvider.getAccountIdByName(Context,String)
long com.android.exchange.utility.CalendarUtilities.createCalendar(EasSyncService,Account,Mailbox)
long com.android.exchange.utility.CalendarUtilities.getLocalAllDayCalendarTime(long,TimeZone)
long com.android.exchange.utility.CalendarUtilities.getMillisAtTimeZoneDateTransition(TimeZone,CalendarUtilities$TimeZoneDate)
long com.android.exchange.utility.CalendarUtilities.getUtcAllDayCalendarTime(long,TimeZone)
long com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter.getItemId(int)
long com.android.gallery3d.app.GalleryActionBar$ClusterAdapter.getItemId(int)
long com.android.gallery3d.data.DataManager.getTotalTargetCacheSize()
long com.android.gallery3d.data.DataManager.getTotalUsedCacheSize()
long com.android.gallery3d.data.FilterDeleteSet.reload()
long com.android.gallery3d.data.LocalMediaItem.getDateInMs()
long com.android.gallery3d.data.LocalMediaItem.getSize()
long com.android.gallery3d.data.MediaItem.getDateInMs()
long com.android.gallery3d.data.MediaItem.getSize()
long com.android.gallery3d.data.MediaObject.getCacheSize()
long com.android.gallery3d.data.MediaObject.getDataVersion()
long com.android.gallery3d.data.MediaSource.getTotalTargetCacheSize()
long com.android.gallery3d.data.MediaSource.getTotalUsedCacheSize()
long com.android.gallery3d.data.MtpImage.getDateInMs()
long com.android.gallery3d.data.MtpImage.getSize()
long com.android.gallery3d.data.PathMatcher.getLongVar(int)
long com.android.gallery3d.data.SizeClustering.getMinSize(int)
long com.android.gallery3d.exif.ExifTag.getUnsignedLong(int)
long com.android.gallery3d.exif.Rational.getDenominator()
long com.android.gallery3d.exif.Rational.getNominator()
long com.android.gallery3d.gadget.WidgetService$PhotoRVFactory.getItemId(int)
long com.android.gallery3d.picasasource.BasePicasaAlbum.reload()
long com.android.gallery3d.picasasource.PicasaAlbum.getCacheSize()
long com.android.gallery3d.picasasource.PicasaAlbumSet.getTotalTargetCacheSize(PicasaSource)
long com.android.gallery3d.picasasource.PicasaAlbumSet.getTotalUsedCacheSize(Context)
long com.android.gallery3d.picasasource.PicasaImage.getAlbumId()
long com.android.gallery3d.picasasource.PicasaImage.getDateInMs()
long com.android.gallery3d.picasasource.PicasaImage.getSize()
long com.android.gallery3d.picasasource.PicasaSource.getDateTaken(MediaObject)
long com.android.gallery3d.picasasource.PicasaSource.getPicasaId(MediaObject)
long com.android.gallery3d.picasasource.PicasaSource.getTotalTargetCacheSize()
long com.android.gallery3d.picasasource.PicasaSource.getTotalUsedCacheSize()
long com.android.gallery3d.ui.AnimationTime.get()
long com.android.gallery3d.ui.CacheStorageUsageInfo.getExpectedUsedBytes()
long com.android.gallery3d.ui.CacheStorageUsageInfo.getFreeBytes()
long com.android.gallery3d.ui.CacheStorageUsageInfo.getTotalBytes()
long com.android.gallery3d.ui.CacheStorageUsageInfo.getUsedBytes()
long com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter.getItemId(int)
long com.android.gallery3d.ui.PopupList$ItemDataAdapter.getItemId(int)
long com.android.inputmethod.keyboard.PointerTracker$TimeRecorder.getLastLetterTypingTime()
long com.android.inputmethod.keyboard.PointerTracker.getDownTime()
long com.android.inputmethod.keyboard.ProximityInfo.getNativeProximityInfo()
long com.android.inputmethod.latin.DicTraverseSession.getSession()
long com.android.internal.app.IBatteryStats$Stub$Proxy.getAwakeTimeBattery()
long com.android.internal.app.IBatteryStats$Stub$Proxy.getAwakeTimePlugged()
long com.android.internal.app.IMediaContainerService$Stub$Proxy.calculateDirectorySize(String)
long com.android.internal.app.IMediaContainerService$Stub$Proxy.calculateInstalledSize(String,boolean)
long com.android.internal.app.ResolverActivity$ResolveListAdapter.getItemId(int)
long com.android.internal.backup.IBackupTransport$Stub$Proxy.getCurrentRestoreSet()
long com.android.internal.backup.LocalTransport.getCurrentRestoreSet()
long com.android.internal.location.ILocationProvider$Stub$Proxy.getStatusUpdateTime()
long com.android.internal.os.BatteryStatsImpl$Timer.getTotalTimeLocked(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv.getLaunchTimeToNowLocked(long)
long com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv.getStartTime(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv.getStartTimeToNowLocked(long)
long com.android.internal.os.BatteryStatsImpl$Uid$Proc.getForegroundTime(int)
long com.android.internal.os.BatteryStatsImpl$Uid$Proc.getSystemTime(int)
long com.android.internal.os.BatteryStatsImpl$Uid$Proc.getTimeAtCpuSpeedStep(int,int)
long com.android.internal.os.BatteryStatsImpl$Uid$Proc.getUserTime(int)
long com.android.internal.os.BatteryStatsImpl$Uid.getAudioTurnedOnTime(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid.getFullWifiLockTime(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid.getTcpBytesReceived(int)
long com.android.internal.os.BatteryStatsImpl$Uid.getTcpBytesSent(int)
long com.android.internal.os.BatteryStatsImpl$Uid.getVideoTurnedOnTime(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid.getWifiMulticastTime(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid.getWifiRunningTime(long,int)
long com.android.internal.os.BatteryStatsImpl$Uid.getWifiScanTime(long,int)
long com.android.internal.os.BatteryStatsImpl.getAwakeTimeBattery()
long com.android.internal.os.BatteryStatsImpl.getAwakeTimePlugged()
long com.android.internal.os.BatteryStatsImpl.getBatteryRealtime(long)
long com.android.internal.os.BatteryStatsImpl.getBatteryRealtimeLocked(long)
long com.android.internal.os.BatteryStatsImpl.getBatteryUptime(long)
long com.android.internal.os.BatteryStatsImpl.getBatteryUptimeLocked()
long com.android.internal.os.BatteryStatsImpl.getBatteryUptimeLocked(long)
long com.android.internal.os.BatteryStatsImpl.getBluetoothOnTime(long,int)
long com.android.internal.os.BatteryStatsImpl.getGlobalWifiRunningTime(long,int)
long com.android.internal.os.BatteryStatsImpl.getHistoryBaseTime()
long com.android.internal.os.BatteryStatsImpl.getMobileTcpBytesReceived(int)
long com.android.internal.os.BatteryStatsImpl.getMobileTcpBytesSent(int)
long com.android.internal.os.BatteryStatsImpl.getPhoneDataConnectionTime(int,long,int)
long com.android.internal.os.BatteryStatsImpl.getPhoneOnTime(long,int)
long com.android.internal.os.BatteryStatsImpl.getPhoneSignalScanningTime(long,int)
long com.android.internal.os.BatteryStatsImpl.getPhoneSignalStrengthTime(int,long,int)
long com.android.internal.os.BatteryStatsImpl.getProcessWakeTime(int,int,long)
long com.android.internal.os.BatteryStatsImpl.getRadioDataUptime()
long com.android.internal.os.BatteryStatsImpl.getRadioDataUptimeMs()
long com.android.internal.os.BatteryStatsImpl.getScreenBrightnessTime(int,long,int)
long com.android.internal.os.BatteryStatsImpl.getScreenOnTime(long,int)
long com.android.internal.os.BatteryStatsImpl.getTotalTcpBytesReceived(int)
long com.android.internal.os.BatteryStatsImpl.getTotalTcpBytesSent(int)
long com.android.internal.os.BatteryStatsImpl.getWifiOnTime(long,int)
long com.android.internal.os.ProcessStats.getCpuTimeForPid(int)
long com.android.internal.policy.impl.GlobalActions$MyAdapter.getItemId(int)
long com.android.internal.policy.impl.PhoneWindowManager.interceptKeyBeforeDispatching(WindowManagerPolicy$WindowState,KeyEvent,int)
long com.android.internal.policy.impl.keyguard.KeyguardHostView.getUserActivityTimeout()
long com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.getUserActivityTimeout()
long com.android.internal.util.StateMachine$LogRec.getTime()
long com.android.internal.util.StateMachine$LogRec.getWhat()
long com.android.internal.widget.ILockSettings$Stub$Proxy.getLong(String,long,int)
long com.android.internal.widget.LockPatternUtils.getLockoutAttemptDeadline()
long com.android.internal.widget.LockSettingsService.getLong(String,long,int)
long com.android.launcher2.DragController.getLastGestureUpTime()
long com.android.launcher2.LauncherViewPropertyAnimator.getDuration()
long com.android.launcher2.LauncherViewPropertyAnimator.getStartDelay()
long com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter.getItemId(int)
long com.android.mms.data.Contact.getRecipientId()
long com.android.mms.data.Conversation.getDate()
long com.android.mms.data.Conversation.getOrCreateThreadId(Context,String)
long com.android.mms.data.Conversation.getThreadId()
long com.android.mms.transaction.DefaultRetryScheme.getWaitingInterval()
long com.android.mms.transaction.MessagingNotification$NotificationInfo.getTime()
long com.android.mms.transaction.MessagingNotification.getSmsThreadId(Context,Uri)
long com.android.mms.transaction.MessagingNotification.getThreadId(Context,Uri)
long com.android.mms.ui.MessageItem.getMessageId()
long com.android.mms.util.Recycler$MmsRecycler.getThreadId(Cursor)
long com.android.mms.util.Recycler$SmsRecycler.getThreadId(Cursor)
long com.android.mms.util.SendingProgressTokenManager.get(Object)
long com.android.mms.widget.MmsWidgetService$MmsFactory.getItemId(int)
long com.android.org.bouncycastle.util.io.Streams.pipeAllLimited(InputStream,long,OutputStream)
long com.android.phone.CallTime.getCallDuration(Call)
long com.android.phone.EmergencyCallbackModeService.getEmergencyCallbackModeTimeout()
long com.android.providers.contacts.ContactsDatabaseHelper.getContactId(long)
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeId(String)
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForEmail()
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForIm()
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForOrganization()
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForPhone()
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForSip()
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForStructuredName()
long com.android.providers.contacts.ContactsDatabaseHelper.getMimeTypeIdForStructuredPostal()
long com.android.providers.contacts.ContactsDatabaseHelper.getOrCreateAccountIdInTransaction(AccountWithDataSet)
long com.android.providers.contacts.ContactsDatabaseHelper.getPackageId(String)
long com.android.providers.contacts.ContactsProvider2.insertStatusUpdate(ContentValues)
long com.android.providers.contacts.DataRowHandler.getMimeTypeId()
long com.android.providers.contacts.DataRowHandler.insert(SQLiteDatabase,TransactionContext,long,ContentValues)
long com.android.providers.contacts.DataRowHandlerForGroupMembership.insert(SQLiteDatabase,TransactionContext,long,ContentValues)
long com.android.providers.contacts.DataRowHandlerForPhoneNumber.insert(SQLiteDatabase,TransactionContext,long,ContentValues)
long com.android.providers.contacts.DataRowHandlerForPhoto.insert(SQLiteDatabase,TransactionContext,long,ContentValues)
long com.android.providers.contacts.DbModifierWithNotification.insert(ContentValues)
long com.android.providers.contacts.DbModifierWithNotification.insert(String,String,ContentValues)
long com.android.providers.contacts.PhotoStore.getTotalSize()
long com.android.providers.contacts.PhotoStore.insert(PhotoProcessor,boolean)
long com.android.providers.contacts.ReorderingCursorWrapper.getLong(int)
long com.android.providers.contacts.aggregation.ContactAggregator.onRawContactInsert(TransactionContext,SQLiteDatabase,long)
long com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore.getContactId()
long com.android.providers.contacts.util.MemoryUtils.getTotalMemorySize()
long com.android.providers.downloads.DownloadHandler.getCurrentSpeed(long)
long com.android.server.BackupManagerService.getAvailableRestoreToken(String)
long com.android.server.DevicePolicyManagerService.getMaximumTimeToLock(ComponentName,int)
long com.android.server.DevicePolicyManagerService.getPasswordExpiration(ComponentName,int)
long com.android.server.DevicePolicyManagerService.getPasswordExpirationTimeout(ComponentName,int)
long com.android.server.DeviceStorageMonitorService.getMemoryLowThreshold()
long com.android.server.ThrottleService$DataRecorder.getPeriodEnd()
long com.android.server.ThrottleService$DataRecorder.getPeriodRx(int)
long com.android.server.ThrottleService$DataRecorder.getPeriodStart()
long com.android.server.ThrottleService$DataRecorder.getPeriodTx(int)
long com.android.server.ThrottleService.getByteCount(String,int,int,int)
long com.android.server.ThrottleService.getCliffThreshold(String,int)
long com.android.server.ThrottleService.getPeriodStartTime(String)
long com.android.server.ThrottleService.getResetTime(String)
long com.android.server.TwilightService$TwilightState.getTodaySunrise()
long com.android.server.TwilightService$TwilightState.getTodaySunset()
long com.android.server.TwilightService$TwilightState.getTomorrowSunrise()
long com.android.server.TwilightService$TwilightState.getYesterdaySunset()
long com.android.server.accessibility.TouchExplorer$InjectedPointerTracker.getLastInjectedDownEventTime()
long com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getLastReceivedUpPointerDownTime()
long com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker.getReceivedPointerDownTime(int)
long com.android.server.am.ActivityRecord$Token.getKeyDispatchingTimeout()
long com.android.server.am.ActivityRecord.getKeyDispatchingTimeout()
long com.android.server.am.BatteryStatsService.getAwakeTimeBattery()
long com.android.server.am.BatteryStatsService.getAwakeTimePlugged()
long com.android.server.am.ProcessList.getMemLevel(int)
long com.android.server.am.TaskRecord.getInactiveDuration()
long com.android.server.location.GpsLocationProvider.getStatusUpdateTime()
long com.android.server.location.LocationBasedCountryDetector.getQueryLocationTimeout()
long com.android.server.location.LocationProviderProxy.getStatusUpdateTime()
long com.android.server.location.MockProvider.getStatusUpdateTime()
long com.android.server.location.PassiveProvider.getStatusUpdateTime()
long com.android.server.net.NetworkStatsCollection.getEndMillis()
long com.android.server.net.NetworkStatsCollection.getFirstAtomicBucketMillis()
long com.android.server.net.NetworkStatsCollection.getStartMillis()
long com.android.server.net.NetworkStatsCollection.getTotalBytes()
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getDevPersistBytes(long)
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getGlobalAlertBytes(long)
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getPollInterval()
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getTimeCacheMaxAge()
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getUidPersistBytes(long)
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getUidTagPersistBytes(long)
long com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings.getXtPersistBytes(long)
long com.android.server.net.NetworkStatsService.getNetworkTotalBytes(NetworkTemplate,long,long)
long com.android.server.wm.InputMonitor.notifyANR(InputApplicationHandle,InputWindowHandle)
long com.android.server.wm.WindowState.getInputDispatchingTimeoutNanos()
long com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter.getItemId(int)
long com.android.videoeditor.BaseAdapterWithImages.getItemId(int)
long com.android.videoeditor.ProjectPickerAdapter.getItemId(int)
long com.android.videoeditor.service.MovieAudioTrack.getAppStartTime()
long com.android.videoeditor.service.MovieAudioTrack.getBoundaryBeginTime()
long com.android.videoeditor.service.MovieAudioTrack.getBoundaryEndTime()
long com.android.videoeditor.service.MovieAudioTrack.getDuration()
long com.android.videoeditor.service.MovieAudioTrack.getStartTime()
long com.android.videoeditor.service.MovieAudioTrack.getTimelineDuration()
long com.android.videoeditor.service.MovieEffect.getDuration()
long com.android.videoeditor.service.MovieEffect.getStartTime()
long com.android.videoeditor.service.MovieMediaItem.getAppBoundaryBeginTime()
long com.android.videoeditor.service.MovieMediaItem.getAppBoundaryEndTime()
long com.android.videoeditor.service.MovieMediaItem.getAppTimelineDuration()
long com.android.videoeditor.service.MovieMediaItem.getBoundaryBeginTime()
long com.android.videoeditor.service.MovieMediaItem.getBoundaryEndTime()
long com.android.videoeditor.service.MovieMediaItem.getDuration()
long com.android.videoeditor.service.MovieOverlay.getAppDuration()
long com.android.videoeditor.service.MovieOverlay.getAppStartTime()
long com.android.videoeditor.service.MovieOverlay.getDuration()
long com.android.videoeditor.service.MovieOverlay.getStartTime()
long com.android.videoeditor.service.MovieTransition.getAppDuration()
long com.android.videoeditor.service.MovieTransition.getDuration()
long com.android.videoeditor.service.VideoEditorProject$Download.getTime()
long com.android.videoeditor.service.VideoEditorProject.getLastSaved()
long com.android.videoeditor.service.VideoEditorProject.getMediaItemBeginTime(String)
long com.android.videoeditor.service.VideoEditorProject.getPlayheadPos()
long com.android.videoeditor.service.VideoEditorProject.getProjectDuration()
long com.android.videoeditor.util.MediaItemUtils.getDefaultImageDuration()
long com.android.videoeditor.util.MediaItemUtils.getMinimumImageItemDuration()
long com.android.videoeditor.util.MediaItemUtils.getMinimumMediaItemDuration(MovieMediaItem)
long com.android.videoeditor.util.MediaItemUtils.getMinimumVideoItemDuration()
long com.coremedia.iso.IsoFile.getSize()
long com.coremedia.iso.boxes.CompositionTimeToSample.getContentSize()
long com.coremedia.iso.boxes.DataEntryUrlBox.getContentSize()
long com.coremedia.iso.boxes.DataReferenceBox.getContentSize()
long com.coremedia.iso.boxes.FileTypeBox.getContentSize()
long com.coremedia.iso.boxes.FileTypeBox.getMinorVersion()
long com.coremedia.iso.boxes.HandlerBox.getContentSize()
long com.coremedia.iso.boxes.MediaHeaderBox.getContentSize()
long com.coremedia.iso.boxes.MediaHeaderBox.getCreationTime()
long com.coremedia.iso.boxes.MediaHeaderBox.getDuration()
long com.coremedia.iso.boxes.MediaHeaderBox.getModificationTime()
long com.coremedia.iso.boxes.MediaHeaderBox.getTimescale()
long com.coremedia.iso.boxes.MovieHeaderBox.getContentSize()
long com.coremedia.iso.boxes.MovieHeaderBox.getCreationTime()
long com.coremedia.iso.boxes.MovieHeaderBox.getDuration()
long com.coremedia.iso.boxes.MovieHeaderBox.getModificationTime()
long com.coremedia.iso.boxes.MovieHeaderBox.getNextTrackId()
long com.coremedia.iso.boxes.MovieHeaderBox.getTimescale()
long com.coremedia.iso.boxes.SampleDependencyTypeBox.getContentSize()
long com.coremedia.iso.boxes.SampleDescriptionBox.getContentSize()
long com.coremedia.iso.boxes.SampleSizeBox.getContentSize()
long com.coremedia.iso.boxes.SampleSizeBox.getSampleCount()
long com.coremedia.iso.boxes.SampleSizeBox.getSampleSize()
long com.coremedia.iso.boxes.SampleToChunkBox$Entry.getFirstChunk()
long com.coremedia.iso.boxes.SampleToChunkBox$Entry.getSampleDescriptionIndex()
long com.coremedia.iso.boxes.SampleToChunkBox$Entry.getSamplesPerChunk()
long com.coremedia.iso.boxes.SampleToChunkBox.getContentSize()
long com.coremedia.iso.boxes.StaticChunkOffsetBox.getContentSize()
long com.coremedia.iso.boxes.SyncSampleBox.getContentSize()
long com.coremedia.iso.boxes.TimeToSampleBox$Entry.getCount()
long com.coremedia.iso.boxes.TimeToSampleBox$Entry.getDelta()
long com.coremedia.iso.boxes.TimeToSampleBox.getContentSize()
long com.coremedia.iso.boxes.TrackHeaderBox.getContentSize()
long com.coremedia.iso.boxes.TrackHeaderBox.getCreationTime()
long com.coremedia.iso.boxes.TrackHeaderBox.getDuration()
long com.coremedia.iso.boxes.TrackHeaderBox.getModificationTime()
long com.coremedia.iso.boxes.TrackHeaderBox.getTrackId()
long com.coremedia.iso.boxes.fragment.MovieFragmentBox.getOffset()
long com.coremedia.iso.boxes.fragment.TrackExtendsBox.getContentSize()
long com.coremedia.iso.boxes.fragment.TrackExtendsBox.getDefaultSampleDuration()
long com.coremedia.iso.boxes.fragment.TrackExtendsBox.getDefaultSampleSize()
long com.coremedia.iso.boxes.fragment.TrackExtendsBox.getTrackId()
long com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getBaseDataOffset()
long com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getContentSize()
long com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getDefaultSampleDuration()
long com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getDefaultSampleSize()
long com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getSampleDescriptionIndex()
long com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox.getTrackId()
long com.coremedia.iso.boxes.fragment.TrackRunBox$Entry.getSampleDuration()
long com.coremedia.iso.boxes.fragment.TrackRunBox$Entry.getSampleSize()
long com.coremedia.iso.boxes.fragment.TrackRunBox.getContentSize()
long com.coremedia.iso.boxes.mdat.MediaDataBox.getSize()
long com.google.android.mms.pdu.DeliveryInd.getDate()
long com.google.android.mms.pdu.MultimediaMessagePdu.getDate()
long com.google.android.mms.pdu.NotificationInd.getExpiry()
long com.google.android.mms.pdu.NotificationInd.getMessageSize()
long com.google.android.mms.pdu.PduHeaders.getLongInteger(int)
long com.google.android.mms.pdu.ReadOrigInd.getDate()
long com.google.android.mms.pdu.ReadRecInd.getDate()
long com.google.android.mms.pdu.SendReq.getExpiry()
long com.google.android.mms.pdu.SendReq.getMessageSize()
long com.google.android.mms.util.PduCacheEntry.getThreadId()
long com.google.android.picasastore.SystemProperties.getLong(String,long)
long com.google.android.picasasync.PicasaDatabaseHelper.getUserId(String)
long com.google.android.picasasync.UploadTaskEntry.getBytesTotal()
long com.google.android.picasasync.UploadTaskEntry.getBytesUploaded()
long com.google.android.picasasync.UploadTaskEntry.getUploadedTime()
long com.google.android.picasasync.UploadsManager.addManualUpload(UploadTaskEntry)
long com.google.common.collect.MapMaker.getExpireAfterAccessNanos()
long com.google.common.collect.MapMaker.getExpireAfterWriteNanos()
long com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$NullEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$SoftEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$StrongEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$WeakEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry.getExpirationTime()
long com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry.getExpirationTime()
long com.google.common.io.ByteStreams.copy(InputStream,OutputStream)
long com.googlecode.mp4parser.AbstractBox.getSize()
long com.googlecode.mp4parser.AbstractContainerBox.getContentSize()
long com.googlecode.mp4parser.FullContainerBox.getContentSize()
long com.googlecode.mp4parser.authoring.Movie.getNextTrackId()
long com.googlecode.mp4parser.authoring.TrackMetaData.getTrackId()
long com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat.getDataOffset()
long com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat.getSize()
long com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder.getDuration(Track)
long com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder.getTimescale(Movie)
long com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder.getDuration(Track)
long java.util.zip.Adler32.getValue()
long javax.obex.ClientOperation.getLength()
long javax.obex.ClientSession.getConnectionID()
long javax.obex.ServerOperation.getLength()
long javax.obex.ServerRequestHandler.getConnectionId()
long org.apache.commons.io.IOUtils.copyLarge(InputStream,OutputStream)
long org.apache.http.params.AbstractHttpParams.getLongParameter(String,long)
long[] com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.getLapTimes()
long[] com.android.internal.app.IMediaContainerService$Stub$Proxy.getFileSystemStats(String)
long[] com.android.internal.os.ProcessStats.getLastCpuSpeedTimes()
long[] com.android.internal.policy.impl.PhoneWindowManager.getLongIntArray(Resources,int)
long[] com.android.server.NotificationManagerService.getLongArray(Resources,int,int,long[])
long[] com.android.server.am.ActivityManagerService.getProcessPss(int[])
long[] com.coremedia.iso.boxes.SampleSizeBox.getSampleSizes()
long[] com.coremedia.iso.boxes.StaticChunkOffsetBox.getChunkOffsets()
long[] com.coremedia.iso.boxes.SyncSampleBox.getSampleNumber()
long[] com.coremedia.iso.boxes.TrackHeaderBox.getMatrix()
long[] com.googlecode.mp4parser.authoring.Mp4TrackImpl.getSyncSamples()
long[] com.googlecode.mp4parser.authoring.TrackMetaData.getMatrix()
long[] com.googlecode.mp4parser.authoring.tracks.CroppedTrack.getSyncSamples()
short android.media.audiofx.BassBoost.getRoundedStrength()
short android.media.audiofx.Equalizer.getBand(int)
short android.media.audiofx.Equalizer.getBandLevel(short)
short android.media.audiofx.Equalizer.getCurrentPreset()
short android.media.audiofx.Equalizer.getNumberOfBands()
short android.media.audiofx.Equalizer.getNumberOfPresets()
short android.media.audiofx.PresetReverb.getPreset()
short android.media.audiofx.Virtualizer.getRoundedStrength()
short com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.getRssi()
short com.android.browser.provider.BrowserProvider$MySuggestionCursor.getShort(int)
short com.android.browser.provider.BrowserProvider2$SuggestionsCursor.getShort(int)
short com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor.getShort(int)
short com.android.contacts.calllog.ExtendedCursor.getShort(int)
short com.android.gallery3d.exif.ExifTag.getDataType()
short com.android.gallery3d.exif.ExifTag.getTagId()
short com.android.mms.dom.AttrImpl.getNodeType()
short com.android.mms.dom.DocumentImpl.getNodeType()
short com.android.mms.dom.ElementImpl.getNodeType()
short com.android.mms.dom.smil.ElementTimeImpl.getFill()
short com.android.mms.dom.smil.ElementTimeImpl.getFillDefault()
short com.android.mms.dom.smil.SmilDocumentImpl.getFill()
short com.android.mms.dom.smil.SmilMediaElementImpl.getFill()
short com.android.mms.dom.smil.SmilParElementImpl.getFill()
short com.android.mms.dom.smil.TimeImpl.getTimeType()
short com.android.providers.contacts.ReorderingCursorWrapper.getShort(int)
short[] android.media.audiofx.Equalizer.getBandLevelRange()
short[] android.media.videoeditor.WaveformData.getFrameGains()
void android.accessibilityservice.AccessibilityService.setWallpaper(Bitmap)
void android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy.onGesture(int)
void android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy.setConnection(IAccessibilityServiceConnection,int)
void android.accounts.AbstractAccountAuthenticator$Transport.getAuthTokenLabel(IAccountAuthenticatorResponse,String)
void android.accounts.AbstractAccountAuthenticator$Transport.updateCredentials(IAccountAuthenticatorResponse,Account,String,Bundle)
void android.accounts.AccountAuthenticatorActivity.sendBroadcast(Intent,String)
void android.accounts.AccountAuthenticatorActivity.sendOrderedBroadcast(Intent,String,BroadcastReceiver,Handler,int,String,Bundle)
void android.accounts.AccountAuthenticatorActivity.setRequestedOrientation(int)
void android.accounts.AccountAuthenticatorActivity.setWallpaper(InputStream)
void android.accounts.AccountAuthenticatorCache$MySerializer.writeAsXml(Object,XmlSerializer)
void android.accounts.AccountManager$AmsTask.set(Object)
void android.accounts.AccountManager.addOnAccountsUpdatedListener(OnAccountsUpdateListener,Handler,boolean)
void android.accounts.AccountManager.invalidateAuthToken(String,String)
void android.accounts.AccountManager.setAuthToken(Account,String,String)
void android.accounts.AccountManager.setPassword(Account,String)
void android.accounts.AccountManager.setUserData(Account,String,String)
void android.accounts.AccountManager.updateAppPermission(Account,String,int,boolean)
void android.accounts.AccountManagerService$3.onResult(Bundle)
void android.accounts.AccountManagerService$4.onResult(Bundle)
void android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession.sendResult()
void android.accounts.AccountManagerService$RemoveAccountSession.onResult(Bundle)
void android.accounts.AccountManagerService$TestFeaturesSession.onResult(Bundle)
void android.accounts.AccountManagerService.dump(FileDescriptor,PrintWriter,String[])
void android.accounts.AccountManagerService.getAccountsByFeatures(IAccountManagerResponse,String,String[])
void android.accounts.AccountManagerService.getAuthToken(IAccountManagerResponse,Account,String,boolean,boolean,Bundle)
void android.accounts.AccountManagerService.installNotification(int,Notification,UserHandle)
void android.accounts.AccountManagerService.invalidateAuthToken(String,String)
void android.accounts.AccountManagerService.setAuthToken(Account,String,String)
void android.accounts.AccountManagerService.setPassword(Account,String)
void android.accounts.AccountManagerService.setUserData(Account,String,String)
void android.accounts.AccountManagerService.updateAppPermission(Account,String,int,boolean)
void android.accounts.AccountManagerService.writeAuthTokenIntoCacheLocked(AccountManagerService$UserAccounts,SQLiteDatabase,Account,String,String)
void android.accounts.AccountManagerService.writeUserDataIntoCacheLocked(AccountManagerService$UserAccounts,SQLiteDatabase,Account,String,String)
void android.accounts.IAccountAuthenticator$Stub$Proxy.addAccount(IAccountAuthenticatorResponse,String,String,String[],Bundle)
void android.accounts.IAccountAuthenticator$Stub$Proxy.confirmCredentials(IAccountAuthenticatorResponse,Account,Bundle)
void android.accounts.IAccountAuthenticator$Stub$Proxy.editProperties(IAccountAuthenticatorResponse,String)
void android.accounts.IAccountAuthenticator$Stub$Proxy.getAccountRemovalAllowed(IAccountAuthenticatorResponse,Account)
void android.accounts.IAccountAuthenticator$Stub$Proxy.getAuthToken(IAccountAuthenticatorResponse,Account,String,Bundle)
void android.accounts.IAccountAuthenticator$Stub$Proxy.getAuthTokenLabel(IAccountAuthenticatorResponse,String)
void android.accounts.IAccountAuthenticator$Stub$Proxy.hasFeatures(IAccountAuthenticatorResponse,Account,String[])
void android.accounts.IAccountAuthenticator$Stub$Proxy.updateCredentials(IAccountAuthenticatorResponse,Account,String,Bundle)
void android.accounts.IAccountAuthenticatorResponse$Stub$Proxy.onError(int,String)
void android.accounts.IAccountManager$Stub$Proxy.confirmCredentialsAsUser(IAccountManagerResponse,Account,Bundle,boolean,int)
void android.accounts.IAccountManager$Stub$Proxy.getAuthTokenLabel(IAccountManagerResponse,String,String)
void android.accounts.IAccountManager$Stub$Proxy.updateAppPermission(Account,String,int,boolean)
void android.app.Activity.dumpInner(String,FileDescriptor,PrintWriter,String[])
void android.app.Activity.onWindowAttributesChanged(WindowManager$LayoutParams)
void android.app.Activity.setContentView(View,ViewGroup$LayoutParams)
void android.app.Activity.startActivity(Intent,Bundle)
void android.app.Activity.startActivityAsUser(Intent,UserHandle)
void android.app.Activity.startActivityForResult(Intent,int,Bundle)
void android.app.Activity.startActivityFromChild(Activity,Intent,int,Bundle)
void android.app.Activity.startActivityFromFragment(Fragment,Intent,int,Bundle)
void android.app.Activity.startIntentSender(IntentSender,Intent,int,int,int,Bundle)
void android.app.Activity.startIntentSenderForResult(IntentSender,int,Intent,int,int,int,Bundle)
void android.app.Activity.startIntentSenderFromChild(Activity,IntentSender,int,Intent,int,int,int,Bundle)
void android.app.ActivityManager.getMemoryInfo(ActivityManager$MemoryInfo)
void android.app.ActivityManager.getMyMemoryState(ActivityManager$RunningAppProcessInfo)
void android.app.ActivityManagerProxy.activityResumed(IBinder)
void android.app.ActivityManagerProxy.forceStopPackage(String,int)
void android.app.ActivityManagerProxy.handleApplicationCrash(IBinder,ApplicationErrorReport$CrashInfo)
void android.app.ActivityManagerProxy.handleApplicationStrictModeViolation(IBinder,int,StrictMode$ViolationInfo)
void android.app.ActivityManagerProxy.killApplicationWithAppId(String,int)
void android.app.ActivityManagerProxy.killBackgroundProcesses(String,int)
void android.app.ActivityManagerProxy.moveTaskToFront(int,int,Bundle)
void android.app.ActivityManagerProxy.registerUserSwitchObserver(IUserSwitchObserver)
void android.app.ActivityManagerProxy.removeContentProvider(IBinder,boolean)
void android.app.ActivityManagerProxy.removeContentProviderExternal(String,IBinder)
void android.app.ActivityManagerProxy.setLockScreenShown(boolean)
void android.app.ActivityManagerProxy.unbroadcastIntent(IApplicationThread,Intent,int)
void android.app.ActivityManagerProxy.unregisterUserSwitchObserver(IUserSwitchObserver)
void android.app.ActivityManagerProxy.unstableProviderDied(IBinder)
void android.app.ActivityThread$ApplicationThread.dumpDbInfo(FileDescriptor,String[])
void android.app.ActivityThread$ApplicationThread.dumpProvider(FileDescriptor,IBinder,String[])
void android.app.ActivityThread$ApplicationThread.scheduleLaunchActivity(Intent,IBinder,int,ActivityInfo,Configuration,CompatibilityInfo,Bundle,List,List,boolean,boolean,String,ParcelFileDescriptor,boolean)
void android.app.ActivityThread$EventLoggingReporter.report(int,Object[])
void android.app.AlertDialog.setButton(int,CharSequence,DialogInterface$OnClickListener)
void android.app.ApplicationPackageManager.getPackageSizeInfo(String,int,IPackageStatsObserver)
void android.app.ApplicationThreadProxy.bindApplication(String,ApplicationInfo,List,ComponentName,String,ParcelFileDescriptor,boolean,Bundle,IInstrumentationWatcher,int,boolean,boolean,boolean,Configuration,CompatibilityInfo,Map,Bundle)
void android.app.ApplicationThreadProxy.dumpDbInfo(FileDescriptor,String[])
void android.app.ApplicationThreadProxy.dumpProvider(FileDescriptor,IBinder,String[])
void android.app.ApplicationThreadProxy.scheduleLaunchActivity(Intent,IBinder,int,ActivityInfo,Configuration,CompatibilityInfo,Bundle,List,List,boolean,boolean,String,ParcelFileDescriptor,boolean)
void android.app.ApplicationThreadProxy.scheduleReceiver(Intent,ActivityInfo,CompatibilityInfo,int,String,Bundle,boolean,int)
void android.app.ApplicationThreadProxy.scheduleRegisteredReceiver(IIntentReceiver,Intent,int,String,Bundle,boolean,boolean,int)
void android.app.ApplicationThreadProxy.scheduleRelaunchActivity(IBinder,List,List,int,boolean,Configuration)
void android.app.ApplicationThreadProxy.unstableProviderDied(IBinder)
void android.app.ContextImpl$ApplicationContentResolver.setMasterSyncAutomatically(boolean)
void android.app.ContextImpl.sendBroadcastAsUser(Intent,UserHandle)
void android.app.ContextImpl.sendBroadcastAsUser(Intent,UserHandle,String)
void android.app.ContextImpl.sendOrderedBroadcastAsUser(Intent,UserHandle,String,BroadcastReceiver,Handler,int,String,Bundle)
void android.app.ContextImpl.sendStickyBroadcastAsUser(Intent,UserHandle)
void android.app.ContextImpl.sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)
void android.app.ContextImpl.startActivityAsUser(Intent,Bundle,UserHandle)
void android.app.ContextImpl.startActivityAsUser(Intent,UserHandle)
void android.app.ContextImpl.startIntentSender(IntentSender,Intent,int,int,int,Bundle)
void android.app.Dialog.setContentView(View,ViewGroup$LayoutParams)
void android.app.Fragment.setInitialSavedState(Fragment$SavedState)
void android.app.Fragment.startActivity(Intent,Bundle)
void android.app.Fragment.startActivityForResult(Intent,int,Bundle)
void android.app.FragmentManagerImpl.moveToState(Fragment,int,int,int,boolean)
void android.app.INotificationManager$Stub$Proxy.cancelAllNotifications(String,int)
void android.app.INotificationManager$Stub$Proxy.cancelNotificationWithTag(String,String,int,int)
void android.app.INotificationManager$Stub$Proxy.enqueueNotificationWithTag(String,String,int,Notification,int[],int)
void android.app.INotificationManager$Stub$Proxy.setNotificationsEnabledForPackage(String,boolean)
void android.app.IProcessObserver$Stub$Proxy.onImportanceChanged(int,int,int)
void android.app.IStopUserCallback$Stub$Proxy.userStopAborted(int)
void android.app.IStopUserCallback$Stub$Proxy.userStopped(int)
void android.app.IUserSwitchObserver$Stub$Proxy.onUserSwitchComplete(int)
void android.app.IUserSwitchObserver$Stub$Proxy.onUserSwitching(int,IRemoteCallback)
void android.app.Instrumentation.execStartActivitiesAsUser(Context,IBinder,IBinder,Activity,Intent[],Bundle,int)
void android.app.LoadedApk$ReceiverDispatcher$InnerReceiver.performReceive(Intent,int,String,Bundle,boolean,boolean,int)
void android.app.LoaderManagerImpl.installLoader(LoaderManagerImpl$LoaderInfo)
void android.app.Notification$Action.writeToParcel(Parcel,int)
void android.app.Notification.setUser(UserHandle)
void android.app.NotificationManager.notifyAsUser(String,int,Notification,UserHandle)
void android.app.PendingIntent.send(Context,int,Intent,PendingIntent$OnFinished,Handler)
void android.app.PendingIntent.send(Context,int,Intent,PendingIntent$OnFinished,Handler,String)
void android.app.PendingIntent.send(int,PendingIntent$OnFinished,Handler)
void android.app.TaskStackBuilder.startActivities(Bundle)
void android.app.TaskStackBuilder.startActivities(Bundle,UserHandle)
void android.app.admin.DevicePolicyManager.setActivePasswordState(int,int,int,int,int,int,int,int,int)
void android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures(ComponentName,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.getRemoveWarning(ComponentName,RemoteCallback,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.removeActiveAdmin(ComponentName,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.reportFailedPasswordAttempt(int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.reportSuccessfulPasswordAttempt(int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setActiveAdmin(ComponentName,boolean,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setActivePasswordState(int,int,int,int,int,int,int,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setCameraDisabled(ComponentName,boolean,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setKeyguardDisabledFeatures(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setMaximumFailedPasswordsForWipe(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setMaximumTimeToLock(ComponentName,long,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordExpirationTimeout(ComponentName,long,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordHistoryLength(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumLength(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumLetters(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumLowerCase(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumNonLetter(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumNumeric(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumSymbols(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordMinimumUpperCase(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.setPasswordQuality(ComponentName,int,int)
void android.app.admin.IDevicePolicyManager$Stub$Proxy.wipeData(int,int)
void android.app.backup.BackupAgentHelper.setWallpaper(Bitmap)
void android.appwidget.AppWidgetHost.setUserId(int)
void android.appwidget.AppWidgetHost.startListeningAsUser(int)
void android.appwidget.AppWidgetHostView.setUserId(int)
void android.appwidget.AppWidgetHostView.updateAppWidgetOptions(Bundle)
void android.appwidget.AppWidgetHostView.updateAppWidgetSize(Bundle,int,int,int,int)
void android.appwidget.AppWidgetHostView.updateAppWidgetSize(Bundle,int,int,int,int,boolean)
void android.appwidget.AppWidgetManager.bindAppWidgetId(int,ComponentName,Bundle)
void android.appwidget.AppWidgetManager.bindRemoteViewsService(int,Intent,IBinder,UserHandle)
void android.appwidget.AppWidgetManager.setBindAppWidgetPermission(String,boolean)
void android.appwidget.AppWidgetManager.updateAppWidgetOptions(int,Bundle)
void android.bluetooth.BluetoothServerSocket.setServiceName(String)
void android.bluetooth.BluetoothTetheringDataTracker.setDependencyMet(boolean)
void android.bluetooth.BluetoothTetheringDataTracker.setPolicyDataEnable(boolean)
void android.bluetooth.BluetoothTetheringDataTracker.setTeardownRequested(boolean)
void android.bluetooth.BluetoothTetheringDataTracker.setUserDataEnable(boolean)
void android.bluetooth.IBluetooth$Stub$Proxy.registerCallback(IBluetoothCallback)
void android.bluetooth.IBluetooth$Stub$Proxy.unregisterCallback(IBluetoothCallback)
void android.bluetooth.IBluetoothCallback$Stub$Proxy.onBluetoothStateChange(int,int)
void android.bluetooth.IBluetoothHeadset$Stub$Proxy.clccResponse(int,int,int,int,boolean,String,int)
void android.bluetooth.IBluetoothHeadset$Stub$Proxy.phoneStateChanged(int,int,int,String,int)
void android.bluetooth.IBluetoothManager$Stub$Proxy.registerStateChangeCallback(IBluetoothStateChangeCallback)
void android.bluetooth.IBluetoothManager$Stub$Proxy.unregisterAdapter(IBluetoothManagerCallback)
void android.bluetooth.IBluetoothManager$Stub$Proxy.unregisterStateChangeCallback(IBluetoothStateChangeCallback)
void android.bluetooth.IBluetoothManagerCallback$Stub$Proxy.onBluetoothServiceUp(IBluetooth)
void android.bluetooth.IBluetoothPan$Stub$Proxy.setBluetoothTethering(boolean)
void android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.initialize(Account,String)
void android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.startSync(ISyncContext,String,Account,Bundle)
void android.content.ContentProvider.dump(FileDescriptor,PrintWriter,String[])
void android.content.ContentResolver.notifyChange(Uri,ContentObserver,boolean,int)
void android.content.ContentService$ObserverNode$ObserverEntry.dumpLocked(FileDescriptor,PrintWriter,String[],String,String,SparseIntArray)
void android.content.ContentService$ObserverNode.dumpLocked(FileDescriptor,PrintWriter,String[],String,String,int[],SparseIntArray)
void android.content.ContentService.dump(FileDescriptor,PrintWriter,String[])
void android.content.ContentService.dump(FileDescriptor,String[])
void android.content.ContentService.notifyChange(Uri,IContentObserver,boolean,boolean)
void android.content.ContentService.setIsSyncable(Account,String,int)
void android.content.ContentService.setMasterSyncAutomatically(boolean)
void android.content.ContentService.setSyncAutomatically(Account,String,boolean)
void android.content.ContextWrapper.sendBroadcastAsUser(Intent,UserHandle)
void android.content.ContextWrapper.sendBroadcastAsUser(Intent,UserHandle,String)
void android.content.ContextWrapper.sendOrderedBroadcastAsUser(Intent,UserHandle,String,BroadcastReceiver,Handler,int,String,Bundle)
void android.content.ContextWrapper.sendStickyBroadcastAsUser(Intent,UserHandle)
void android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)
void android.content.ContextWrapper.startActivities(Intent[],Bundle)
void android.content.ContextWrapper.startActivitiesAsUser(Intent[],Bundle,UserHandle)
void android.content.ContextWrapper.startActivity(Intent,Bundle)
void android.content.ContextWrapper.startActivityAsUser(Intent,Bundle,UserHandle)
void android.content.ContextWrapper.startActivityAsUser(Intent,UserHandle)
void android.content.ContextWrapper.startIntentSender(IntentSender,Intent,int,int,int,Bundle)
void android.content.CursorLoader.dump(String,FileDescriptor,PrintWriter,String[])
void android.content.IContentService$Stub$Proxy.notifyChange(Uri,IContentObserver,boolean,boolean,int)
void android.content.IContentService$Stub$Proxy.registerContentObserver(Uri,boolean,IContentObserver,int)
void android.content.IIntentReceiver$Stub$Proxy.performReceive(Intent,int,String,Bundle,boolean,boolean,int)
void android.content.IntentSender.sendIntent(Context,int,Intent,IntentSender$OnFinished,Handler)
void android.content.IntentSender.sendIntent(Context,int,Intent,IntentSender$OnFinished,Handler,String)
void android.content.SyncAdaptersCache$MySerializer.writeAsXml(Object,XmlSerializer)
void android.content.SyncContext.setStatusText(String)
void android.content.SyncManager.cancelActiveSync(Account,int,String)
void android.content.SyncStorageEngine.addPeriodicSync(Account,int,String,Bundle,long)
void android.content.SyncStorageEngine.removePeriodicSync(Account,int,String,Bundle)
void android.content.SyncStorageEngine.setBackoff(Account,int,String,long,long)
void android.content.SyncStorageEngine.setDelayUntilTime(Account,int,String,long)
void android.content.SyncStorageEngine.setIsSyncable(Account,int,String,int)
void android.content.SyncStorageEngine.setMasterSyncAutomatically(boolean,int)
void android.content.SyncStorageEngine.setSyncAutomatically(Account,int,String,boolean)
void android.content.pm.IPackageManager$Stub$Proxy.addPreferredActivity(IntentFilter,int,ComponentName[],ComponentName,int)
void android.content.pm.IPackageManager$Stub$Proxy.clearApplicationUserData(String,IPackageDataObserver,int)
void android.content.pm.IPackageManager$Stub$Proxy.extendVerificationTimeout(int,int,long)
void android.content.pm.IPackageManager$Stub$Proxy.getPackageSizeInfo(String,int,IPackageStatsObserver)
void android.content.pm.IPackageManager$Stub$Proxy.grantPermission(String,String)
void android.content.pm.IPackageManager$Stub$Proxy.installPackageWithVerification(Uri,IPackageInstallObserver,int,String,Uri,ManifestDigest,ContainerEncryptionParams)
void android.content.pm.IPackageManager$Stub$Proxy.installPackageWithVerificationAndEncryption(Uri,IPackageInstallObserver,int,String,VerificationParams,ContainerEncryptionParams)
void android.content.pm.IPackageManager$Stub$Proxy.revokePermission(String,String)
void android.content.pm.IPackageManager$Stub$Proxy.setApplicationEnabledSetting(String,int,int,int)
void android.content.pm.IPackageManager$Stub$Proxy.setComponentEnabledSetting(ComponentName,int,int,int)
void android.content.pm.IPackageManager$Stub$Proxy.setPackageStoppedState(String,boolean,int)
void android.content.pm.IPackageManager$Stub$Proxy.setPermissionEnforced(String,boolean)
void android.content.pm.LabeledIntent.writeToParcel(Parcel,int)
void android.content.pm.PackageInfoLite.writeToParcel(Parcel,int)
void android.content.pm.RegisteredServicesCache.dump(FileDescriptor,PrintWriter,String[],int)
void android.content.res.Configuration.setLayoutDirection(Locale)
void android.content.res.Resources$Theme.setTo(Resources$Theme)
void android.database.BulkCursorDescriptor.writeToParcel(Parcel,int)
void android.database.sqlite.SQLiteConnection.execute(String,Object[],CancellationSignal)
void android.ddm.DdmHandleAppName.setAppName(String,int)
void android.drm.DrmInfo.put(String,Object)
void android.drm.DrmInfoRequest.put(String,Object)
void android.drm.DrmManagerClient$EventHandler.handleMessage(Message)
void android.drm.DrmManagerClient.notify(Object,int,int,String)
void android.filterfw.core.AsyncRunner.setGraph(FilterGraph)
void android.filterfw.core.FieldPort.setFieldFrame(Frame,boolean)
void android.filterfw.core.FieldPort.setFrame(Frame)
void android.filterfw.core.Filter.addFieldPort(String,Field,boolean,boolean)
void android.filterfw.core.Filter.addMaskedInputPort(String,FrameFormat)
void android.filterfw.core.Filter.addOutputBasedOnInput(String,String)
void android.filterfw.core.Filter.addOutputPort(String,FrameFormat)
void android.filterfw.core.Filter.addProgramPort(String,String,Field,Class,boolean)
void android.filterfw.core.Filter.setInputFrame(String,Frame)
void android.filterfw.core.Filter.setInputValue(String,Object)
void android.filterfw.core.Filter.setWaitsOnInputPort(String,boolean)
void android.filterfw.core.Filter.setWaitsOnOutputPort(String,boolean)
void android.filterfw.core.FilterContext.storeFrame(String,Frame)
void android.filterfw.core.FilterFunction.setInputFrame(String,Frame)
void android.filterfw.core.FilterFunction.setInputValue(String,Object)
void android.filterfw.core.FinalPort.setFieldFrame(Frame,boolean)
void android.filterfw.core.Frame.setData(ByteBuffer)
void android.filterfw.core.Frame.setData(byte[],int,int)
void android.filterfw.core.Frame.setDataFromFrame(Frame)
void android.filterfw.core.Frame.setFormat(FrameFormat)
void android.filterfw.core.Frame.setGenericObjectValue(Object)
void android.filterfw.core.Frame.setObjectValue(Object)
void android.filterfw.core.GLEnvironment.setSurfaceTimestamp(long)
void android.filterfw.core.GLFrame.setBitmap(Bitmap)
void android.filterfw.core.GLFrame.setData(ByteBuffer,int,int)
void android.filterfw.core.GLFrame.setDataFromFrame(Frame)
void android.filterfw.core.GLFrame.setFloats(float[])
void android.filterfw.core.GLFrame.setInts(int[])
void android.filterfw.core.GLFrame.setTextureParameter(int,int)
void android.filterfw.core.GLFrame.setViewport(Rect)
void android.filterfw.core.GLFrame.setViewport(int,int,int,int)
void android.filterfw.core.KeyValueMap.setKeyValues(Object[])
void android.filterfw.core.MutableFrameFormat.setDimensionCount(int)
void android.filterfw.core.MutableFrameFormat.setDimensions(int)
void android.filterfw.core.MutableFrameFormat.setDimensions(int,int)
void android.filterfw.core.MutableFrameFormat.setDimensions(int,int,int)
void android.filterfw.core.MutableFrameFormat.setDimensions(int[])
void android.filterfw.core.MutableFrameFormat.setMetaValue(String,Object)
void android.filterfw.core.NativeFrame.setBitmap(Bitmap)
void android.filterfw.core.NativeFrame.setData(ByteBuffer,int,int)
void android.filterfw.core.NativeFrame.setDataFromFrame(Frame)
void android.filterfw.core.NativeFrame.setFloats(float[])
void android.filterfw.core.NativeFrame.setInts(int[])
void android.filterfw.core.NativeProgram.setHostValue(String,Object)
void android.filterfw.core.OutputPort.setFrame(Frame)
void android.filterfw.core.SerializedFrame$DirectByteOutputStream.write(byte[])
void android.filterfw.core.SerializedFrame.setBitmap(Bitmap)
void android.filterfw.core.SerializedFrame.setData(ByteBuffer,int,int)
void android.filterfw.core.SerializedFrame.setFloats(float[])
void android.filterfw.core.SerializedFrame.setGenericObjectValue(Object)
void android.filterfw.core.SerializedFrame.setInts(int[])
void android.filterfw.core.ShaderProgram.setAttributeValues(String,VertexFrame,int,int,int,int,boolean)
void android.filterfw.core.ShaderProgram.setAttributeValues(String,float[],int)
void android.filterfw.core.ShaderProgram.setBlendEnabled(boolean)
void android.filterfw.core.ShaderProgram.setBlendFunc(int,int)
void android.filterfw.core.ShaderProgram.setClearColor(float,float,float)
void android.filterfw.core.ShaderProgram.setClearsOutput(boolean)
void android.filterfw.core.ShaderProgram.setDrawMode(int)
void android.filterfw.core.ShaderProgram.setHostValue(String,Object)
void android.filterfw.core.ShaderProgram.setSourceRect(float,float,float,float)
void android.filterfw.core.ShaderProgram.setSourceRegion(Quad)
void android.filterfw.core.ShaderProgram.setTargetRect(float,float,float,float)
void android.filterfw.core.ShaderProgram.setTargetRegion(Quad)
void android.filterfw.core.ShaderProgram.setVertexCount(int)
void android.filterfw.core.SimpleFrame.setBitmap(Bitmap)
void android.filterfw.core.SimpleFrame.setData(ByteBuffer,int,int)
void android.filterfw.core.SimpleFrame.setFloats(float[])
void android.filterfw.core.SimpleFrame.setInts(int[])
void android.filterfw.core.StopWatchMap.start(String)
void android.filterfw.core.StreamPort.setFrame(Frame)
void android.filterfw.core.VertexFrame.setBitmap(Bitmap)
void android.filterfw.core.VertexFrame.setData(ByteBuffer,int,int)
void android.filterfw.core.VertexFrame.setDataFromFrame(Frame)
void android.filterfw.core.VertexFrame.setFloats(float[])
void android.filterfw.core.VertexFrame.setInts(int[])
void android.filterfw.io.GraphReader.addReference(String,Object)
void android.filterfw.io.GraphReader.addReferencesByMap(KeyValueMap)
void android.filterpacks.imageproc.ImageCombineFilter.process(FilterContext)
void android.filterpacks.imageproc.SimpleImageFilter.process(FilterContext)
void android.filterpacks.ui.SurfaceRenderFilter.open(FilterContext)
void android.filterpacks.videosink.MediaEncoderFilter.open(FilterContext)
void android.filterpacks.videosink.MediaEncoderFilter.process(FilterContext)
void android.gesture.GestureLibrary.setOrientationStyle(int)
void android.gesture.GestureLibrary.setSequenceType(int)
void android.gesture.GestureStore.addGesture(String,Gesture)
void android.gesture.GestureStore.save(OutputStream)
void android.graphics.Bitmap.setHasMipMap(boolean)
void android.graphics.Paint.setStrokeCap(Paint$Cap)
void android.graphics.Paint.setStrokeJoin(Paint$Join)
void android.graphics.Paint.setStyle(Paint$Style)
void android.graphics.Paint.setTextAlign(Paint$Align)
void android.graphics.Path.setFillType(Path$FillType)
void android.graphics.drawable.BitmapDrawable.setTileModeX(Shader$TileMode)
void android.graphics.drawable.BitmapDrawable.setTileModeY(Shader$TileMode)
void android.graphics.drawable.ClipDrawable.setLayoutDirection(int)
void android.graphics.drawable.Drawable.setColorFilter(int,PorterDuff$Mode)
void android.graphics.drawable.GradientDrawable.setColors(int[])
void android.graphics.drawable.LayerDrawable.setLayoutDirection(int)
void android.graphics.drawable.StateListDrawable.setLayoutDirection(int)
void android.hardware.Camera.setParameters(Camera$Parameters)
void android.hardware.SystemSensorManager$ListenerDelegate.addSensor(Sensor)
void android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate.sendDisplayEvent(int,int)
void android.hardware.display.IDisplayManager$Stub$Proxy.connectWifiDisplay(String)
void android.hardware.display.IDisplayManager$Stub$Proxy.forgetWifiDisplay(String)
void android.hardware.display.IDisplayManager$Stub$Proxy.registerCallback(IDisplayManagerCallback)
void android.hardware.display.IDisplayManager$Stub$Proxy.renameWifiDisplay(String,String)
void android.hardware.display.IDisplayManagerCallback$Stub$Proxy.onDisplayEvent(int,int)
void android.hardware.display.WifiDisplayStatus.writeToParcel(Parcel,int)
void android.hardware.input.IInputDevicesChangedListener$Stub$Proxy.onInputDevicesChanged(int[])
void android.hardware.input.IInputManager$Stub$Proxy.addKeyboardLayoutForInputDevice(String,String)
void android.hardware.input.IInputManager$Stub$Proxy.cancelVibrate(int,IBinder)
void android.hardware.input.IInputManager$Stub$Proxy.registerInputDevicesChangedListener(IInputDevicesChangedListener)
void android.hardware.input.IInputManager$Stub$Proxy.removeKeyboardLayoutForInputDevice(String,String)
void android.hardware.input.IInputManager$Stub$Proxy.setCurrentKeyboardLayoutForInputDevice(String,String)
void android.hardware.input.IInputManager$Stub$Proxy.tryPointerSpeed(int)
void android.hardware.input.IInputManager$Stub$Proxy.vibrate(int,long[],int,IBinder)
void android.hardware.input.InputManager.setCurrentKeyboardLayoutForInputDevice(String,String)
void android.hardware.input.InputManager.setPointerSpeed(Context,int)
void android.hardware.usb.IUsbManager$Stub$Proxy.allowUsbDebugging(boolean,String)
void android.hardware.usb.IUsbManager$Stub$Proxy.clearDefaults(String,int)
void android.hardware.usb.IUsbManager$Stub$Proxy.setAccessoryPackage(UsbAccessory,String,int)
void android.hardware.usb.IUsbManager$Stub$Proxy.setDevicePackage(UsbDevice,String,int)
void android.location.IGpsStatusProvider$Stub$Proxy.addGpsStatusListener(IGpsStatusListener)
void android.location.IGpsStatusProvider$Stub$Proxy.removeGpsStatusListener(IGpsStatusListener)
void android.location.ILocationManager$Stub$Proxy.addTestProvider(String,ProviderProperties)
void android.location.ILocationManager$Stub$Proxy.removeGeofence(Geofence,PendingIntent,String)
void android.location.ILocationManager$Stub$Proxy.removeUpdates(ILocationListener,PendingIntent,String)
void android.location.ILocationManager$Stub$Proxy.requestGeofence(LocationRequest,Geofence,PendingIntent,String)
void android.location.ILocationManager$Stub$Proxy.requestLocationUpdates(LocationRequest,ILocationListener,PendingIntent,String)
void android.location.Location.setExtraLocation(String,Location)
void android.media.AsyncPlayer.setUsesWakeLock(Context)
void android.media.AudioManager.setMasterMute(boolean)
void android.media.AudioManager.setMasterMute(boolean,int)
void android.media.AudioManager.setMasterVolume(int,int)
void android.media.AudioManager.setRemoteSubmixOn(boolean,int)
void android.media.AudioManager.setWiredDeviceConnectionState(int,int,String)
void android.media.AudioRoutesInfo.writeToParcel(Parcel,int)
void android.media.AudioService$AudioHandler.handleMessage(Message)
void android.media.AudioService$VolumeStreamState.setAllIndexes(AudioService$VolumeStreamState,boolean)
void android.media.AudioService$VolumeStreamState.setLastAudibleIndex(int,int)
void android.media.AudioService.adjustStreamVolume(int,int,int)
void android.media.AudioService.dump(FileDescriptor,PrintWriter,String[])
void android.media.AudioService.playSoundEffect(int)
void android.media.AudioService.playSoundEffectVolume(int,float)
void android.media.AudioService.registerRemoteVolumeObserverForRcc(int,IRemoteVolumeObserver)
void android.media.AudioService.setBluetoothScoOn(boolean)
void android.media.AudioService.setMasterMute(boolean,int,IBinder)
void android.media.AudioService.setMasterVolume(int,int)
void android.media.AudioService.setMode(int,IBinder)
void android.media.AudioService.setPlaybackInfoForRcc(int,int,int)
void android.media.AudioService.setRemoteStreamVolume(int)
void android.media.AudioService.setRemoteSubmixOn(boolean,int)
void android.media.AudioService.setRingerMode(int)
void android.media.AudioService.setSpeakerphoneOn(boolean)
void android.media.AudioService.setStreamMute(int,boolean,IBinder)
void android.media.AudioService.setStreamSolo(int,boolean,IBinder)
void android.media.AudioService.setStreamVolume(int,int,int)
void android.media.AudioService.setVibrateSetting(int,int)
void android.media.AudioService.setWiredDeviceConnectionState(int,int,String)
void android.media.IAudioService$Stub$Proxy.adjustLocalOrRemoteStreamVolume(int,int)
void android.media.IAudioService$Stub$Proxy.adjustMasterVolume(int,int)
void android.media.IAudioService$Stub$Proxy.forceVolumeControlStream(int,IBinder)
void android.media.IAudioService$Stub$Proxy.registerRemoteVolumeObserverForRcc(int,IRemoteVolumeObserver)
void android.media.IAudioService$Stub$Proxy.setBluetoothA2dpOn(boolean)
void android.media.IAudioService$Stub$Proxy.setMasterMute(boolean,int,IBinder)
void android.media.IAudioService$Stub$Proxy.setMasterVolume(int,int)
void android.media.IAudioService$Stub$Proxy.setPlaybackInfoForRcc(int,int,int)
void android.media.IAudioService$Stub$Proxy.setRemoteStreamVolume(int)
void android.media.IAudioService$Stub$Proxy.setRemoteSubmixOn(boolean,int)
void android.media.IAudioService$Stub$Proxy.setRingtonePlayer(IRingtonePlayer)
void android.media.IAudioService$Stub$Proxy.setWiredDeviceConnectionState(int,int,String)
void android.media.IRemoteVolumeObserver$Stub$Proxy.dispatchRemoteVolumeUpdate(int,int)
void android.media.IRingtonePlayer$Stub$Proxy.playAsync(Uri,UserHandle,boolean,int)
void android.media.IRingtonePlayer$Stub$Proxy.stop(IBinder)
void android.media.MediaPlayer.addTimedTextSource(FileDescriptor,String)
void android.media.MediaPlayer.addTimedTextSource(FileDescriptor,long,long,String)
void android.media.MediaPlayer.setRetransmitEndpoint(InetSocketAddress)
void android.media.MediaPlayer.setVideoScalingMode(int)
void android.media.MediaRouter$RouteGroup.setIconResource(int)
void android.media.MediaRouter$Static.onDisplayAdded(int)
void android.media.MediaRouter$Static.onDisplayChanged(int)
void android.media.MediaRouter$Static.onDisplayRemoved(int)
void android.media.MediaRouter$UserRouteInfo.setIconResource(int)
void android.media.MediaRouter$UserRouteInfo.setVolume(int)
void android.media.MediaRouter$UserRouteInfo.setVolumeCallback(MediaRouter$VolumeCallback)
void android.media.MediaRouter$WifiDisplayStatusChangedReceiver.onReceive(Context,Intent)
void android.media.MediaScanner.scanMtpFile(String,String,int,int)
void android.media.RemoteControlClient.setPlaybackInformation(int,int)
void android.media.audiofx.BassBoost.setProperties(BassBoost$Settings)
void android.media.audiofx.BassBoost.setStrength(short)
void android.media.audiofx.Equalizer.setBandLevel(short,short)
void android.media.audiofx.Equalizer.setProperties(Equalizer$Settings)
void android.media.audiofx.PresetReverb.setPreset(short)
void android.media.audiofx.PresetReverb.setProperties(PresetReverb$Settings)
void android.media.audiofx.Virtualizer.setProperties(Virtualizer$Settings)
void android.media.audiofx.Virtualizer.setStrength(short)
void android.media.effect.FilterGraphEffect.apply(int,int,int,int)
void android.media.effect.FilterGraphEffect.setParameter(String,Object)
void android.media.effect.SingleFilterEffect.setParameter(String,Object)
void android.media.effect.effects.BackDropperEffect.apply(int,int,int,int)
void android.media.effect.effects.BackDropperEffect.setParameter(String,Object)
void android.media.videoeditor.MediaImageItem.getThumbnailList(int,int,long,long,int,int[],MediaItem$GetThumbnailListCallback)
void android.media.videoeditor.MediaImageItem.setGeneratedImageClip(String)
void android.media.videoeditor.Overlay.setUserAttribute(String,String)
void android.media.videoeditor.OverlayFrame.generateOverlayWithRenderingMode(MediaItem,OverlayFrame,int,int)
void android.mtp.MtpDatabase.addStorage(MtpStorage)
void android.mtp.MtpServer.sendObjectAdded(int)
void android.mtp.MtpServer.sendObjectRemoved(int)
void android.net.BaseNetworkStateTracker.setDependencyMet(boolean)
void android.net.BaseNetworkStateTracker.setPolicyDataEnable(boolean)
void android.net.BaseNetworkStateTracker.setTeardownRequested(boolean)
void android.net.BaseNetworkStateTracker.setUserDataEnable(boolean)
void android.net.DummyDataStateTracker.setDependencyMet(boolean)
void android.net.DummyDataStateTracker.setPolicyDataEnable(boolean)
void android.net.DummyDataStateTracker.setUserDataEnable(boolean)
void android.net.EthernetDataTracker.setDependencyMet(boolean)
void android.net.EthernetDataTracker.setPolicyDataEnable(boolean)
void android.net.EthernetDataTracker.setTeardownRequested(boolean)
void android.net.EthernetDataTracker.setUserDataEnable(boolean)
void android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceAdded(String)
void android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceClassDataActivityChanged(String,boolean)
void android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceLinkStateChanged(String,boolean)
void android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceRemoved(String)
void android.net.INetworkManagementEventObserver$Stub$Proxy.interfaceStatusChanged(String,boolean)
void android.net.INetworkManagementEventObserver$Stub$Proxy.limitReached(String,String)
void android.net.INetworkStatsService$Stub$Proxy.advisePersistThreshold(long)
void android.net.InterfaceConfiguration.setFlag(String)
void android.net.InterfaceConfiguration.writeToParcel(Parcel,int)
void android.net.LocalSocketImpl.access$600(LocalSocketImpl,byte[],int,int,FileDescriptor)
void android.net.LocalSocketImpl.access$700(LocalSocketImpl,int,FileDescriptor)
void android.net.MobileDataStateTracker.setDependencyMet(boolean)
void android.net.NetworkPolicyManager.setRestrictBackground(boolean)
void android.net.SSLCertificateSocketFactory.setHostname(Socket,String)
void android.net.SSLCertificateSocketFactory.setNpnProtocols(byte[][])
void android.net.SSLCertificateSocketFactory.setSoWriteTimeout(Socket,int)
void android.net.SSLCertificateSocketFactory.setUseSessionTickets(Socket,boolean)
void android.net.http.AndroidHttpClient$LoggingConfiguration.access$600(AndroidHttpClient$LoggingConfiguration,String)
void android.net.http.AndroidHttpClientConnection.sendRequestHeader(HttpRequest)
void android.net.nsd.DnsSdTxtRecord.set(String,String)
void android.net.nsd.INsdManager$Stub$Proxy.setEnabled(boolean)
void android.net.nsd.NsdManager.discoverServices(String,int,NsdManager$DiscoveryListener)
void android.net.nsd.NsdManager.registerService(NsdServiceInfo,int,NsdManager$RegistrationListener)
void android.net.nsd.NsdManager.resolveService(NsdServiceInfo,NsdManager$ResolveListener)
void android.net.nsd.NsdManager.setEnabled(boolean)
void android.net.nsd.NsdServiceInfo.setTxtRecord(DnsSdTxtRecord)
void android.net.nsd.NsdServiceInfo.writeToParcel(Parcel,int)
void android.net.rtp.AudioGroup.add(AudioStream)
void android.net.sip.SimpleSessionDescription$Fields.access$200(SimpleSessionDescription$Fields,StringBuilder)
void android.net.sip.SimpleSessionDescription$Media.setAddress(String)
void android.net.sip.SimpleSessionDescription$Media.setAttribute(String,String)
void android.net.sip.SimpleSessionDescription$Media.setBandwidth(String,int)
void android.net.sip.SimpleSessionDescription$Media.setEncryption(String,String)
void android.net.sip.SipAudioCall.setListener(SipAudioCall$Listener)
void android.net.wifi.WifiConfigStore.setIpConfiguration(int,DhcpInfoInternal)
void android.net.wifi.WifiManager$ServiceHandler.handleMessage(Message)
void android.net.wifi.WifiManager.connect(WifiConfiguration,WifiManager$ActionListener)
void android.net.wifi.WifiManager.connect(int,WifiManager$ActionListener)
void android.net.wifi.WifiManager.disable(int,WifiManager$ActionListener)
void android.net.wifi.WifiManager.forget(int,WifiManager$ActionListener)
void android.net.wifi.WifiManager.save(WifiConfiguration,WifiManager$ActionListener)
void android.net.wifi.WifiManager.startWps(WpsInfo,WifiManager$WpsListener)
void android.net.wifi.WifiNative.setPowerSave(boolean)
void android.net.wifi.WifiNative.setScanInterval(int)
void android.net.wifi.WifiStateMachine.sendBluetoothAdapterStateChange(int)
void android.net.wifi.WifiStateMachine.setCountryCode(String,boolean)
void android.net.wifi.WifiStateMachine.setDriverStart(boolean,boolean)
void android.net.wifi.WifiStateMachine.setFrequencyBand(int,boolean)
void android.net.wifi.WifiStateMachine.setHighPerfModeEnabled(boolean)
void android.net.wifi.WifiStateMachine.setScanOnlyMode(boolean)
void android.net.wifi.WifiStateMachine.setScanType(boolean)
void android.net.wifi.WifiStateMachine.setWifiApConfiguration(WifiConfiguration)
void android.net.wifi.WifiStateMachine.setWifiApEnabled(WifiConfiguration,boolean)
void android.net.wifi.WifiStateMachine.setWifiEnabled(boolean)
void android.net.wifi.WifiStateTracker.setDependencyMet(boolean)
void android.net.wifi.WifiStateTracker.setPolicyDataEnable(boolean)
void android.net.wifi.WifiStateTracker.setTeardownRequested(boolean)
void android.net.wifi.WifiStateTracker.setUserDataEnable(boolean)
void android.net.wifi.WifiWatchdogStateMachine$BssidStatistics.updateLoss(int,double,int)
void android.net.wifi.p2p.WifiP2pConfig.writeToParcel(Parcel,int)
void android.net.wifi.p2p.WifiP2pDeviceList.updateGroupCapability(String,int)
void android.net.wifi.p2p.WifiP2pDeviceList.updateStatus(String,int)
void android.net.wifi.p2p.WifiP2pGroupList.add(WifiP2pGroup)
void android.net.wifi.p2p.WifiP2pGroupList.writeToParcel(Parcel,int)
void android.net.wifi.p2p.WifiP2pManager.addLocalService(WifiP2pManager$Channel,WifiP2pServiceInfo,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.addServiceRequest(WifiP2pManager$Channel,WifiP2pServiceRequest,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.cancelConnect(WifiP2pManager$Channel,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.connect(WifiP2pManager$Channel,WifiP2pConfig,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.createGroup(WifiP2pManager$Channel,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.discoverPeers(WifiP2pManager$Channel,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.discoverServices(WifiP2pManager$Channel,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.removeGroup(WifiP2pManager$Channel,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.removeLocalService(WifiP2pManager$Channel,WifiP2pServiceInfo,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.removeServiceRequest(WifiP2pManager$Channel,WifiP2pServiceRequest,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.requestConnectionInfo(WifiP2pManager$Channel,WifiP2pManager$ConnectionInfoListener)
void android.net.wifi.p2p.WifiP2pManager.requestGroupInfo(WifiP2pManager$Channel,WifiP2pManager$GroupInfoListener)
void android.net.wifi.p2p.WifiP2pManager.requestPeers(WifiP2pManager$Channel,WifiP2pManager$PeerListListener)
void android.net.wifi.p2p.WifiP2pManager.requestPersistentGroupInfo(WifiP2pManager$Channel,WifiP2pManager$PersistentGroupInfoListener)
void android.net.wifi.p2p.WifiP2pManager.setDeviceName(WifiP2pManager$Channel,String,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.setDialogListener(WifiP2pManager$Channel,WifiP2pManager$DialogListener)
void android.net.wifi.p2p.WifiP2pManager.setDnsSdResponseListeners(WifiP2pManager$Channel,WifiP2pManager$DnsSdServiceResponseListener,WifiP2pManager$DnsSdTxtRecordListener)
void android.net.wifi.p2p.WifiP2pManager.setServiceResponseListener(WifiP2pManager$Channel,WifiP2pManager$ServiceResponseListener)
void android.net.wifi.p2p.WifiP2pManager.setUpnpServiceResponseListener(WifiP2pManager$Channel,WifiP2pManager$UpnpServiceResponseListener)
void android.net.wifi.p2p.WifiP2pManager.setWFDInfo(WifiP2pManager$Channel,WifiP2pWfdInfo,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pManager.stopPeerDiscovery(WifiP2pManager$Channel,WifiP2pManager$ActionListener)
void android.net.wifi.p2p.WifiP2pService.dump(FileDescriptor,PrintWriter,String[])
void android.net.wifi.p2p.WifiP2pWfdInfo.setCoupledSinkSupportAtSink(boolean)
void android.net.wifi.p2p.WifiP2pWfdInfo.setCoupledSinkSupportAtSource(boolean)
void android.net.wifi.p2p.WifiP2pWfdInfo.setSessionAvailable(boolean)
void android.net.wifi.p2p.nsd.WifiP2pServiceResponse.writeToParcel(Parcel,int)
void android.nfc.INfcAdapter$Stub$Proxy.setNdefPushCallback(INdefPushCallback)
void android.nfc.INfcAdapter$Stub$Proxy.setP2pModes(int,int)
void android.nfc.NfcActivityManager.setNdefPushContentUri(Activity,Uri[])
void android.nfc.NfcActivityManager.setNdefPushContentUriCallback(Activity,NfcAdapter$CreateBeamUrisCallback)
void android.nfc.NfcActivityManager.setNdefPushMessageCallback(Activity,NfcAdapter$CreateNdefMessageCallback)
void android.nfc.NfcActivityManager.setOnNdefPushCompleteCallback(Activity,NfcAdapter$OnNdefPushCompleteCallback)
void android.nfc.NfcAdapter.setBeamPushUris(Uri[],Activity)
void android.nfc.NfcAdapter.setP2pModes(int,int)
void android.os.BatteryStats$HistoryItem.setTo(BatteryStats$HistoryItem)
void android.os.BatteryStats$HistoryItem.writeDelta(Parcel,BatteryStats$HistoryItem)
void android.os.BatteryStats.dumpCheckinLocked(PrintWriter,String[],List)
void android.os.BatteryStats.dumpLocked(PrintWriter)
void android.os.BatteryStats.dumpLocked(PrintWriter,String,int,int)
void android.os.Binder.dumpAsync(FileDescriptor,String[])
void android.os.IHardwareService$Stub$Proxy.setFlashlightEnabled(boolean)
void android.os.INetworkManagementService$Stub$Proxy.addIdleTimer(String,int,String)
void android.os.INetworkManagementService$Stub$Proxy.addRoute(String,RouteInfo)
void android.os.INetworkManagementService$Stub$Proxy.addSecondaryRoute(String,RouteInfo)
void android.os.INetworkManagementService$Stub$Proxy.attachPppd(String,String,String,String,String)
void android.os.INetworkManagementService$Stub$Proxy.clearInterfaceAddresses(String)
void android.os.INetworkManagementService$Stub$Proxy.detachPppd(String)
void android.os.INetworkManagementService$Stub$Proxy.disableIpv6(String)
void android.os.INetworkManagementService$Stub$Proxy.disableNat(String,String)
void android.os.INetworkManagementService$Stub$Proxy.enableIpv6(String)
void android.os.INetworkManagementService$Stub$Proxy.enableNat(String,String)
void android.os.INetworkManagementService$Stub$Proxy.flushInterfaceDnsCache(String)
void android.os.INetworkManagementService$Stub$Proxy.removeIdleTimer(String)
void android.os.INetworkManagementService$Stub$Proxy.removeInterfaceAlert(String)
void android.os.INetworkManagementService$Stub$Proxy.removeInterfaceQuota(String)
void android.os.INetworkManagementService$Stub$Proxy.removeRoute(String,RouteInfo)
void android.os.INetworkManagementService$Stub$Proxy.removeSecondaryRoute(String,RouteInfo)
void android.os.INetworkManagementService$Stub$Proxy.setAccessPoint(WifiConfiguration,String)
void android.os.INetworkManagementService$Stub$Proxy.setDefaultInterfaceForDns(String)
void android.os.INetworkManagementService$Stub$Proxy.setDnsForwarders(String[])
void android.os.INetworkManagementService$Stub$Proxy.setDnsServersForInterface(String,String[])
void android.os.INetworkManagementService$Stub$Proxy.setFirewallEgressDestRule(String,int,boolean)
void android.os.INetworkManagementService$Stub$Proxy.setFirewallEgressSourceRule(String,boolean)
void android.os.INetworkManagementService$Stub$Proxy.setFirewallEnabled(boolean)
void android.os.INetworkManagementService$Stub$Proxy.setFirewallInterfaceRule(String,boolean)
void android.os.INetworkManagementService$Stub$Proxy.setFirewallUidRule(int,boolean)
void android.os.INetworkManagementService$Stub$Proxy.setGlobalAlert(long)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceAlert(String,long)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceConfig(String,InterfaceConfiguration)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceDown(String)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceIpv6PrivacyExtensions(String,boolean)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceQuota(String,long)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceThrottle(String,int,int)
void android.os.INetworkManagementService$Stub$Proxy.setInterfaceUp(String)
void android.os.INetworkManagementService$Stub$Proxy.setIpForwardingEnabled(boolean)
void android.os.INetworkManagementService$Stub$Proxy.setUidNetworkRules(int,boolean)
void android.os.INetworkManagementService$Stub$Proxy.startAccessPoint(WifiConfiguration,String)
void android.os.INetworkManagementService$Stub$Proxy.startReverseTethering(String)
void android.os.INetworkManagementService$Stub$Proxy.startTethering(String[])
void android.os.INetworkManagementService$Stub$Proxy.stopAccessPoint(String)
void android.os.INetworkManagementService$Stub$Proxy.tetherInterface(String)
void android.os.INetworkManagementService$Stub$Proxy.untetherInterface(String)
void android.os.INetworkManagementService$Stub$Proxy.wifiFirmwareReload(String,String)
void android.os.IPowerManager$Stub$Proxy.acquireWakeLock(IBinder,int,String,WorkSource)
void android.os.IPowerManager$Stub$Proxy.goToSleep(long,int)
void android.os.IPowerManager$Stub$Proxy.nap(long)
void android.os.IPowerManager$Stub$Proxy.reboot(boolean,String,boolean)
void android.os.IPowerManager$Stub$Proxy.setMaximumScreenOffTimeoutFromDeviceAdmin(int)
void android.os.IPowerManager$Stub$Proxy.setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)
void android.os.IPowerManager$Stub$Proxy.setTemporaryScreenBrightnessSettingOverride(int)
void android.os.IPowerManager$Stub$Proxy.userActivity(long,int,int)
void android.os.IPowerManager$Stub$Proxy.wakeUp(long)
void android.os.IUpdateLock$Stub$Proxy.acquireUpdateLock(IBinder,String)
void android.os.IUpdateLock$Stub$Proxy.releaseUpdateLock(IBinder)
void android.os.IUserManager$Stub$Proxy.setGuestEnabled(boolean)
void android.os.IUserManager$Stub$Proxy.setUserIcon(int,Bitmap)
void android.os.IUserManager$Stub$Proxy.setUserName(int,String)
void android.os.IUserManager$Stub$Proxy.wipeUser(int)
void android.os.Message.setAsynchronous(boolean)
void android.os.Parcel.writeParcelableArray(Parcelable[],int)
void android.os.Parcel.writeTypedArray(Parcelable[],int)
void android.os.ServiceManagerProxy.addService(String,IBinder,boolean)
void android.os.StrictMode$AndroidBlockGuardPolicy.handleViolation(StrictMode$ViolationInfo)
void android.os.StrictMode.setThreadPolicy(StrictMode$ThreadPolicy)
void android.os.UserHandle.writeToParcel(UserHandle,Parcel)
void android.os.UserManager.setGuestEnabled(boolean)
void android.os.UserManager.setUserIcon(int,Bitmap)
void android.os.UserManager.setUserName(int,String)
void android.os.storage.IMountService$Stub$Proxy.mountObb(String,String,String,IObbActionListener,int)
void android.preference.VolumePreference$SavedState.writeToParcel(Parcel,int)
void android.provider.CalendarContract$CalendarAlerts.scheduleAlarm(Context,AlarmManager,long)
void android.provider.Settings$Secure.setLocationProviderEnabledForUser(ContentResolver,String,boolean,int)
void android.provider.Settings$System.setShowGTalkServiceStatusForUser(ContentResolver,boolean,int)
void android.provider.UserDictionary$Words.addWord(Context,String,int,String,Locale)
void android.renderscript.Allocation.setSurface(Surface)
void android.renderscript.Allocation.setSurfaceTexture(SurfaceTexture)
void android.renderscript.AllocationAdapter.setLOD(int)
void android.renderscript.Matrix2f.set(int,int,float)
void android.renderscript.Matrix3f.set(int,int,float)
void android.renderscript.Matrix4f.set(int,int,float)
void android.renderscript.ProgramVertexFixedFunction$Constants.setModelview(Matrix4f)
void android.renderscript.ProgramVertexFixedFunction$Constants.setProjection(Matrix4f)
void android.renderscript.ProgramVertexFixedFunction$Constants.setTexture(Matrix4f)
void android.renderscript.ProgramVertexFixedFunction.bindConstants(ProgramVertexFixedFunction$Constants)
void android.renderscript.RenderScript.setPriority(RenderScript$Priority)
void android.renderscript.RenderScript.setupDiskCache(File)
void android.renderscript.Script.setTimeZone(String)
void android.renderscript.Script.setVar(int,BaseObj)
void android.renderscript.Script.setVar(int,FieldPacker)
void android.renderscript.Script.setVar(int,FieldPacker,Element,int[])
void android.renderscript.Script.setVar(int,boolean)
void android.renderscript.Script.setVar(int,double)
void android.renderscript.Script.setVar(int,float)
void android.renderscript.Script.setVar(int,int)
void android.renderscript.Script.setVar(int,long)
void android.sax.RootElement$Handler.startElement(String,String,String,Attributes)
void android.server.search.SearchManagerService.dump(FileDescriptor,PrintWriter,String[])
void android.server.search.Searchables.dump(FileDescriptor,PrintWriter,String[])
void android.service.dreams.IDreamManager$Stub$Proxy.finishSelf(IBinder)
void android.service.dreams.IDreamManager$Stub$Proxy.setDreamComponents(ComponentName[])
void android.service.dreams.IDreamService$Stub$Proxy.attach(IBinder)
void android.service.wallpaper.IWallpaperConnection$Stub$Proxy.attachEngine(IWallpaperEngine)
void android.service.wallpaper.IWallpaperConnection$Stub$Proxy.engineShown(IWallpaperEngine)
void android.service.wallpaper.IWallpaperEngine$Stub$Proxy.dispatchWallpaperCommand(String,int,int,int,Bundle)
void android.service.wallpaper.IWallpaperEngine$Stub$Proxy.setDesiredSize(int,int)
void android.service.wallpaper.IWallpaperEngine$Stub$Proxy.setVisibility(boolean)
void android.service.wallpaper.IWallpaperService$Stub$Proxy.attach(IWallpaperConnection,IBinder,int,boolean,int,int)
void android.service.wallpaper.WallpaperService$Engine$2.setFixedSize(int,int)
void android.service.wallpaper.WallpaperService$Engine.dump(String,FileDescriptor,PrintWriter,String[])
void android.service.wallpaper.WallpaperService$Engine.setOffsetNotificationsEnabled(boolean)
void android.service.wallpaper.WallpaperService$Engine.setTouchEventsEnabled(boolean)
void android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.dispatchWallpaperCommand(String,int,int,int,Bundle)
void android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.setDesiredSize(int,int)
void android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.setVisibility(boolean)
void android.service.wallpaper.WallpaperService.dump(FileDescriptor,PrintWriter,String[])
void android.speech.RecognitionService$RecognitionServiceBinder.startListening(Intent,IRecognitionListener)
void android.speech.SpeechRecognizer.startListening(Intent)
void android.speech.tts.AudioPlaybackHandler.enqueue(PlaybackQueueItem)
void android.speech.tts.ITextToSpeechService$Stub$Proxy.setCallback(IBinder,ITextToSpeechCallback)
void android.speech.tts.TextToSpeechService$CallbackMap.dispatchOnDone(Object,String)
void android.speech.tts.TextToSpeechService$CallbackMap.dispatchOnError(Object,String)
void android.speech.tts.TextToSpeechService$CallbackMap.dispatchOnStart(Object,String)
void android.speech.tts.TextToSpeechService$CallbackMap.setCallback(IBinder,ITextToSpeechCallback)
void android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1.sendAccessibilityEvent(View,int)
void android.support.v4.view.AccessibilityDelegateCompatJellyBean$1.sendAccessibilityEvent(View,int)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl.setSource(Object,View,int)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl.setVisibleToUser(Object,boolean)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setSource(Object,View,int)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.setVisibleToUser(Object,boolean)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setSource(View,int)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setVisibleToUser(boolean)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setSource(Object,View,int)
void android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(Object,boolean)
void android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl.setSource(Object,View,int)
void android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean.setSource(Object,View,int)
void android.telephony.CellInfo.writeToParcel(Parcel,int,int)
void android.telephony.CellInfoCdma.writeToParcel(Parcel,int)
void android.telephony.CellInfoGsm.writeToParcel(Parcel,int)
void android.telephony.CellInfoLte.writeToParcel(Parcel,int)
void android.telephony.CellSignalStrengthCdma.setDefaultValues()
void android.telephony.CellSignalStrengthGsm.setDefaultValues()
void android.telephony.CellSignalStrengthLte.setDefaultValues()
void android.telephony.SmsCbMessage.writeToParcel(Parcel,int)
void android.telephony.SmsManager.sendMultipartTextMessage(String,String,ArrayList,ArrayList,ArrayList)
void android.telephony.gsm.SmsManager.sendDataMessage(String,String,short,byte[],PendingIntent,PendingIntent)
void android.telephony.gsm.SmsManager.sendMultipartTextMessage(String,String,ArrayList,ArrayList,ArrayList)
void android.telephony.gsm.SmsManager.sendTextMessage(String,String,String,PendingIntent,PendingIntent)
void android.test.IsolatedContext$MockAccountManager.setPassword(Account,String)
void android.test.mock.MockContentResolver.setMasterSyncAutomatically(boolean)
void android.text.MeasuredText.setPos(int)
void android.util.FloatProperty.set(Object,Object)
void android.util.IntProperty.set(Object,Object)
void android.util.LocalLog.dump(FileDescriptor,PrintWriter,String[])
void android.util.LogPrinter.println(String)
void android.util.SparseLongArray.append(int,long)
void android.view.GLES20DisplayList.setAlpha(float)
void android.view.GLES20DisplayList.setAnimationMatrix(Matrix)
void android.view.GLES20DisplayList.setBottom(int)
void android.view.GLES20DisplayList.setCaching(boolean)
void android.view.GLES20DisplayList.setCameraDistance(float)
void android.view.GLES20DisplayList.setClipChildren(boolean)
void android.view.GLES20DisplayList.setHasOverlappingRendering(boolean)
void android.view.GLES20DisplayList.setLeft(int)
void android.view.GLES20DisplayList.setLeftTop(int,int)
void android.view.GLES20DisplayList.setLeftTopRightBottom(int,int,int,int)
void android.view.GLES20DisplayList.setPivotX(float)
void android.view.GLES20DisplayList.setPivotY(float)
void android.view.GLES20DisplayList.setRight(int)
void android.view.GLES20DisplayList.setRotation(float)
void android.view.GLES20DisplayList.setRotationX(float)
void android.view.GLES20DisplayList.setRotationY(float)
void android.view.GLES20DisplayList.setScaleX(float)
void android.view.GLES20DisplayList.setScaleY(float)
void android.view.GLES20DisplayList.setStaticMatrix(Matrix)
void android.view.GLES20DisplayList.setTop(int)
void android.view.GLES20DisplayList.setTransformationInfo(float,float,float,float,float,float,float,float)
void android.view.GLES20DisplayList.setTranslationX(float)
void android.view.GLES20DisplayList.setTranslationY(float)
void android.view.GLES20Layer.setLayerPaint(Paint)
void android.view.GLES20RecordingCanvas.setNextPoolable(Object)
void android.view.GLES20TextureLayer.setOpaque(boolean)
void android.view.HardwareLayer.setLayerPaint(Paint)
void android.view.HardwareRenderer$Gl20Renderer.setSurfaceTexture(HardwareLayer,SurfaceTexture)
void android.view.IDisplayContentChangeListener$Stub$Proxy.onRectangleOnScreenRequested(int,Rect,boolean)
void android.view.IDisplayContentChangeListener$Stub$Proxy.onRotationChanged(int)
void android.view.IDisplayContentChangeListener$Stub$Proxy.onWindowLayersChanged(int)
void android.view.IDisplayContentChangeListener$Stub$Proxy.onWindowTransition(int,int,WindowInfo)
void android.view.IInputFilter$Stub$Proxy.filterInputEvent(InputEvent,int)
void android.view.IInputFilter$Stub$Proxy.install(IInputFilterHost)
void android.view.IInputFilterHost$Stub$Proxy.sendInputEvent(InputEvent,int)
void android.view.IWindow$Stub$Proxy.moved(int,int)
void android.view.IWindowManager$Stub$Proxy.addAppToken(int,int,IApplicationToken,int,int,boolean,boolean)
void android.view.IWindowManager$Stub$Proxy.addDisplayContentChangeListener(int,IDisplayContentChangeListener)
void android.view.IWindowManager$Stub$Proxy.clearForcedDisplayDensity(int)
void android.view.IWindowManager$Stub$Proxy.clearForcedDisplaySize(int)
void android.view.IWindowManager$Stub$Proxy.getVisibleWindowsForDisplay(int,List)
void android.view.IWindowManager$Stub$Proxy.magnifyDisplay(int,float,float,float)
void android.view.IWindowManager$Stub$Proxy.overridePendingAppTransition(String,int,int,IRemoteCallback)
void android.view.IWindowManager$Stub$Proxy.overridePendingAppTransitionScaleUp(int,int,int,int)
void android.view.IWindowManager$Stub$Proxy.overridePendingAppTransitionThumb(Bitmap,int,int,IRemoteCallback,boolean)
void android.view.IWindowManager$Stub$Proxy.removeDisplayContentChangeListener(int,IDisplayContentChangeListener)
void android.view.IWindowManager$Stub$Proxy.setForcedDisplayDensity(int,int)
void android.view.IWindowManager$Stub$Proxy.setForcedDisplaySize(int,int,int)
void android.view.IWindowManager$Stub$Proxy.setInputFilter(IInputFilter)
void android.view.IWindowManager$Stub$Proxy.startFreezingScreen(int,int)
void android.view.IWindowSession$Stub$Proxy.onRectangleOnScreenRequested(IBinder,Rect,boolean)
void android.view.IWindowSession$Stub$Proxy.setUniverseTransform(IBinder,float,float,float,float,float,float,float)
void android.view.InputFilter.sendInputEvent(InputEvent,int)
void android.view.PointerIcon.writeToParcel(Parcel,int)
void android.view.Surface.setCompatibilityTranslator(CompatibilityInfo$Translator)
void android.view.Surface.setLayerStack(int)
void android.view.Surface.setWindowCrop(Rect)
void android.view.SurfaceView.setSecure(boolean)
void android.view.TextureView.setTransform(Matrix)
void android.view.VelocityTracker.setNextPoolable(Object)
void android.view.View$10.setValue(Object,float)
void android.view.View$10.setValue(View,float)
void android.view.View$11.setValue(Object,float)
void android.view.View$11.setValue(View,float)
void android.view.View$12.setValue(Object,float)
void android.view.View$12.setValue(View,float)
void android.view.View$3.setValue(Object,float)
void android.view.View$4.setValue(Object,float)
void android.view.View$5.setValue(Object,float)
void android.view.View$6.setValue(Object,float)
void android.view.View$7.setValue(Object,float)
void android.view.View$8.setValue(Object,float)
void android.view.View$9.setValue(Object,float)
void android.view.View$AttachInfo$InvalidateInfo.setNextPoolable(Object)
void android.view.View.dispatchAttachedToWindow(View$AttachInfo,int)
void android.view.View.dispatchCollectViewAttributes(View$AttachInfo,int)
void android.view.View.setBackground(Drawable)
void android.view.View.setHasTransientState(boolean)
void android.view.View.setImportantForAccessibility(int)
void android.view.View.setLayerPaint(Paint)
void android.view.View.setTag(int,Object)
void android.view.View.setTextAlignment(int)
void android.view.ViewRootImpl$AccessibilityInteractionConnection.performAccessibilityAction(long,int,Bundle,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.ViewRootImpl$ViewRootHandler.handleMessage(Message)
void android.view.ViewRootImpl$W.dispatchScreenState(boolean)
void android.view.ViewRootImpl.dispatchInvalidateDelayed(View,long)
void android.view.ViewRootImpl.dispatchInvalidateRectDelayed(View$AttachInfo$InvalidateInfo,long)
void android.view.ViewTreeObserver$InternalInsetsInfo.set(ViewTreeObserver$InternalInsetsInfo)
void android.view.Window.setAttributes(WindowManager$LayoutParams)
void android.view.WindowManagerGlobal.dumpGfxInfo(FileDescriptor)
void android.view.WindowManagerGlobal.startTrimMemory(int)
void android.view.WindowManagerImpl.updateViewLayout(View,ViewGroup$LayoutParams)
void android.view.accessibility.AccessibilityNodeInfo.addChild(View,int)
void android.view.accessibility.AccessibilityNodeInfo.setAccessibilityFocused(boolean)
void android.view.accessibility.AccessibilityNodeInfo.setLabelFor(View)
void android.view.accessibility.AccessibilityNodeInfo.setLabelFor(View,int)
void android.view.accessibility.AccessibilityNodeInfo.setLabeledBy(View)
void android.view.accessibility.AccessibilityNodeInfo.setLabeledBy(View,int)
void android.view.accessibility.AccessibilityNodeInfo.setParent(View,int)
void android.view.accessibility.AccessibilityNodeInfo.setSource(View,int)
void android.view.accessibility.AccessibilityNodeInfo.setVisibleToUser(boolean)
void android.view.accessibility.AccessibilityNodeInfoCache.add(AccessibilityNodeInfo)
void android.view.accessibility.AccessibilityRecord.setSource(View,int)
void android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findAccessibilityNodeInfoByAccessibilityId(long,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findAccessibilityNodeInfoByViewId(long,int,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findAccessibilityNodeInfosByText(long,String,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.findFocus(long,int,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.focusSearch(long,int,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy.performAccessibilityAction(long,int,Bundle,int,IAccessibilityInteractionConnectionCallback,int,int,long)
void android.view.accessibility.IAccessibilityManager$Stub$Proxy.interrupt(int)
void android.view.accessibility.IAccessibilityManager$Stub$Proxy.registerUiTestAutomationService(IAccessibilityServiceClient,AccessibilityServiceInfo)
void android.view.accessibility.IAccessibilityManager$Stub$Proxy.unregisterUiTestAutomationService(IAccessibilityServiceClient)
void android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl.onGetSentenceSuggestions(SentenceSuggestionsInfo[])
void android.webkit.BrowserFrame.addJavascriptInterface(Object,String,boolean)
void android.webkit.CacheManager.saveCacheFile(String,CacheManager$CacheResult)
void android.webkit.CallbackProxy.onExceededDatabaseQuota(String,String,long,long,long,WebStorage$QuotaUpdater)
void android.webkit.CallbackProxy.onGeolocationPermissionsShowPrompt(String,GeolocationPermissions$Callback)
void android.webkit.CallbackProxy.onReachedMaxAppCacheSize(long,long,WebStorage$QuotaUpdater)
void android.webkit.CookieManager.setAcceptFileSchemeCookiesImpl(boolean)
void android.webkit.CookieManagerClassic.setAcceptCookie(boolean)
void android.webkit.CookieManagerClassic.setAcceptFileSchemeCookiesImpl(boolean)
void android.webkit.CookieManagerClassic.setCookie(String,String)
void android.webkit.CookieManagerClassic.setCookie(String,String,boolean)
void android.webkit.DeviceMotionAndOrientationManager.setUseMock()
void android.webkit.GeolocationPermissionsClassic.getAllowed(String,ValueCallback)
void android.webkit.MockGeolocation.setError(int,String)
void android.webkit.MockGeolocation.setPermission(boolean)
void android.webkit.MockGeolocation.setPosition(double,double,double)
void android.webkit.SslClientCertLookupTable.Allow(String,PrivateKey,byte[][])
void android.webkit.WebIconDatabaseClassic.requestIconForPageUrl(String,WebIconDatabase$IconListener)
void android.webkit.WebSettings.setDefaultZoom(WebSettings$ZoomDensity)
void android.webkit.WebSettings.setLayoutAlgorithm(WebSettings$LayoutAlgorithm)
void android.webkit.WebSettings.setMediaPlaybackRequiresUserGesture(boolean)
void android.webkit.WebSettings.setPluginState(WebSettings$PluginState)
void android.webkit.WebSettings.setRenderPriority(WebSettings$RenderPriority)
void android.webkit.WebSettings.setTextSize(WebSettings$TextSize)
void android.webkit.WebSettingsClassic.setAutoFillEnabled(boolean)
void android.webkit.WebSettingsClassic.setDefaultFixedFontSize(int)
void android.webkit.WebSettingsClassic.setDefaultFontSize(int)
void android.webkit.WebSettingsClassic.setMinimumFontSize(int)
void android.webkit.WebSettingsClassic.setMinimumLogicalFontSize(int)
void android.webkit.WebSettingsClassic.setPluginsEnabled(boolean)
void android.webkit.WebSettingsClassic.setPluginsPath(String)
void android.webkit.WebSettingsClassic.setProperty(String,String)
void android.webkit.WebSettingsClassic.setUseDoubleTree(boolean)
void android.webkit.WebSettingsClassic.setUserAgent(int)
void android.webkit.WebStorageClassic.getQuotaForOrigin(String,ValueCallback)
void android.webkit.WebStorageClassic.getUsageForOrigin(String,ValueCallback)
void android.webkit.WebStorageClassic.setAppCacheMaximumSize(long)
void android.webkit.WebStorageClassic.setQuotaForOrigin(String,long)
void android.webkit.WebView$PrivateAccess.setMeasuredDimension(int,int)
void android.webkit.WebView$PrivateAccess.setScrollXRaw(int)
void android.webkit.WebView$PrivateAccess.setScrollYRaw(int)
void android.webkit.WebView.dumpViewHierarchyWithProperties(BufferedWriter,int)
void android.webkit.WebView.setLayerType(int,Paint)
void android.webkit.WebView.setLayoutParams(ViewGroup$LayoutParams)
void android.webkit.WebViewClassic$Factory.setPlatformNotificationsEnabled(boolean)
void android.webkit.WebViewClassic$FocusTransitionDrawable.draw(Canvas)
void android.webkit.WebViewClassic$FocusTransitionDrawable.setAlpha(int)
void android.webkit.WebViewClassic$FocusTransitionDrawable.setColorFilter(ColorFilter)
void android.webkit.WebViewClassic$PrivateHandler.handleMessage(Message)
void android.webkit.WebViewClassic$WebViewInputConnection.setAutoFillable(int)
void android.webkit.WebViewClassic$WebViewInputConnection.setupEditorInfo(EditorInfo)
void android.webkit.WebViewClassic.dumpViewHierarchyWithProperties(BufferedWriter,int)
void android.webkit.WebViewClassic.saveViewState(OutputStream,ValueCallback)
void android.webkit.WebViewClassic.saveWebArchive(String)
void android.webkit.WebViewClassic.saveWebArchive(String,boolean,ValueCallback)
void android.webkit.WebViewClassic.sendBatchableInputMessage(int,int,int,Object)
void android.webkit.WebViewClassic.setHttpAuthUsernamePassword(String,String,String,String)
void android.webkit.WebViewClassic.setInitialScale(int)
void android.webkit.WebViewClassic.setJsFlags(String)
void android.webkit.WebViewClassic.setLayerType(int,Paint)
void android.webkit.WebViewClassic.setLayoutParams(ViewGroup$LayoutParams)
void android.webkit.WebViewClassic.setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)
void android.webkit.WebViewClassic.setMockGeolocationError(int,String)
void android.webkit.WebViewClassic.setMockGeolocationPermission(boolean)
void android.webkit.WebViewClassic.setMockGeolocationPosition(double,double,double)
void android.webkit.WebViewClassic.setNetworkAvailable(boolean)
void android.webkit.WebViewClassic.setNetworkType(String,String)
void android.webkit.WebViewClassic.setOverScrollMode(int)
void android.webkit.WebViewClassic.setScrollBarStyle(int)
void android.webkit.WebViewClassic.setSelection(int,int)
void android.webkit.WebViewClassic.setWebBackForwardListClient(WebBackForwardListClient)
void android.webkit.WebViewClassic.setWebChromeClient(WebChromeClient)
void android.webkit.WebViewClassic.setWebViewClient(WebViewClient)
void android.webkit.WebViewCore.setMockGeolocationError(int,String)
void android.webkit.WebViewCore.setMockGeolocationPermission(boolean)
void android.webkit.WebViewCore.setMockGeolocationPosition(double,double,double)
void android.webkit.WebViewDatabaseClassic.setFormData(String,HashMap)
void android.webkit.WebViewDatabaseClassic.setHttpAuthUsernamePassword(String,String,String,String)
void android.webkit.WebViewDatabaseClassic.setUsernamePassword(String,String,String)
void android.webkit.ZoomManager.onFirstLayout(WebViewCore$DrawData)
void android.widget.AbsListView$FlingRunnable.startScroll(int,int,boolean)
void android.widget.AbsListView.setRemoteViewsOnClickHandler(RemoteViews$OnClickHandler)
void android.widget.AbsListView.setVisibleRangeHint(int,int)
void android.widget.ActivityChooserModel$DefaultSorter.sort(Intent,List,List)
void android.widget.AdapterViewAnimator.setRemoteViewsOnClickHandler(RemoteViews$OnClickHandler)
void android.widget.CalendarView.setSelectedDateVerticalBar(int)
void android.widget.CursorTreeAdapter.notifyDataSetChanged(boolean)
void android.widget.CursorTreeAdapter.setChildrenCursor(int,Cursor)
void android.widget.DateTimeView.setTime(long)
void android.widget.EditText.setEllipsize(TextUtils$TruncateAt)
void android.widget.Editor$ErrorPopup.update(int,int,int,int,boolean)
void android.widget.Editor$PinnedPopupWindow.updatePosition(int,int,boolean,boolean)
void android.widget.Editor.sendOnTextChanged(int,int)
void android.widget.GridLayout$LayoutParams.setBaseAttributes(TypedArray,int,int)
void android.widget.GridLayout$LayoutParams.setGravity(int)
void android.widget.GridLayout.setColumnCount(int)
void android.widget.GridLayout.setColumnOrderPreserved(boolean)
void android.widget.GridLayout.setRowCount(int)
void android.widget.GridLayout.setRowOrderPreserved(boolean)
void android.widget.ImageSwitcher.setImageDrawable(Drawable)
void android.widget.ImageSwitcher.setImageResource(int)
void android.widget.ImageSwitcher.setImageURI(Uri)
void android.widget.ImageView.setColorFilter(int,PorterDuff$Mode)
void android.widget.ImageView.setImageAlpha(int)
void android.widget.NumberPicker$AccessibilityNodeProviderImpl.sendAccessibilityEventForVirtualView(int,int)
void android.widget.ProgressBar$RefreshData.setNextPoolable(Object)
void android.widget.RelativeLayout$DependencyGraph$Node.setNextPoolable(Object)
void android.widget.RemoteViews$Action.setBitmapCache(RemoteViews$BitmapCache)
void android.widget.RemoteViews$BitmapCache.writeBitmapsToParcel(Parcel,int)
void android.widget.RemoteViews$BitmapReflectionAction.setBitmapCache(RemoteViews$BitmapCache)
void android.widget.RemoteViews$SetRemoteViewsAdapterIntent.apply(View,ViewGroup,RemoteViews$OnClickHandler)
void android.widget.RemoteViews$ViewGroupAction.setBitmapCache(RemoteViews$BitmapCache)
void android.widget.RemoteViews.reapply(Context,View,RemoteViews$OnClickHandler)
void android.widget.RemoteViews.setDrawableParameters(int,boolean,int,int,PorterDuff$Mode,int)
void android.widget.RemoteViews.setLabelFor(int,int)
void android.widget.RemoteViews.setTextViewCompoundDrawables(int,int,int,int,int)
void android.widget.RemoteViews.setTextViewCompoundDrawablesRelative(int,int,int,int,int)
void android.widget.RemoteViews.setTextViewTextSize(int,int,float)
void android.widget.RemoteViews.setViewPadding(int,int,int,int,int)
void android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache.insert(int,RemoteViews,long,ArrayList)
void android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet.add(int,RemoteViewsAdapter$RemoteViewsFrameLayout)
void android.widget.RemoteViewsAdapter$RemoteViewsMetaData.set(RemoteViewsAdapter$RemoteViewsMetaData)
void android.widget.Spinner$DialogPopup.setBackgroundDrawable(Drawable)
void android.widget.Spinner$DialogPopup.setHorizontalOffset(int)
void android.widget.Spinner$DialogPopup.setVerticalOffset(int)
void android.widget.Spinner.setDropDownHorizontalOffset(int)
void android.widget.Spinner.setDropDownVerticalOffset(int)
void android.widget.Spinner.setPopupBackgroundDrawable(Drawable)
void android.widget.Spinner.setPopupBackgroundResource(int)
void android.widget.Switch.setThumbResource(int)
void android.widget.Switch.setTrackResource(int)
void android.widget.TextView$Drawables.resolveWithLayoutDirection(int)
void android.widget.TextView.setAccessibilityCursorPosition(int)
void android.widget.TextView.setPaddingRelative(int,int,int,int)
void android.widget.TextView.setText(int,TextView$BufferType)
void android.widget.TextView.setTextLocale(Locale)
void com.adobe.xmp.impl.CountOutputStream.write(byte[])
void com.adobe.xmp.impl.CountOutputStream.write(byte[],int,int)
void com.adobe.xmp.impl.CountOutputStream.write(int)
void com.adobe.xmp.impl.XMPDateTimeImpl.setHour(int)
void com.adobe.xmp.impl.XMPDateTimeImpl.setMinute(int)
void com.adobe.xmp.impl.XMPDateTimeImpl.setSecond(int)
void com.adobe.xmp.impl.XMPDateTimeImpl.setYear(int)
void com.adobe.xmp.impl.XMPMetaImpl.setLocalizedText(String,String,String,String,String,PropertyOptions)
void com.adobe.xmp.impl.XMPMetaImpl.setNode(XMPNode,Object,PropertyOptions,boolean)
void com.adobe.xmp.impl.XMPMetaImpl.setProperty(String,String,Object)
void com.adobe.xmp.impl.XMPMetaImpl.setProperty(String,String,Object,PropertyOptions)
void com.adobe.xmp.impl.XMPMetaImpl.setPropertyBoolean(String,String,boolean)
void com.adobe.xmp.impl.XMPMetaImpl.setPropertyDate(String,String,XMPDateTime)
void com.adobe.xmp.impl.XMPMetaImpl.setPropertyDouble(String,String,double)
void com.adobe.xmp.impl.XMPMetaImpl.setPropertyInteger(String,String,int)
void com.adobe.xmp.impl.XMPSchemaRegistryImpl.registerAlias(String,String,String,String,AliasOptions)
void com.adobe.xmp.options.Options.setOption(int,boolean)
void com.android.bluetooth.Utils.copyStream(InputStream,OutputStream,int)
void com.android.bluetooth.btservice.AdapterProperties.sendConnectionStateChange(BluetoothDevice,int,int,int)
void com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder.sendConnectionStateChange(BluetoothDevice,int,int,int)
void com.android.bluetooth.btservice.AdapterService.onProfileConnectionStateChanged(BluetoothDevice,int,int,int)
void com.android.bluetooth.btservice.AdapterService.sendConnectionStateChange(BluetoothDevice,int,int,int)
void com.android.bluetooth.btservice.AdapterService.setProfileAutoConnectionPriority(BluetoothDevice,int)
void com.android.bluetooth.btservice.ProfileService.notifyProfileConnectionStateChanged(BluetoothDevice,int,int,int)
void com.android.bluetooth.btservice.ProfileService.notifyProfileServiceStateChanged(int)
void com.android.bluetooth.btservice.RemoteDevices$DeviceProperties.setAlias(String)
void com.android.bluetooth.btservice.RemoteDevices.aclStateChangeCallback(int,byte[],int)
void com.android.bluetooth.btservice.RemoteDevices.deviceFoundCallback(byte[])
void com.android.bluetooth.btservice.RemoteDevices.devicePropertyChangedCallback(byte[],int[],byte[][])
void com.android.bluetooth.btservice.RemoteDevices.pinRequestCallback(byte[],byte[],int)
void com.android.bluetooth.btservice.RemoteDevices.sspRequestCallback(byte[],byte[],int,int,int)
void com.android.bluetooth.opp.BluetoothOppManager.saveSendingFileInfo(String,ArrayList,boolean)
void com.android.bluetooth.opp.BluetoothOppManager.saveSendingFileInfo(String,String,boolean)
void com.android.bluetooth.opp.BluetoothOppPreference.setChannel(BluetoothDevice,int,int)
void com.android.bluetooth.opp.BluetoothOppPreference.setName(BluetoothDevice,String)
void com.android.bluetooth.opp.BluetoothOppReceiver.onReceive(Context,Intent)
void com.android.bluetooth.opp.BluetoothOppService$2.handleMessage(Message)
void com.android.bluetooth.opp.BluetoothOppUtility.openReceivedFile(Context,String,String,Long,Uri)
void com.android.bluetooth.opp.BluetoothOppUtility.retryTransfer(Context,BluetoothOppTransferInfo)
void com.android.bluetooth.opp.Constants.updateShareStatus(Context,int,int)
void com.android.bluetooth.pan.PanService$BluetoothPanBinder.setBluetoothTethering(boolean)
void com.android.bluetooth.pan.PanService.handlePanDeviceStateChange(BluetoothDevice,String,int,int,int)
void com.android.bluetooth.pbap.BluetoothPbapReceiver.onReceive(Context,Intent)
void com.android.browser.AddBookmarkPage$1.onLoadFinished(Loader,AddBookmarkPage$EditBookmarkInfo)
void com.android.browser.AddBookmarkPage.setAccount(String,String)
void com.android.browser.BaseUi.setActiveTab(Tab)
void com.android.browser.BaseUi.setFavicon(Tab)
void com.android.browser.BaseUi.setFullscreen(boolean)
void com.android.browser.BaseUi.setUrlTitle(Tab)
void com.android.browser.BaseUi.showComboView(UI$ComboViews,Bundle)
void com.android.browser.BookmarkItem.setFavicon(Bitmap)
void com.android.browser.BookmarkItem.setFaviconBackground(Drawable)
void com.android.browser.BookmarksLoader.setUri(Uri)
void com.android.browser.BrowserBackupAgent.addBookmark(BrowserBackupAgent$Bookmark)
void com.android.browser.BrowserBackupAgent.onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
void com.android.browser.BrowserBackupAgent.onRestore(BackupDataInput,int,ParcelFileDescriptor)
void com.android.browser.BrowserBookmarksAdapter.bindView(View,BrowserBookmarksAdapterItem)
void com.android.browser.BrowserBookmarksAdapter.bindView(View,Object)
void com.android.browser.BrowserBookmarksPage.onLoadFinished(Loader,Cursor)
void com.android.browser.BrowserSettings.setAutoFillProfile(WebSettingsClassic$AutoFillProfile,Message)
void com.android.browser.BrowserSettings.setAutofillEnabled(boolean)
void com.android.browser.BrowserSettings.setDebugEnabled(boolean)
void com.android.browser.BrowserSettings.setHomePage(String)
void com.android.browser.BrowserSettings.setLastRecovered(long)
void com.android.browser.BrowserSettings.setLastRunPaused(boolean)
void com.android.browser.BrowserSettings.setTextZoom(int)
void com.android.browser.BrowserSettings.toggleDesktopUseragent(WebView)
void com.android.browser.BrowserSnapshotPage.setupGrid(LayoutInflater)
void com.android.browser.ComboViewActivity.openInNewTab(String[])
void com.android.browser.ComboViewActivity.openSnapshot(long)
void com.android.browser.ComboViewActivity.openUrl(String)
void com.android.browser.Controller$SaveSnapshotTask.onPostExecute(Long)
void com.android.browser.Controller.onReceivedTitle(Tab,String)
void com.android.browser.Controller.setActiveTab(Tab)
void com.android.browser.Controller.sharePage(Context,String,String,Bitmap,Bitmap)
void com.android.browser.Controller.start(Intent)
void com.android.browser.Controller.updateMenuState(Tab,Menu)
void com.android.browser.DataController.updateVisitedHistory(String)
void com.android.browser.HistoryItem.setIsBookmark(boolean)
void com.android.browser.LogTag.logBookmarkAdded(String,String)
void com.android.browser.LogTag.logPageFinishedLoading(String,long)
void com.android.browser.NavTabScroller.setOrientation(int)
void com.android.browser.NavTabScroller.setScrollValue(int)
void com.android.browser.NavigationBarBase.onAction(String,String,String)
void com.android.browser.NavigationBarBase.setCurrentUrlIsBookmark(boolean)
void com.android.browser.NavigationBarBase.setDisplayTitle(String)
void com.android.browser.NavigationBarBase.setFavicon(Bitmap)
void com.android.browser.NavigationBarBase.setFocusState(boolean)
void com.android.browser.NavigationBarBase.setIncognitoMode(boolean)
void com.android.browser.NavigationBarBase.setLock(Drawable)
void com.android.browser.NavigationBarPhone.setDisplayTitle(String)
void com.android.browser.NavigationBarTablet.setCurrentUrlIsBookmark(boolean)
void com.android.browser.NavigationBarTablet.setFavicon(Bitmap)
void com.android.browser.NavigationBarTablet.setFocusState(boolean)
void com.android.browser.NavigationBarTablet.setTitleBar(TitleBar)
void com.android.browser.PageDialogsHandler.setHttpAuthUsernamePassword(String,String,String,String)
void com.android.browser.PhoneUi$AnimScreen.set(Bitmap)
void com.android.browser.PhoneUi$AnimScreen.set(TitleBar,WebView)
void com.android.browser.PhoneUi.setActiveTab(Tab)
void com.android.browser.PreloadController.setupAutoFill(Message)
void com.android.browser.PreloadedTabControl.setQuery(String)
void com.android.browser.SnapshotBar.setFavicon(Bitmap)
void com.android.browser.Tab$3.setupAutoFill(Message)
void com.android.browser.Tab.setParent(Tab)
void com.android.browser.Tab.setWebView(WebView)
void com.android.browser.TabBar$TabView.dispatchDraw(Canvas)
void com.android.browser.TabBar$TabView.setDisplayTitle(String)
void com.android.browser.TabBar$TabView.setFavicon(Drawable)
void com.android.browser.TabControl.restoreState(Bundle,long,boolean,boolean)
void com.android.browser.TabScrollView.setScroll(int)
void com.android.browser.TitleBar.setProgress(int)
void com.android.browser.TitleBar.updateAutoLogin(Tab,boolean)
void com.android.browser.UrlHandler$RLZTask.onPostExecute(String)
void com.android.browser.WebStorageSizeManager.onExceededDatabaseQuota(String,String,long,long,long,WebStorage$QuotaUpdater)
void com.android.browser.XLargeUi.setActiveTab(Tab)
void com.android.browser.XLargeUi.setFavicon(Tab)
void com.android.browser.XLargeUi.setUrlTitle(Tab)
void com.android.browser.XLargeUi.setUseQuickControls(boolean)
void com.android.browser.addbookmark.FolderSpinner.setSelection(int)
void com.android.browser.addbookmark.FolderSpinner.setSelectionIgnoringSelectionChange(int)
void com.android.browser.homepages.Template$HashMapEntityData.writeValue(OutputStream,String)
void com.android.browser.homepages.Template$ListEntity.write(OutputStream,Template$EntityData)
void com.android.browser.homepages.Template$SimpleEntity.write(OutputStream,Template$EntityData)
void com.android.browser.homepages.Template.assign(String,String)
void com.android.browser.homepages.Template.assignLoop(String,Template$ListEntityIterator)
void com.android.browser.homepages.Template.write(OutputStream)
void com.android.browser.homepages.Template.write(OutputStream,Template$EntityData)
void com.android.browser.preferences.WebsiteSettingsFragment$Site.writeToParcel(Parcel,int)
void com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter.onItemClick(AdapterView,View,int,long)
void com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter.setIconForUsage(ImageView,long)
void com.android.browser.provider.BrowserProvider2$DatabaseHelper.onCreate(SQLiteDatabase)
void com.android.browser.provider.BrowserProvider2$DatabaseHelper.onUpgrade(SQLiteDatabase,int,int)
void com.android.browser.search.DefaultSearchEngine.startSearch(Context,String,Bundle,String)
void com.android.browser.search.OpenSearchSearchEngine.startSearch(Context,String,Bundle,String)
void com.android.browser.view.BookmarkContainer.setBackgroundDrawable(Drawable)
void com.android.browser.view.BookmarkExpandableView.setColumnWidthFromLayout(int)
void com.android.browser.view.PieItem.setAlpha(float)
void com.android.browser.view.PieStackView.setCurrent(int)
void com.android.browser.view.ScrollerView.setOrientation(int)
void com.android.browser.widget.BookmarkThumbnailWidgetProvider.onReceive(Context,Intent)
void com.android.browser.widget.BookmarkThumbnailWidgetProvider.onUpdate(Context,AppWidgetManager,int[])
void com.android.browser.widget.BookmarkThumbnailWidgetService.changeFolder(Context,Intent)
void com.android.browser.widget.BookmarkThumbnailWidgetService.setupWidgetState(Context,int,long)
void com.android.browser.widget.BookmarkWidgetProxy.onReceive(Context,Intent)
void com.android.calendar.AllInOneActivity.handleEvent(CalendarController$EventInfo)
void com.android.calendar.AllInOneActivity.setControlsOffset(int)
void com.android.calendar.CalendarController.launchViewEvent(long,long,long,int)
void com.android.calendar.CalendarController.sendEvent(Object,long,Time,Time,Time,long,int,long,String,ComponentName)
void com.android.calendar.CalendarController.sendEvent(Object,long,Time,Time,long,int)
void com.android.calendar.CalendarController.sendEvent(Object,long,Time,Time,long,int,long,String,ComponentName)
void com.android.calendar.CalendarController.sendEventRelatedEvent(Object,long,long,long,long,int,int,long)
void com.android.calendar.CalendarController.sendEventRelatedEventWithExtra(Object,long,long,long,long,int,int,long,long)
void com.android.calendar.CalendarController.setTime(long)
void com.android.calendar.CalendarEventModel.addAttendee(CalendarEventModel$Attendee)
void com.android.calendar.CalendarEventModel.addAttendees(String,Rfc822Validator)
void com.android.calendar.CalendarUtils$TimeZoneUtils.setTimeZone(Context,String)
void com.android.calendar.CalendarUtils.setSharedPreference(SharedPreferences,String,String)
void com.android.calendar.CalendarUtils.setSharedPreference(SharedPreferences,String,boolean)
void com.android.calendar.DayOfMonthDrawable.setAlpha(int)
void com.android.calendar.DayOfMonthDrawable.setColorFilter(ColorFilter)
void com.android.calendar.DayOfMonthDrawable.setDayOfMonth(int)
void com.android.calendar.DayView.setMoreAllDayEventsTextAlpha(int)
void com.android.calendar.DayView.setSelected(Time,boolean,boolean)
void com.android.calendar.EventGeometry.setHourHeight(float)
void com.android.calendar.EventLoader.loadEventsInBackground(int,ArrayList,int,Runnable,Runnable)
void com.android.calendar.ExpandableTextView.setText(String)
void com.android.calendar.GeneralPreferences.setDefaultValues(Context)
void com.android.calendar.Utils.setDefaultView(Context,int)
void com.android.calendar.Utils.setSharedPreference(Context,String,String)
void com.android.calendar.Utils.setSharedPreference(Context,String,String[])
void com.android.calendar.Utils.setSharedPreference(Context,String,boolean)
void com.android.calendar.Utils.setSharedPreference(Context,String,int)
void com.android.calendar.Utils.setTimeZone(Context,String)
void com.android.calendar.Utils.setTodayIcon(LayerDrawable,Context,String)
void com.android.calendar.Utils.setUpSearchView(SearchView,Activity)
void com.android.calendar.agenda.AgendaAdapter.bindView(View,Context,Cursor)
void com.android.calendar.agenda.AgendaByDayAdapter.setAsFirstDayAfterYesterday(int)
void com.android.calendar.agenda.AgendaListView.onItemClick(AdapterView,View,int,long)
void com.android.calendar.agenda.AgendaListView.setHideDeclinedEvents(boolean)
void com.android.calendar.agenda.AgendaListView.setSelectedInstanceId(long)
void com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler.onQueryComplete(int,Object,Cursor)
void com.android.calendar.agenda.AgendaWindowAdapter.refresh(Time,long,String,boolean,boolean)
void com.android.calendar.agenda.AgendaWindowAdapter.setSelectedView(View)
void com.android.calendar.alerts.AlertAdapter.bindView(View,Context,Cursor)
void com.android.calendar.alerts.AlertReceiver.onReceive(Context,Intent)
void com.android.calendar.alerts.AlertService$NotificationMgrWrapper.notify(int,AlertService$NotificationWrapper)
void com.android.calendar.alerts.AlertUtils$1.set(int,long,PendingIntent)
void com.android.calendar.alerts.AlertUtils.setAlertFiredInSharedPrefs(Context,long,long,long)
void com.android.calendar.alerts.DismissAlarmsService.onHandleIntent(Intent)
void com.android.calendar.alerts.SnoozeAlarmsService.onHandleIntent(Intent)
void com.android.calendar.event.AttendeesView.onClick(View)
void com.android.calendar.event.AttendeesView.setEnabled(boolean)
void com.android.calendar.month.MonthByWeekAdapter.setSelectedDay(Time)
void com.android.calendar.month.MonthByWeekFragment.setMonthDisplayed(Time,boolean)
void com.android.calendar.month.MonthWeekEventsView.setClickedDay(float)
void com.android.calendar.month.MonthWeekEventsView.setWeekParams(HashMap,String)
void com.android.calendar.month.SimpleDayPickerFragment.setMonthDisplayed(Time,boolean)
void com.android.calendar.month.SimpleWeeksAdapter.setSelectedDay(Time)
void com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter.setVisible(int,int)
void com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter.onItemClick(AdapterView,View,int,long)
void com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater.onQueryComplete(int,Object,Cursor)
void com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.bindChildView(View,Context,Cursor,boolean)
void com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter.onClick(View)
void com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment.toggleVisibility(int)
void com.android.calendar.widget.CalendarAppWidgetProvider.onReceive(Context,Intent)
void com.android.calendar.widget.CalendarAppWidgetProvider.onUpdate(Context,AppWidgetManager,int[])
void com.android.camera.ActivityBase.setContentView(int)
void com.android.camera.ActivityBase.setSwipingEnabled(boolean)
void com.android.camera.CameraActivity.startActivityForResult(Intent,int)
void com.android.camera.CameraManager$CameraProxy.setDisplayOrientation(int)
void com.android.camera.CameraManager$CameraProxy.setParameters(Camera$Parameters)
void com.android.camera.CameraManager$CameraProxy.setParametersAsync(Camera$Parameters)
void com.android.camera.CameraManager$CameraProxy.setPreviewTextureAsync(SurfaceTexture)
void com.android.camera.CameraScreenNail.setPreviewFrameLayoutSize(int,int)
void com.android.camera.CameraSettings.initialCameraPictureSize(Context,Camera$Parameters)
void com.android.camera.CaptureAnimManager.setOrientation(int)
void com.android.camera.ComboPreferences.setLocalId(Context,int)
void com.android.camera.EffectsRecorder.setOutputFile(FileDescriptor)
void com.android.camera.ListPreference.persistStringValue(String)
void com.android.camera.ListPreference.setValueIndex(int)
void com.android.camera.MosaicFrameProcessor.setStripType(int)
void com.android.camera.MosaicPreviewRenderer$EGLHandler.sendMessageSync(int)
void com.android.camera.PanoProgressBar.setBackgroundColor(int)
void com.android.camera.PanoProgressBar.setDoneColor(int)
void com.android.camera.PanoProgressBar.setIndicatorColor(int)
void com.android.camera.PanoProgressBar.setMaxProgress(int)
void com.android.camera.PanoProgressBar.setProgress(int)
void com.android.camera.PanoProgressBar.setRightIncreasing(boolean)
void com.android.camera.PhotoController.setCameraId(int)
void com.android.camera.PhotoModule.onActivityResult(int,int,Intent)
void com.android.camera.PieController.addItem(String,float,float)
void com.android.camera.PieController.setCameraId(int)
void com.android.camera.RotateDialogController.setOrientation(int,boolean)
void com.android.camera.Storage.writeFile(String,byte[])
void com.android.camera.Util.setGpsParameters(Camera$Parameters,Location)
void com.android.camera.VideoController.setCameraId(int)
void com.android.camera.drawable.TextDrawable.setAlpha(int)
void com.android.camera.drawable.TextDrawable.setColorFilter(ColorFilter)
void com.android.camera.ui.CameraSwitcher.setOrientation(int,boolean)
void com.android.camera.ui.EffectSettingPopup.setVisibility(int)
void com.android.camera.ui.InLineSettingItem.setTitle(ListPreference)
void com.android.camera.ui.InLineSettingSwitch.setEnabled(boolean)
void com.android.camera.ui.ListPrefSettingPopup$ListPrefSettingAdapter.setViewImage(ImageView,String)
void com.android.camera.ui.MoreSettingPopup.setPreferenceEnabled(String,boolean)
void com.android.camera.ui.PieItem.setBounds(int,int,int,int)
void com.android.camera.ui.PieItem.setImageResource(Context,int)
void com.android.camera.ui.PieRenderer.onDraw(Canvas)
void com.android.camera.ui.PopupManager.notifyShowPopup(View)
void com.android.camera.ui.RotateLayout.setOrientation(int,boolean)
void com.android.camera.ui.Switch.setChecked(boolean)
void com.android.camera.ui.Switch.setSwitchTextAppearance(Context,int)
void com.android.camera.ui.TimeIntervalPopup.setTimeSelectionEnabled(boolean)
void com.android.camera.ui.TimeIntervalPopup.setVisibility(int)
void com.android.camera.ui.TwoStateImageView.setEnabled(boolean)
void com.android.camera.ui.ZoomRenderer.setZoom(int)
void com.android.camera.ui.ZoomRenderer.setZoomValue(int)
void com.android.commands.am.Am$InstrumentationWatcher.instrumentationFinished(ComponentName,int,Bundle)
void com.android.commands.am.Am$InstrumentationWatcher.instrumentationStatus(ComponentName,int,Bundle)
void com.android.commands.am.Am$IntentReceiver.performReceive(Intent,int,String,Bundle,boolean,boolean,int)
void com.android.commands.bmgr.Bmgr$RestoreObserver.onUpdate(int,String)
void com.android.commands.bmgr.Bmgr$RestoreObserver.restoreFinished(int)
void com.android.commands.bmgr.Bmgr$RestoreObserver.restoreSetsAvailable(RestoreSet[])
void com.android.commands.bmgr.Bmgr$RestoreObserver.restoreStarting(int)
void com.android.commands.monkey.MonkeySourceNetwork.setVerbose(int)
void com.android.commands.monkey.MonkeySourceRandom.setFactors(float[])
void com.android.commands.monkey.MonkeySourceRandom.setFactors(int,float)
void com.android.commands.pm.Pm.run(String[])
void com.android.commands.svc.Svc$1.run(String[])
void com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask.onPostExecute(PhoneCallDetails[])
void com.android.contacts.ContactPhotoManagerImpl.cacheBitmap(Uri,Bitmap,byte[])
void com.android.contacts.ContactSaveService.onHandleIntent(Intent)
void com.android.contacts.PhoneCallDetailsHelper.setCallDetailsHeader(TextView,PhoneCallDetails)
void com.android.contacts.PhoneCallDetailsHelper.setCurrentTimeForTest(long)
void com.android.contacts.PhoneCallDetailsHelper.setPhoneCallDetails(PhoneCallDetailsViews,PhoneCallDetails,boolean)
void com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler.onQueryComplete(int,Object,Cursor)
void com.android.contacts.activities.ContactEditorAccountsChangedActivity.onActivityResult(int,int,Intent)
void com.android.contacts.activities.ContactEditorActivity$2.onCustomCreateContactActivityRequested(AccountWithDataSet,Bundle)
void com.android.contacts.activities.ContactEditorActivity$2.onCustomEditContactActivityRequested(AccountWithDataSet,Uri,Bundle,boolean)
void com.android.contacts.activities.ContactEditorActivity$2.onEditOtherContactRequested(Uri,ArrayList)
void com.android.contacts.activities.ContactSelectionActivity.startActivityAndForwardResult(Intent)
void com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter.setPrimaryItem(ViewGroup,int,Object)
void com.android.contacts.activities.DialtactsActivity.startSearch(String,boolean,Bundle,boolean)
void com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener.onCreateRawContactRequested(ArrayList,AccountWithDataSet)
void com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener.onItemClicked(Intent)
void com.android.contacts.activities.PeopleActivity$TabPagerAdapter.setPrimaryItem(ViewGroup,int,Object)
void com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler.startPhotoActivity(Intent,int,String)
void com.android.contacts.calllog.CallLogAdapter.bindChildView(View,Context,Cursor)
void com.android.contacts.calllog.CallLogAdapter.bindGroupView(View,Context,Cursor,int,boolean)
void com.android.contacts.calllog.CallLogAdapter.bindStandAloneView(View,Context,Cursor)
void com.android.contacts.calllog.CallLogAdapter.injectContactInfoForTest(String,String,ContactInfo)
void com.android.contacts.calllog.CallLogListItemHelper.setPhoneCallDetails(CallLogListItemViews,PhoneCallDetails,boolean)
void com.android.contacts.datepicker.DatePicker$SavedState.writeToParcel(Parcel,int)
void com.android.contacts.datepicker.DatePicker.setEnabled(boolean)
void com.android.contacts.detail.ActionsViewContainer.setPosition(int)
void com.android.contacts.detail.CarouselTab.setLabel(String)
void com.android.contacts.detail.ContactDetailDisplayUtils.setCompanyName(Context,Contact,TextView)
void com.android.contacts.detail.ContactDetailDisplayUtils.setDisplayName(Context,Contact,TextView)
void com.android.contacts.detail.ContactDetailDisplayUtils.setSocialSnippet(Context,Contact,TextView,ImageView)
void com.android.contacts.detail.ContactDetailTabCarousel.restoreCurrentTab(int)
void com.android.contacts.dialpad.DialpadImageButton.setPressed(boolean)
void com.android.contacts.editor.BaseRawContactEditorView.setPhotoBitmap(Bitmap)
void com.android.contacts.editor.ContactEditorFragment$PhotoHandler.startPhotoActivity(Intent,int,String)
void com.android.contacts.editor.ContactEditorFragment.setAggregationSuggestionViewEnabled(boolean)
void com.android.contacts.editor.ContactEditorFragment.setData(Contact)
void com.android.contacts.editor.ContactEditorFragment.setIntentExtras(Bundle)
void com.android.contacts.editor.ContactEditorUtils.saveDefaultAndAllAccounts(AccountWithDataSet)
void com.android.contacts.editor.EventFieldEditorView.onFieldChanged(String,String)
void com.android.contacts.editor.EventFieldEditorView.setEnabled(boolean)
void com.android.contacts.editor.EventFieldEditorView.setValues(DataKind,RawContactDelta$ValuesDelta,RawContactDelta,boolean,ViewIdGenerator)
void com.android.contacts.editor.GroupMembershipView.setEnabled(boolean)
void com.android.contacts.editor.KindSectionView.setEnabled(boolean)
void com.android.contacts.editor.KindSectionView.setTitleVisible(boolean)
void com.android.contacts.editor.LabeledEditorView.onFieldChanged(String,String)
void com.android.contacts.editor.LabeledEditorView.saveValue(String,String)
void com.android.contacts.editor.LabeledEditorView.setDeleteButtonVisible(boolean)
void com.android.contacts.editor.LabeledEditorView.setEnabled(boolean)
void com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta.put(String,String)
void com.android.contacts.editor.PhoneticNameEditorView.setValues(DataKind,RawContactDelta$ValuesDelta,RawContactDelta,boolean,ViewIdGenerator)
void com.android.contacts.editor.PhotoEditorView.setDeletable(boolean)
void com.android.contacts.editor.PhotoEditorView.setEnabled(boolean)
void com.android.contacts.editor.PhotoEditorView.setPhotoBitmap(Bitmap)
void com.android.contacts.editor.PhotoEditorView.setSuperPrimary(boolean)
void com.android.contacts.editor.RawContactEditorView.setEnabled(boolean)
void com.android.contacts.editor.RawContactEditorView.setPhotoBitmap(Bitmap)
void com.android.contacts.editor.RawContactReadOnlyEditorView.setState(RawContactDelta,AccountType,ViewIdGenerator,boolean)
void com.android.contacts.editor.SelectAccountDialogFragment.show(FragmentManager,Fragment,int,AccountsListAdapter$AccountListFilter,Bundle)
void com.android.contacts.editor.StructuredNameEditorView.onFieldChanged(String,String)
void com.android.contacts.editor.StructuredNameEditorView.setValues(DataKind,RawContactDelta$ValuesDelta,RawContactDelta,boolean,ViewIdGenerator)
void com.android.contacts.editor.TextFieldsEditorView$SavedState.writeToParcel(Parcel,int)
void com.android.contacts.editor.TextFieldsEditorView.onFieldChanged(String,String)
void com.android.contacts.editor.TextFieldsEditorView.setEnabled(boolean)
void com.android.contacts.editor.TextFieldsEditorView.setValues(DataKind,RawContactDelta$ValuesDelta,RawContactDelta,boolean,ViewIdGenerator)
void com.android.contacts.format.PrefixHighlighter.setText(TextView,String,char[])
void com.android.contacts.group.GroupBrowseListFragment.setAddAccountsVisibility(boolean)
void com.android.contacts.group.GroupDetailFragment.setQuickContact(boolean)
void com.android.contacts.group.GroupEditorFragment$Member.writeToParcel(Parcel,int)
void com.android.contacts.group.GroupEditorFragment.loadMemberToAddToGroup(long,String)
void com.android.contacts.interactions.GroupCreationDialogFragment.onCompleted(String)
void com.android.contacts.interactions.GroupCreationDialogFragment.show(FragmentManager,String,String,String,GroupCreationDialogFragment$OnGroupCreatedListener)
void com.android.contacts.interactions.GroupDeletionDialogFragment.show(FragmentManager,long,String,boolean)
void com.android.contacts.interactions.ImportExportDialogFragment.show(FragmentManager,boolean)
void com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment.show(FragmentManager,ArrayList,PhoneNumberInteraction$InteractionType,String)
void com.android.contacts.interactions.PhoneNumberInteraction.onLoadComplete(Loader,Cursor)
void com.android.contacts.interactions.TestLoaderManager.dump(String,FileDescriptor,PrintWriter,String[])
void com.android.contacts.list.AccountFilterActivity.onItemClick(AdapterView,View,int,long)
void com.android.contacts.list.ContactBrowseListFragment.restoreSavedState(Bundle)
void com.android.contacts.list.ContactBrowseListFragment.setFilter(ContactListFilter)
void com.android.contacts.list.ContactBrowseListFragment.setSearchMode(boolean)
void com.android.contacts.list.ContactEntryListAdapter.setDefaultFilterHeaderText(int)
void com.android.contacts.list.ContactEntryListAdapter.setPinnedSectionTitle(View,String)
void com.android.contacts.list.ContactEntryListFragment.loadDirectoryPartition(int,DirectoryPartition)
void com.android.contacts.list.ContactEntryListFragment.onCreate(Bundle)
void com.android.contacts.list.ContactListFilterControllerImpl.setContactListFilter(ContactListFilter,boolean)
void com.android.contacts.list.ContactListFilterView.setActivated(boolean)
void com.android.contacts.list.ContactListItemView.setData(char[],int)
void com.android.contacts.list.ContactListItemView.setPhoneticName(char[],int)
void com.android.contacts.list.ContactListItemView.setPresence(Drawable)
void com.android.contacts.list.ContactListItemView.setSectionHeader(String)
void com.android.contacts.list.ContactListItemView.setSnippet(String)
void com.android.contacts.list.ContactListPinnedHeaderView.setCountView(String)
void com.android.contacts.list.ContactListPinnedHeaderView.setSectionHeader(String)
void com.android.contacts.list.ContactPickerFragment.restoreSavedState(Bundle)
void com.android.contacts.list.ContactTileListFragment.enableQuickContact(boolean)
void com.android.contacts.list.ContactTileView.setHorizontalDividerVisibility(int)
void com.android.contacts.list.ContactsSectionIndexer.setProfileHeader(String)
void com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay.setShouldSync(CustomContactListFilterActivity$GroupDelta,boolean)
void com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay.setShouldSync(CustomContactListFilterActivity$GroupDelta,boolean,boolean)
void com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay.setShouldSync(boolean)
void com.android.contacts.list.DefaultContactBrowseListFragment.setFilter(ContactListFilter)
void com.android.contacts.list.DefaultContactBrowseListFragment.setSearchMode(boolean)
void com.android.contacts.list.DefaultContactListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.EmailAddressListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.JoinContactListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.JoinContactListFragment.restoreSavedState(Bundle)
void com.android.contacts.list.JoinContactListFragment.setQueryString(String,boolean)
void com.android.contacts.list.LegacyContactListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.LegacyPhoneNumberListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.LegacyPostalAddressListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.PhoneNumberListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.list.PhoneNumberPickerFragment.restoreSavedState(Bundle)
void com.android.contacts.list.PhoneNumberPickerFragment.setSearchMode(boolean)
void com.android.contacts.list.PostalAddressListAdapter.bindView(View,int,Cursor,int)
void com.android.contacts.model.AccountTypeManagerImpl.processBroadcastIntent(Intent)
void com.android.contacts.model.RawContact.setAccount(AccountWithDataSet)
void com.android.contacts.model.RawContactDelta$ValuesDelta.copyStringFrom(RawContactDelta$ValuesDelta,String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.put(String,String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.put(String,byte[])
void com.android.contacts.model.RawContactDelta$ValuesDelta.put(String,int)
void com.android.contacts.model.RawContactDelta$ValuesDelta.put(String,long)
void com.android.contacts.model.RawContactDelta$ValuesDelta.putNull(String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.setDisplayName(String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.setGroupRowId(long)
void com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoneticFamilyName(String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoneticGivenName(String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoneticMiddleName(String)
void com.android.contacts.model.RawContactDelta$ValuesDelta.setPhoto(byte[])
void com.android.contacts.model.RawContactDelta$ValuesDelta.setSuperPrimary(boolean)
void com.android.contacts.model.RawContactDelta$ValuesDelta.writeToParcel(Parcel,int)
void com.android.contacts.model.RawContactDelta.writeToParcel(Parcel,int)
void com.android.contacts.model.RawContactDeltaList.writeToParcel(Parcel,int)
void com.android.contacts.model.RawContactModifier.migrateEvent(RawContactDelta,RawContactDelta,DataKind,Integer)
void com.android.contacts.model.RawContactModifier.migrateGenericWithTypeColumn(RawContactDelta,RawContactDelta,DataKind)
void com.android.contacts.model.RawContactModifier.migratePostal(RawContactDelta,RawContactDelta,DataKind)
void com.android.contacts.model.RawContactModifier.migrateStructuredName(Context,RawContactDelta,RawContactDelta,DataKind)
void com.android.contacts.model.RawContactModifier.parseExtras(Context,AccountType,RawContactDelta,Bundle)
void com.android.contacts.model.account.AccountWithDataSet.writeToParcel(Parcel,int)
void com.android.contacts.model.dataitem.DataItem.setMimeType(String)
void com.android.contacts.model.dataitem.DataItem.setRawContactId(long)
void com.android.contacts.model.dataitem.PhoneDataItem.computeFormattedPhoneNumber(String)
void com.android.contacts.model.dataitem.StructuredNameDataItem.setDisplayName(String)
void com.android.contacts.model.dataitem.StructuredNameDataItem.setPhoneticFamilyName(String)
void com.android.contacts.model.dataitem.StructuredNameDataItem.setPhoneticGivenName(String)
void com.android.contacts.model.dataitem.StructuredNameDataItem.setPhoneticMiddleName(String)
void com.android.contacts.preference.ContactsPreferences.setDisplayOrder(int)
void com.android.contacts.preference.ContactsPreferences.setSortOrder(int)
void com.android.contacts.quickcontact.ActionMultiMap.put(String,Action,boolean)
void com.android.contacts.quickcontact.FloatingChildLayout.setBackground(Drawable)
void com.android.contacts.quickcontact.FloatingChildLayout.setBackgroundColorAlpha(int)
void com.android.contacts.socialwidget.SocialWidgetSettings.setContactUri(Context,int,Uri)
void com.android.contacts.test.InjectedServices.setSystemService(String,Object)
void com.android.contacts.util.AccountFilterUtil.startAccountFilterActivityForResult(Activity,int,ContactListFilter)
void com.android.contacts.util.AccountFilterUtil.startAccountFilterActivityForResult(Fragment,int,ContactListFilter)
void com.android.contacts.util.AccountPromptUtils.launchAccountPrompt(Activity)
void com.android.contacts.util.AccountSelectionUtil.doImportFromSdCard(Context,AccountWithDataSet)
void com.android.contacts.util.AccountSelectionUtil.doImportFromSim(Context,AccountWithDataSet)
void com.android.contacts.util.DialogManager.showDialogInView(View,Bundle)
void com.android.contacts.util.ExpirableCache.put(Object,Object)
void com.android.contacts.util.ImageViewDrawableSetter.setupContactPhoto(Contact,ImageView)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.sendFetchVoicemailRequest(Uri)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setClipPosition(int,int)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setFetchContentTimeout()
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setIsBuffering()
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setIsFetchingContent()
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setPositionSeekListener(SeekBar$OnSeekBarChangeListener)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setRateDecreaseButtonListener(View$OnClickListener)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setRateDisplay(float,int)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setRateIncreaseButtonListener(View$OnClickListener)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setSpeakerPhoneOn(boolean)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setSpeakerphoneListener(View$OnClickListener)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setStartStopListener(View$OnClickListener)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl.setVolumeControlStream(int)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController.setPermanentText(String)
void com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController.setTemporaryText(String,long,TimeUnit)
void com.android.contacts.widget.AlphaTouchInterceptorOverlay.setOverlayClickable(boolean)
void com.android.contacts.widget.FrameLayoutWithOverlay.setAlphaLayer(View)
void com.android.contacts.widget.FrameLayoutWithOverlay.setAlphaLayerValue(float)
void com.android.contacts.widget.FrameLayoutWithOverlay.setOverlayClickable(boolean)
void com.android.contacts.widget.PinnedHeaderListView.setFadingHeader(int,int,boolean)
void com.android.contacts.widget.PinnedHeaderListView.setHeaderInvisible(int,boolean)
void com.android.contacts.widget.TransitionAnimationView.setMaskVisibility(boolean)
void com.android.deskclock.Alarm$DaysOfWeek.set(Alarm$DaysOfWeek)
void com.android.deskclock.Alarm$DaysOfWeek.set(int,boolean)
void com.android.deskclock.Alarm$DaysOfWeek.setDayOfWeek(int,boolean)
void com.android.deskclock.Alarm.writeToParcel(Parcel,int)
void com.android.deskclock.AlarmClock$AlarmItemAdapter.bindView(View,Context,Cursor)
void com.android.deskclock.AlarmClock$AlarmItemAdapter.setNewAlarm(int)
void com.android.deskclock.AlarmClock.onActivityResult(int,int,Intent)
void com.android.deskclock.Alarms.enableAlarm(Context,int,boolean)
void com.android.deskclock.Alarms.setNextAlert(Context)
void com.android.deskclock.DeskClock$TabsAdapter.notifySelectedPage(int)
void com.android.deskclock.DeskClock$TabsAdapter.onPageSelected(int)
void com.android.deskclock.DigitalClock$AmPm.setIsMorning(boolean)
void com.android.deskclock.DigitalClock$AmPm.setShowAmPm(boolean)
void com.android.deskclock.HandleSetAlarm.onCreate(Bundle)
void com.android.deskclock.RepeatPreference.setDaysOfWeek(Alarm$DaysOfWeek)
void com.android.deskclock.TimePicker$SavedState.writeToParcel(Parcel,int)
void com.android.deskclock.TimerSetupView.restoreEntryState(Bundle,String)
void com.android.deskclock.TimerSetupView.saveEntryState(Bundle,String)
void com.android.deskclock.TimerSetupView.setLeftRightEnabled(boolean)
void com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter.setLapTimes(long[])
void com.android.deskclock.timer.CountingTimerView$SignedTime.updateWidth(String)
void com.android.deskclock.timer.CountingTimerView.setTextColor(int)
void com.android.deskclock.timer.CountingTimerView.setTime(long,boolean,boolean)
void com.android.deskclock.timer.TimerFragment.onSaveInstanceState(Bundle)
void com.android.deskclock.timer.TimerFragment.setLabel(TimerObj,String)
void com.android.deskclock.timer.TimerListItem.setCircleBlink(boolean)
void com.android.deskclock.timer.TimerListItem.setTextBlink(boolean)
void com.android.deskclock.timer.TimerListItem.setTime(long,boolean)
void com.android.deskclock.timer.TimerReceiver.onReceive(Context,Intent)
void com.android.deskclock.timer.TimerReceiver.showExpiredAlarmNotification(Context,TimerObj)
void com.android.deskclock.timer.TimerView.setTime(int,int,int,int,int)
void com.android.deskclock.widget.multiwaveview.GlowPadView.setEnableTarget(int,boolean)
void com.android.deskclock.widget.multiwaveview.GlowPadView.setVibrateEnabled(boolean)
void com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setAlpha(int)
void com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setColorFilter(ColorFilter)
void com.android.deskclock.widget.multiwaveview.TargetDrawable.setDrawable(Resources,int)
void com.android.deskclock.widget.multiwaveview.TargetDrawable.setState(int[])
void com.android.deskclock.worldclock.Cities.saveCitiesToSharedPrefs(SharedPreferences,HashMap)
void com.android.deskclock.worldclock.CitiesActivity$CityAdapter.set24HoursMode(Context)
void com.android.deskclock.worldclock.CitiesActivity.onCheckedChanged(CompoundButton,boolean)
void com.android.deskclock.worldclock.WorldClockAdapter.loadCitiesDb(Context)
void com.android.email.Controller$LegacyListener.listFoldersFailed(long,String)
void com.android.email.Controller$LegacyListener.sendPendingMessagesCompleted(long)
void com.android.email.Controller$LegacyListener.sendPendingMessagesFailed(long,long,Exception)
void com.android.email.Controller$LegacyListener.sendPendingMessagesStarted(long,long)
void com.android.email.Controller$LegacyListener.synchronizeMailboxStarted(long,long)
void com.android.email.Controller$ServiceCallback.sendMessageStatus(long,String,int,int)
void com.android.email.Controller$ServiceCallback.syncMailboxListStatus(long,int,int)
void com.android.email.Controller$ServiceCallback.syncMailboxStatus(long,int,int)
void com.android.email.Controller.loadAttachment(long,long,long)
void com.android.email.Controller.sendMeetingResponse(long,int)
void com.android.email.Controller.sendMessage(EmailContent$Message)
void com.android.email.Controller.sendPendingMessages(long)
void com.android.email.Controller.setMessageAnsweredOrForwarded(long,int)
void com.android.email.Controller.setMessageFavoriteSync(long,boolean)
void com.android.email.Controller.setMessageReadSync(long,boolean)
void com.android.email.Controller.updateMailbox(long,long,boolean)
void com.android.email.ControllerResultUiThreadWrapper.sendMailCallback(MessagingException,long,long,int)
void com.android.email.ControllerResultUiThreadWrapper.setRegistered(boolean)
void com.android.email.Email.enableStrictMode(boolean)
void com.android.email.GroupMessagingListener.addListener(MessagingListener)
void com.android.email.GroupMessagingListener.sendPendingMessagesCompleted(long)
void com.android.email.GroupMessagingListener.sendPendingMessagesFailed(long,long,Exception)
void com.android.email.GroupMessagingListener.sendPendingMessagesStarted(long,long)
void com.android.email.LegacyConversions.saveAttachmentBody(Context,Part,EmailContent$Attachment,long)
void com.android.email.MessageListContext.writeToParcel(Parcel,int)
void com.android.email.MessagingController$4.messageRetrieved(Message)
void com.android.email.MessagingController$8.onMessageUidChange(Message,String)
void com.android.email.MessagingController$9.onMessageUidChange(Message,String)
void com.android.email.MessagingController.checkMail(long,long,MessagingListener)
void com.android.email.MessagingController.copyOneMessageToProvider(Message,EmailContent$Message,int,Context)
void com.android.email.MessagingController.listFolders(long,MessagingListener)
void com.android.email.MessagingController.loadAttachment(long,long,long,long,MessagingListener,boolean)
void com.android.email.MessagingController.loadMessageForView(long,MessagingListener)
void com.android.email.MessagingController.processPendingActions(long)
void com.android.email.MessagingController.sendPendingMessages(Account,long,MessagingListener)
void com.android.email.MessagingController.sendPendingMessagesSynchronous(Account,long)
void com.android.email.MessagingListener.sendPendingMessagesCompleted(long)
void com.android.email.MessagingListener.sendPendingMessagesFailed(long,long,Exception)
void com.android.email.MessagingListener.sendPendingMessagesStarted(long,long)
void com.android.email.NotificationController.setupSoundAndVibration(Notification$Builder,Account)
void com.android.email.NotificationController.showDownloadForwardFailedNotification(EmailContent$Attachment)
void com.android.email.NotificationController.showLoginFailedNotification(long)
void com.android.email.NotificationController.showPasswordExpiredNotification(long)
void com.android.email.NotificationController.showPasswordExpiringNotification(long)
void com.android.email.Preferences.setAutoAdvanceDirection(int)
void com.android.email.Preferences.setEnableDebugLogging(boolean)
void com.android.email.Preferences.setEnableExchangeFileLogging(boolean)
void com.android.email.Preferences.setEnableExchangeLogging(boolean)
void com.android.email.Preferences.setEnableStrictMode(boolean)
void com.android.email.Preferences.setForceOneMinuteRefresh(boolean)
void com.android.email.Preferences.setHasShownRequireManualSync(Context,Account,boolean)
void com.android.email.Preferences.setInhibitGraphicsAcceleration(boolean)
void com.android.email.Preferences.setLastUsedAccountId(long)
void com.android.email.Preferences.setOneTimeInitializationProgress(int)
void com.android.email.Preferences.setSenderAsTrusted(String)
void com.android.email.Preferences.setTextZoom(int)
void com.android.email.RecipientAdapter.setAccount(Account)
void com.android.email.RefreshManager$ControllerResult.sendMailCallback(MessagingException,long,long,int)
void com.android.email.RefreshManager$ControllerResult.serviceCheckMailCallback(MessagingException,long,long,int,long)
void com.android.email.RefreshManager$ControllerResult.updateMailboxCallback(MessagingException,long,long,int,int,ArrayList)
void com.android.email.SecurityPolicy.policiesRequired(long)
void com.android.email.SecurityPolicy.setAccountHoldFlag(Context,Account,boolean)
void com.android.email.SecurityPolicy.setAccountHoldFlag(Context,long,boolean)
void com.android.email.SecurityPolicy.setAccountPolicy(Context,Account,Policy,String)
void com.android.email.SecurityPolicy.setAccountPolicy(long,Policy,String)
void com.android.email.activity.EmailActivity$ControllerResult.sendMailCallback(MessagingException,long,long,int)
void com.android.email.activity.MailboxFragmentAdapter.bindView(View,Context,Cursor)
void com.android.email.activity.MailboxListFragment.onCreate(Bundle)
void com.android.email.activity.MailboxListItem.setBackgroundDrawable(Drawable)
void com.android.email.activity.MailboxListItem.setDropTargetBackground(boolean,long)
void com.android.email.activity.MessageCompose.setFocusShifter(int,int)
void com.android.email.activity.MessageCompose.setIntent(Intent)
void com.android.email.activity.MessageCompose.setMessageContentSelection(String)
void com.android.email.activity.MessageListFragment$1.setField(long,boolean)
void com.android.email.activity.MessageListFragment$2.setField(long,boolean)
void com.android.email.activity.MessageListFragment.onActivityCreated(Bundle)
void com.android.email.activity.MessageListFragment.setLayout(ThreePaneLayout)
void com.android.email.activity.MessageListItem.setTimestamp(long)
void com.android.email.activity.MessageViewFragment.onMessageShown(long,Mailbox)
void com.android.email.activity.MessageViewFragmentBase.onCreate(Bundle)
void com.android.email.activity.MessagesAdapter.toggleSelected(MessageListItem)
void com.android.email.activity.ThreePaneLayout$SavedState.writeToParcel(Parcel,int)
void com.android.email.activity.ThreePaneLayout.setMessageListWidthAnim(int)
void com.android.email.activity.UIControllerBase.onSearchSubmit(String)
void com.android.email.activity.UIControllerOnePane.onSaveInstanceState(Bundle)
void com.android.email.activity.UIControllerTwoPane.openInternal(MessageListContext,long)
void com.android.email.activity.UiUtilities.setVisibilitySafe(Activity,int,int)
void com.android.email.activity.UiUtilities.setVisibilitySafe(View,int)
void com.android.email.activity.UiUtilities.setVisibilitySafe(View,int,int)
void com.android.email.activity.Welcome.startActivity(Intent)
void com.android.email.activity.setup.AccountSettings$AccountServerSettingsFragmentCallback.onProceedNext(int,AccountServerBaseFragment)
void com.android.email.activity.setup.AccountSettings.onEditQuickResponses(Account)
void com.android.email.activity.setup.AccountSettingsUtils.commitSettings(Context,Account)
void com.android.email.activity.setup.AccountSetupActivity.onCreate(Bundle)
void com.android.email.activity.setup.AccountSetupActivity.onSaveInstanceState(Bundle)
void com.android.email.activity.setup.DebugFragment.onCheckedChanged(CompoundButton,boolean)
void com.android.email.activity.setup.MailboxSettings.setupLookbackPreferenceOptions(Context,ListPreference,Account)
void com.android.email.activity.setup.MailboxSettings.start(Activity,long)
void com.android.email.mail.store.ImapFolder.copyMessages(Message[],Folder,Folder$MessageUpdateCallbacks)
void com.android.email.mail.store.ImapFolder.fetchInternal(Message[],FetchProfile,Folder$MessageRetrievalListener)
void com.android.email.mail.store.ImapFolder.save(Context)
void com.android.email.mail.store.ImapFolder.setFlags(Message[],Flag[],boolean)
void com.android.email.mail.store.ImapStore$ImapMessage.setFlag(Flag,boolean)
void com.android.email.mail.store.ImapStore$ImapMessage.setFlagInternal(Flag,boolean)
void com.android.email.mail.store.ImapStore$ImapMessage.setSize(int)
void com.android.email.mail.store.Pop3Store$Pop3Folder.setFlags(Message[],Flag[],boolean)
void com.android.email.mail.store.Pop3Store$Pop3Message.setFlag(Flag,boolean)
void com.android.email.mail.store.Pop3Store$Pop3Message.setSize(int)
void com.android.email.mail.transport.EOLConvertingOutputStream.write(int)
void com.android.email.mail.transport.MailTransport.setSoTimeout(int)
void com.android.email.mail.transport.MailTransport.writeLine(String,String)
void com.android.email.provider.ContentCache$CounterMap.add(Object)
void com.android.email.provider.EmailProvider.restoreIfNeeded(Context,SQLiteDatabase)
void com.android.email.provider.WidgetProvider$WidgetService.dump(FileDescriptor,PrintWriter,String[])
void com.android.email.service.AttachmentDownloadService$DownloadSet.endDownload(long,int)
void com.android.email.service.AttachmentDownloadService$ServiceCallback.sendMessageStatus(long,String,int,int)
void com.android.email.service.AttachmentDownloadService.addServiceIntentForTest(long,Intent)
void com.android.email.service.AttachmentDownloadService.dump(FileDescriptor,PrintWriter,String[])
void com.android.email.service.EmailBroadcastProcessorService.processBroadcastIntent(Context,Intent)
void com.android.email.service.EmailBroadcastProcessorService.processDevicePolicyMessage(Context,int)
void com.android.email.service.EmailBroadcastProcessorService.setImapDeletePolicy(Context)
void com.android.email.service.EmailServiceUtils$NullEmailService.sendMail(long)
void com.android.email.service.EmailServiceUtils$NullEmailService.sendMeetingResponse(long,int)
void com.android.email.service.EmailServiceUtils$NullEmailService.setLogging(int)
void com.android.email.service.EmailServiceUtils.startService(Context,String)
void com.android.email.service.MailService$ControllerResults.updateMailboxCallback(MessagingException,long,long,int,int,ArrayList)
void com.android.email.service.MailService.actionSendPendingMail(Context,long)
void com.android.email.service.MailService.setupAccountManagerAccount(Context,Account,boolean,boolean,boolean,AccountManagerCallback)
void com.android.email.service.MailService.setupSyncReportsLocked(long,Context)
void com.android.email.service.PolicyService$1.setAccountHoldFlag(long,boolean)
void com.android.email.service.PolicyService$1.setAccountPolicy(long,Policy,String)
void com.android.email.view.CertificateSelector$SavedState.writeToParcel(Parcel,int)
void com.android.email.widget.WidgetManager.dump(FileDescriptor,PrintWriter,String[])
void com.android.emailcommon.internet.MimeBodyPart.setHeader(String,String)
void com.android.emailcommon.internet.MimeHeader.setHeader(String,String)
void com.android.emailcommon.internet.MimeMessage.setHeader(String,String)
void com.android.emailcommon.internet.Rfc822Output.writeTo(Context,long,OutputStream,boolean,boolean)
void com.android.emailcommon.mail.Address.setAddress(String)
void com.android.emailcommon.mail.PackedString$Builder.put(String,String)
void com.android.emailcommon.provider.Account.refresh(Context)
void com.android.emailcommon.provider.Account.writeToParcel(Parcel,int)
void com.android.emailcommon.provider.Mailbox.writeToParcel(Parcel,int)
void com.android.emailcommon.provider.Policy.setAttachmentFlagsForNewPolicy(Context,Account,Policy)
void com.android.emailcommon.service.AccountServiceProxy.notifyLoginFailed(long)
void com.android.emailcommon.service.AccountServiceProxy.notifyLoginSucceeded(long)
void com.android.emailcommon.service.EmailServiceProxy.sendMail(long)
void com.android.emailcommon.service.EmailServiceProxy.sendMeetingResponse(long,int)
void com.android.emailcommon.service.EmailServiceProxy.setLogging(int)
void com.android.emailcommon.service.IAccountService$Stub$Proxy.notifyLoginFailed(long)
void com.android.emailcommon.service.IAccountService$Stub$Proxy.notifyLoginSucceeded(long)
void com.android.emailcommon.service.IAccountService$Stub$Proxy.reconcileAccounts(String,String)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.deleteAccountPIMData(long)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.hostChanged(long)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.loadAttachment(long,boolean)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.loadMore(long)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.sendMail(long)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.sendMeetingResponse(long,int)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.setCallback(IEmailServiceCallback)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.setLogging(int)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.startSync(long,boolean)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.stopSync(long)
void com.android.emailcommon.service.IEmailService$Stub$Proxy.updateFolderList(long)
void com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.loadAttachmentStatus(long,long,int,int)
void com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.loadMessageStatus(long,int,int)
void com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.sendMessageStatus(long,String,int,int)
void com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.syncMailboxListStatus(long,int,int)
void com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy.syncMailboxStatus(long,int,int)
void com.android.emailcommon.service.IPolicyService$Stub$Proxy.setAccountHoldFlag(long,boolean)
void com.android.emailcommon.service.IPolicyService$Stub$Proxy.setAccountPolicy(long,Policy,String)
void com.android.emailcommon.service.PolicyServiceProxy.setAccountHoldFlag(Context,Account,boolean)
void com.android.emailcommon.service.PolicyServiceProxy.setAccountHoldFlag(long,boolean)
void com.android.emailcommon.service.PolicyServiceProxy.setAccountPolicy(Context,long,Policy,String)
void com.android.emailcommon.service.PolicyServiceProxy.setAccountPolicy(long,Policy,String)
void com.android.ex.variablespeed.MediaPlayerDataSource.setAsSourceFor(MediaPlayer)
void com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy.setAudioStreamType(int)
void com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy.setVariableSpeed(float)
void com.android.exchange.AbstractSyncService.<init>(Context,Mailbox)
void com.android.exchange.EasOutboxService$SendMailEntity.writeTo(OutputStream)
void com.android.exchange.EasOutboxService.sendMessage(Context,long,EmailContent$Message)
void com.android.exchange.EasSyncService.messageMoveRequest(MessageMoveRequest)
void com.android.exchange.EasSyncService.sendMeetingResponse(MeetingResponseRequest)
void com.android.exchange.EasSyncService.setConnectionParameters(HostAuth)
void com.android.exchange.EasSyncService.setHeaders(HttpRequestBase,boolean)
void com.android.exchange.EasSyncService.setupProtocolVersion(EasSyncService,Header)
void com.android.exchange.EasSyncService.sync(AbstractSyncAdapter)
void com.android.exchange.ExchangeService$1.sendMessageStatus(long,String,int,int)
void com.android.exchange.ExchangeService$2.loadAttachment(long,boolean)
void com.android.exchange.ExchangeService$2.sendMeetingResponse(long,int)
void com.android.exchange.ExchangeService$2.setLogging(int)
void com.android.exchange.ExchangeService.done(AbstractSyncService)
void com.android.exchange.ExchangeService.sendMessageRequest(Request)
void com.android.exchange.ExchangeService.serviceRequest(long,long,int)
void com.android.exchange.ExchangeService.setWatchdogAlarm(long,long)
void com.android.exchange.ExchangeService.startManualSync(long,int,Request)
void com.android.exchange.adapter.AbstractSyncAdapter.setPimSyncOptions(Double,String,Serializer)
void com.android.exchange.adapter.AccountSyncAdapter.sendSyncOptions(Double,Serializer,boolean)
void com.android.exchange.adapter.AttachmentLoader.readChunked(InputStream,OutputStream,int)
void com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations.updatedAttendee(ContentValues,long)
void com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser.addEvent(CalendarSyncAdapter$CalendarOperations,String,boolean)
void com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser.setTimeRelatedValues(ContentValues,long,long,int)
void com.android.exchange.adapter.CalendarSyncAdapter.sendSyncOptions(Double,Serializer,boolean)
void com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations.newContact(String)
void com.android.exchange.adapter.ContactsSyncAdapter.sendSyncOptions(Double,Serializer,boolean)
void com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser.addData(EmailContent$Message,int)
void com.android.exchange.adapter.EmailSyncAdapter.sendSyncOptions(Double,Serializer,boolean)
void com.android.exchange.adapter.Serializer.writeLiteralString(OutputStream,String)
void com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.addEmailAddress(MatrixCursor,ExchangeDirectoryProvider$GalProjection,long,String,String,String,String)
void com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.addNameRow(MatrixCursor,ExchangeDirectoryProvider$GalProjection,long,String,String,String,String,String)
void com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.addPhoneRow(MatrixCursor,ExchangeDirectoryProvider$GalProjection,long,String,String,String,int,String)
void com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow.put(String,Object)
void com.android.exchange.provider.GalResult$GalData.put(String,String)
void com.android.exchange.provider.MailboxUtilities.checkMailboxConsistency(Context,long)
void com.android.exchange.provider.MailboxUtilities.setFlagsAndChildrensParentKey(Context,Cursor,String)
void com.android.exchange.provider.MailboxUtilities.setFlagsAndChildrensParentKey(Context,String,String)
void com.android.exchange.utility.SimpleIcsWriter.writeLine(String)
void com.android.exchange.utility.SimpleIcsWriter.writeTag(String,String)
void com.android.gallery3d.app.AbstractGalleryActivity.setContentView(int)
void com.android.gallery3d.app.AlbumPage.doCluster(int)
void com.android.gallery3d.app.AlbumSetPage.doCluster(int)
void com.android.gallery3d.app.Bookmarker.setBookmark(Uri,int,int)
void com.android.gallery3d.app.CommonControllerOverlay.setTimes(int,int,int,int)
void com.android.gallery3d.app.FilterUtils.setupMenuItems(GalleryActionBar,Path,boolean)
void com.android.gallery3d.app.Gallery.onCreate(Bundle)
void com.android.gallery3d.app.GalleryActionBar.setDisplayOptions(boolean,boolean)
void com.android.gallery3d.app.GalleryActionBar.setSubtitle(String)
void com.android.gallery3d.app.GalleryActionBar.setTitle(String)
void com.android.gallery3d.app.GalleryActionBar.setTitle(int)
void com.android.gallery3d.app.PackagesMonitor.onReceive(Context,Intent)
void com.android.gallery3d.app.PhotoPage.onCreate(Bundle,Bundle)
void com.android.gallery3d.app.PhotoPage.playVideo(Activity,Uri,String)
void com.android.gallery3d.app.PhotoPage.setSwipingEnabled(boolean)
void com.android.gallery3d.app.PhotoPageProgressBar.setProgress(int)
void com.android.gallery3d.app.SinglePhotoDataAdapter.setCurrentPhoto(Path,int)
void com.android.gallery3d.app.SinglePhotoDataAdapter.setFocusHintDirection(int)
void com.android.gallery3d.app.SinglePhotoDataAdapter.setFocusHintPath(Path)
void com.android.gallery3d.app.SinglePhotoDataAdapter.setNeedFullImage(boolean)
void com.android.gallery3d.app.StateManager.notifyActivityResult(int,int,Intent)
void com.android.gallery3d.app.StateManager.restoreFromState(Bundle)
void com.android.gallery3d.app.StateManager.startStateForResult(Class,int,Bundle)
void com.android.gallery3d.app.StitchingProgressManager$AddItemCallback.onStitchingQueued(String,Uri)
void com.android.gallery3d.app.StitchingProgressManager$UpdateProgressCallback.onProgress(String,Uri,int)
void com.android.gallery3d.app.TransitionStore.put(Object,Object)
void com.android.gallery3d.app.TransitionStore.putIfNotPresent(Object,Object)
void com.android.gallery3d.app.TrimControllerOverlay.setTimes(int,int,int,int)
void com.android.gallery3d.common.EntrySchema.objectToValues(Entry,ContentValues)
void com.android.gallery3d.common.OverScroller.startScroll(int,int,int,int,int)
void com.android.gallery3d.data.DataManager$NotifyBroker.registerNotifier(ChangeNotifier)
void com.android.gallery3d.data.DataManager.addSource(MediaSource)
void com.android.gallery3d.data.DataManager.mapMediaItems(ArrayList,MediaSet$ItemConsumer,int)
void com.android.gallery3d.data.DataManager.registerChangeNotifier(Uri,ChangeNotifier)
void com.android.gallery3d.data.DownloadCache$DownloadTask.onFutureDone(Future)
void com.android.gallery3d.data.DownloadUtils.dump(ThreadPool$JobContext,InputStream,OutputStream)
void com.android.gallery3d.data.FaceClustering$1.consume(int,MediaItem)
void com.android.gallery3d.data.FilterDeleteSet.addDeletion(Path,int)
void com.android.gallery3d.data.ImageCacheService.putImageData(Path,int,byte[])
void com.android.gallery3d.data.LocalMediaItem.getLatLong(double[])
void com.android.gallery3d.data.MediaDetails.addDetail(int,Object)
void com.android.gallery3d.data.MediaDetails.setUnit(int,int)
void com.android.gallery3d.data.MediaItem.getLatLong(double[])
void com.android.gallery3d.data.Path.setObject(MediaObject)
void com.android.gallery3d.data.TagClustering$1.consume(int,MediaItem)
void com.android.gallery3d.exif.CountedDataInputStream.setByteOrder(ByteOrder)
void com.android.gallery3d.exif.ExifData.setStripBytes(int,byte[])
void com.android.gallery3d.exif.ExifOutputStream.write(byte[])
void com.android.gallery3d.exif.ExifOutputStream.write(byte[],int,int)
void com.android.gallery3d.exif.ExifParser.registerForTagValue(ExifTag)
void com.android.gallery3d.exif.ExifTag.setTimeValue(long)
void com.android.gallery3d.exif.ExifTag.setValue(Rational)
void com.android.gallery3d.exif.ExifTag.setValue(byte[])
void com.android.gallery3d.exif.ExifTag.setValue(int)
void com.android.gallery3d.exif.ExifTag.setValue(int[])
void com.android.gallery3d.exif.IfdData.setTag(ExifTag)
void com.android.gallery3d.exif.OrderedDataOutputStream.setByteOrder(ByteOrder)
void com.android.gallery3d.exif.OrderedDataOutputStream.writeInt(int)
void com.android.gallery3d.exif.OrderedDataOutputStream.writeRational(Rational)
void com.android.gallery3d.exif.OrderedDataOutputStream.writeShort(short)
void com.android.gallery3d.filtershow.FilterShowActivity.onActivityResult(int,int,Intent)
void com.android.gallery3d.filtershow.PanelController$UtilityPanel.setAspectButton(FramedTextButton,int)
void com.android.gallery3d.filtershow.PanelController.addComponent(View,View)
void com.android.gallery3d.filtershow.PanelController.addPanel(View,View,int)
void com.android.gallery3d.filtershow.PanelController.addView(View)
void com.android.gallery3d.filtershow.PanelController.setCurrentPanel(View)
void com.android.gallery3d.filtershow.PanelController.setUtilityPanel(Context,View,View,View,View)
void com.android.gallery3d.filtershow.filters.ColorSpaceMatrix.setHue(float)
void com.android.gallery3d.filtershow.filters.ImageFilterCurves.setSpline(Spline,int)
void com.android.gallery3d.filtershow.filters.ImageFilterRS.setRenderScriptContext(Activity)
void com.android.gallery3d.filtershow.filters.ScriptC_convolve3x3.bind_gPixels(Allocation)
void com.android.gallery3d.filtershow.imageshow.GeometryMetadata.set(GeometryMetadata)
void com.android.gallery3d.filtershow.imageshow.GeometryMetadata.setCropBounds(RectF)
void com.android.gallery3d.filtershow.imageshow.GeometryMetadata.setPhotoBounds(RectF)
void com.android.gallery3d.filtershow.imageshow.ImageCrop.setActionDown(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageCrop.setActionMove(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageCrop.setCropBounds(RectF)
void com.android.gallery3d.filtershow.imageshow.ImageFlip.setActionDown(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageFlip.setActionMove(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalCropBounds(RectF)
void com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalFlip(GeometryMetadata$FLIP)
void com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalRotation(float)
void com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalScale(float)
void com.android.gallery3d.filtershow.imageshow.ImageGeometry.setLocalStraighten(float)
void com.android.gallery3d.filtershow.imageshow.ImageRotate.setActionDown(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageRotate.setActionMove(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageShow.onNewValue(int)
void com.android.gallery3d.filtershow.imageshow.ImageShow.saveImage(FilterShowActivity,File)
void com.android.gallery3d.filtershow.imageshow.ImageShow.setImagePreset(ImagePreset)
void com.android.gallery3d.filtershow.imageshow.ImageShow.setOriginalText(String)
void com.android.gallery3d.filtershow.imageshow.ImageShow.setupGestureDetector(Context)
void com.android.gallery3d.filtershow.imageshow.ImageSlave.setCurrentFilter(ImageFilter)
void com.android.gallery3d.filtershow.imageshow.ImageSlave.setImagePreset(ImagePreset,boolean)
void com.android.gallery3d.filtershow.imageshow.ImageSlave.setPanelController(PanelController)
void com.android.gallery3d.filtershow.imageshow.ImageSlave.updateImagePresets(boolean)
void com.android.gallery3d.filtershow.imageshow.ImageStraighten.setActionDown(float,float)
void com.android.gallery3d.filtershow.imageshow.ImageStraighten.setActionMove(float,float)
void com.android.gallery3d.filtershow.presets.ImagePreset.setGeometry(GeometryMetadata)
void com.android.gallery3d.filtershow.tools.SaveCopyTask.saveBitmap(Bitmap,File,Object)
void com.android.gallery3d.filtershow.ui.FramedTextButton.setTextFrom(int)
void com.android.gallery3d.filtershow.ui.ImageCurves.setChannel(int)
void com.android.gallery3d.settings.GallerySettings.addAccount(Activity,boolean)
void com.android.gallery3d.ui.ActionModeHandler.setTitle(String)
void com.android.gallery3d.ui.AlbumSetSlotRenderer.setModel(AlbumSetDataLoader)
void com.android.gallery3d.ui.AlbumSlotRenderer.setModel(AlbumDataLoader)
void com.android.gallery3d.ui.BitmapTexture.setOpaque(boolean)
void com.android.gallery3d.ui.CropView$HighlightRectangle.setRectangle(RectF)
void com.android.gallery3d.ui.EdgeEffect$Drawable.setBounds(int,int,int,int)
void com.android.gallery3d.ui.GLCanvasImpl$ConfigState.restore(GLCanvasImpl)
void com.android.gallery3d.ui.GLCanvasImpl$GLState.setColorMode(int,float)
void com.android.gallery3d.ui.GLCanvasImpl.drawMixed(BasicTexture,int,float,RectF,RectF)
void com.android.gallery3d.ui.GLCanvasImpl.drawTexture(BasicTexture,RectF,RectF)
void com.android.gallery3d.ui.GLCanvasImpl.drawTexture(BasicTexture,float[],int,int,int,int)
void com.android.gallery3d.ui.GLRootView.setLightsOutMode(boolean)
void com.android.gallery3d.ui.GLView.setVisibility(int)
void com.android.gallery3d.ui.MenuExecutor.startAction(int,int,MenuExecutor$ProgressListener)
void com.android.gallery3d.ui.PhotoView$FullPicture.setScreenNail(ScreenNail)
void com.android.gallery3d.ui.PhotoView$MyGestureListener.setSwipingEnabled(boolean)
void com.android.gallery3d.ui.PhotoView.notifyDataChange(int[],int,int)
void com.android.gallery3d.ui.PhotoView.notifyImageChange(int)
void com.android.gallery3d.ui.PhotoView.setSwipingEnabled(boolean)
void com.android.gallery3d.ui.PositionController.moveBox(int[],boolean,boolean,boolean,PhotoView$Size[])
void com.android.gallery3d.ui.PositionController.setConstrainedFrame(Rect)
void com.android.gallery3d.ui.PositionController.setImageSize(int,PhotoView$Size,Rect)
void com.android.gallery3d.ui.PositionController.setViewSize(int,int)
void com.android.gallery3d.ui.PositionController.zoomIn(float,float,float)
void com.android.gallery3d.ui.PreparePageFadeoutTexture.prepareFadeOutTexture(AbstractGalleryActivity,GLView)
void com.android.gallery3d.ui.RelativePosition.setReferencePosition(int,int)
void com.android.gallery3d.ui.ResourceTexture.setOpaque(boolean)
void com.android.gallery3d.ui.ScrollerHelper.setPosition(int)
void com.android.gallery3d.ui.SlotView.setCenterIndex(int)
void com.android.gallery3d.ui.SlotView.setScrollPosition(int)
void com.android.gallery3d.ui.SlotView.setSlotSpec(SlotView$Spec)
void com.android.gallery3d.ui.TileImageViewAdapter.setRegionDecoder(BitmapRegionDecoder)
void com.android.gallery3d.ui.UndoBarView.setVisibility(int)
void com.android.gallery3d.util.InterruptableOutputStream.write(byte[],int,int)
void com.android.gallery3d.util.InterruptableOutputStream.write(int)
void com.android.gallery3d.util.LightCycleHelper$PanoramaViewHelper.onPanoramaInfoLoaded(ConnectionResult,int,Intent)
void com.android.gallery3d.util.ReverseGeocoder.writeUTF(DataOutputStream,String)
void com.android.htmlviewer.HTMLViewerActivity.onCreate(Bundle)
void com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy.setKeyboard(Keyboard)
void com.android.inputmethod.compat.InputMethodManagerCompatWrapper.setInputMethodAndSubtype(IBinder,String,InputMethodSubtype)
void com.android.inputmethod.keyboard.KeyboardSwitcher.startLongPressTimer(int)
void com.android.inputmethod.keyboard.KeyboardView.setGesturePreviewMode(boolean,boolean)
void com.android.inputmethod.keyboard.MainKeyboardView$KeyTimerHandler.startKeyRepeatTimer(PointerTracker)
void com.android.inputmethod.keyboard.MainKeyboardView.setGestureHandlingEnabledByUser(boolean)
void com.android.inputmethod.keyboard.MainKeyboardView.setKeyboard(Keyboard)
void com.android.inputmethod.keyboard.MainKeyboardView.setMainDictionaryAvailability(boolean)
void com.android.inputmethod.keyboard.MoreKeysKeyboardView.setKeyPreviewPopupEnabled(boolean,int)
void com.android.inputmethod.keyboard.MoreKeysKeyboardView.setKeyboard(Keyboard)
void com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector.setKeyboardGeometry(int,int)
void com.android.inputmethod.keyboard.PointerTracker.setKeyDetector(KeyDetector)
void com.android.inputmethod.keyboard.internal.AlphabetShiftState.setShiftLocked(boolean)
void com.android.inputmethod.keyboard.internal.AlphabetShiftState.setShifted(boolean)
void com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints.setKeyboardGeometry(int)
void com.android.inputmethod.keyboard.internal.KeyStylesSet.parseKeyStyleAttributes(TypedArray,TypedArray,XmlPullParser)
void com.android.inputmethod.keyboard.internal.KeyboardCodesSet.setLanguage(String)
void com.android.inputmethod.keyboard.internal.KeyboardTextsSet.loadStringResourcesInternal(Context,String[],int)
void com.android.inputmethod.keyboard.internal.KeyboardTextsSet.setLanguage(String)
void com.android.inputmethod.keyboard.internal.PreviewPlacerView.invalidatePointer(PointerTracker,boolean)
void com.android.inputmethod.latin.ExpandableBinaryDictionary.setBigram(String,String,int)
void com.android.inputmethod.latin.ExpandableBinaryDictionary.setRequiresReload(boolean)
void com.android.inputmethod.latin.ImfUtils.setAdditionalInputMethodSubtypes(Context,InputMethodSubtype[])
void com.android.inputmethod.latin.InputPointers.set(InputPointers)
void com.android.inputmethod.latin.LatinIME.dump(FileDescriptor,PrintWriter,String[])
void com.android.inputmethod.latin.LatinIME.setCandidatesView(View)
void com.android.inputmethod.latin.LatinIME.setInputView(View)
void com.android.inputmethod.latin.LatinImeLogger.logOnManualSuggestion(String,String,int,SuggestedWords)
void com.android.inputmethod.latin.LatinImeLogger.onAddSuggestedWord(String,String)
void com.android.inputmethod.latin.LatinImeLogger.onStartInputView(EditorInfo)
void com.android.inputmethod.latin.ResizableIntArray.set(ResizableIntArray)
void com.android.inputmethod.latin.RichInputConnection.performEditorAction(int)
void com.android.inputmethod.latin.RichInputConnection.sendKeyEvent(KeyEvent)
void com.android.inputmethod.latin.SettingsValues.setLastUserHistoryWriteTime(SharedPreferences,String)
void com.android.inputmethod.latin.SubtypeLocale.init(Context)
void com.android.inputmethod.latin.Suggest.setUserDictionary(UserBinaryDictionary)
void com.android.inputmethod.latin.Suggest.setUserHistoryDictionary(UserHistoryDictionary)
void com.android.inputmethod.latin.UserBinaryDictionary.addWordToUserDictionary(String,int)
void com.android.inputmethod.latin.UserHistoryDictIOUtils.writeDictionaryBinary(OutputStream,UserHistoryDictIOUtils$BigramDictionaryInterface,UserHistoryDictionaryBigramList,FormatSpec$FormatOptions)
void com.android.inputmethod.latin.UserHistoryDictionary$1.setBigram(String,String,int)
void com.android.inputmethod.latin.UserHistoryDictionary$1.setUnigram(String,String,int)
void com.android.inputmethod.latin.UserHistoryDictionaryBigramList.addBigram(String,String,byte)
void com.android.inputmethod.latin.UserHistoryDictionaryBigramList.updateBigram(String,String,byte)
void com.android.inputmethod.latin.WordComposer.setBatchInputPointers(InputPointers)
void com.android.inputmethod.latin.makedict.BinaryDictInputOutput$CharEncoding.access$400(ByteArrayOutputStream,String)
void com.android.inputmethod.latin.makedict.BinaryDictInputOutput.writeDictionaryBinary(OutputStream,FusionDictionary,FormatSpec$FormatOptions)
void com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup.addBigram(String,int)
void com.android.inputmethod.latin.makedict.FusionDictionary.setBigram(String,String,int)
void com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession$SuggestionsCache.putSuggestionsToCache(String,String,String[],int)
void com.android.inputmethod.latin.suggestions.MoreSuggestionsView.setKeyPreviewPopupEnabled(boolean,int)
void com.android.inputmethod.latin.suggestions.MoreSuggestionsView.setKeyboard(Keyboard)
void com.android.inputmethod.latin.suggestions.MoreSuggestionsView.updateKeyboardGeometry(int)
void com.android.inputmethodcommon.InputMethodSettingsFragment.setInputMethodSettingsCategoryTitle(int)
void com.android.inputmethodcommon.InputMethodSettingsFragment.setSubtypeEnablerTitle(int)
void com.android.internal.app.ActionBarImpl$ActionModeImpl.setTitleOptionalHint(boolean)
void com.android.internal.app.ActionBarImpl.setCustomView(View,ActionBar$LayoutParams)
void com.android.internal.app.ActionBarImpl.setDefaultDisplayHomeAsUpEnabled(boolean)
void com.android.internal.app.HeavyWeightSwitcherActivity.setDrawable(int,Drawable)
void com.android.internal.app.HeavyWeightSwitcherActivity.setIconAndText(int,int,int,String,int,int)
void com.android.internal.app.HeavyWeightSwitcherActivity.setText(int,CharSequence)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteFullWifiLockAcquired(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteFullWifiLockReleased(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteNetworkInterfaceType(String,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneDataConnectionState(int,boolean)
void com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneState(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteScreenBrightness(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartGps(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartSensor(int,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartWakelock(int,int,String,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartWakelockFromSource(WorkSource,int,String,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopGps(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopSensor(int,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopWakelock(int,int,String,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopWakelockFromSource(WorkSource,int,String,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteUserActivity(int,int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiMulticastDisabled(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiMulticastEnabled(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiScanStarted(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiScanStopped(int)
void com.android.internal.app.IBatteryStats$Stub$Proxy.setBatteryState(int,int,int,int,int,int)
void com.android.internal.app.IMediaContainerService$Stub$Proxy.clearDirectory(String)
void com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindAppWidgetId(int,ComponentName,Bundle)
void com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindRemoteViewsService(int,Intent,IBinder,int)
void com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.setBindAppWidgetPermission(String,boolean)
void com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.stopListeningAsUser(int,int)
void com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.unbindRemoteViewsService(int,Intent,int)
void com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.updateAppWidgetOptions(int,Bundle)
void com.android.internal.location.ILocationProvider$Stub$Proxy.setRequest(ProviderRequest,WorkSource)
void com.android.internal.location.ProviderRequest.writeToParcel(Parcel,int)
void com.android.internal.os.BatteryStatsImpl$Counter.logState(Printer,String)
void com.android.internal.os.BatteryStatsImpl$Counter.writeCounterToParcel(Parcel,BatteryStatsImpl$Counter)
void com.android.internal.os.BatteryStatsImpl$SamplingTimer.logState(Printer,String)
void com.android.internal.os.BatteryStatsImpl$SamplingTimer.writeSummaryFromParcelLocked(Parcel,long)
void com.android.internal.os.BatteryStatsImpl$SamplingTimer.writeToParcel(Parcel,long)
void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.logState(Printer,String)
void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.writeToParcel(Parcel,long)
void com.android.internal.os.BatteryStatsImpl$Timer.logState(Printer,String)
void com.android.internal.os.BatteryStatsImpl$Timer.writeTimerToParcel(Parcel,BatteryStatsImpl$Timer,long)
void com.android.internal.os.BatteryStatsImpl$Uid$Pkg.readFromParcelLocked(Parcel)
void com.android.internal.os.BatteryStatsImpl$Uid$Pkg.writeToParcelLocked(Parcel)
void com.android.internal.os.BatteryStatsImpl$Uid$Proc.writeToParcelLocked(Parcel)
void com.android.internal.os.BatteryStatsImpl$Uid$Sensor.writeToParcelLocked(Parcel,long)
void com.android.internal.os.BatteryStatsImpl$Uid$Wakelock.writeToParcelLocked(Parcel,long)
void com.android.internal.os.BatteryStatsImpl$Uid.readFromParcelLocked(ArrayList,Parcel)
void com.android.internal.os.BatteryStatsImpl$Uid.writeToParcelLocked(Parcel,long)
void com.android.internal.os.BatteryStatsImpl.dumpLocked(PrintWriter)
void com.android.internal.os.BatteryStatsImpl.readFromParcelLocked(Parcel)
void com.android.internal.os.BatteryStatsImpl.setNumSpeedSteps(int)
void com.android.internal.os.BatteryStatsImpl.setOnBattery(boolean,int,int)
void com.android.internal.os.BatteryStatsImpl.setRadioScanningTimeout(long)
void com.android.internal.os.BatteryStatsImpl.writeHistory(Parcel,boolean)
void com.android.internal.os.BatteryStatsImpl.writeSummaryToParcel(Parcel)
void com.android.internal.os.BatteryStatsImpl.writeToParcel(Parcel,int)
void com.android.internal.os.BatteryStatsImpl.writeToParcelLocked(Parcel,boolean,int)
void com.android.internal.os.BatteryStatsImpl.writeToParcelWithoutUids(Parcel,int)
void com.android.internal.policy.impl.PhoneWindowManager.dump(String,PrintWriter,String[])
void com.android.internal.policy.impl.PhoneWindowManager.enableKeyguard(boolean)
void com.android.internal.policy.impl.PhoneWindowManager.getContentInsetHintLw(WindowManager$LayoutParams,Rect)
void com.android.internal.policy.impl.PhoneWindowManager.notifyLidSwitchChanged(long,boolean)
void com.android.internal.policy.impl.PhoneWindowManager.sendCloseSystemWindows(String)
void com.android.internal.policy.impl.PhoneWindowManager.setAttachedWindowFrames(WindowManagerPolicy$WindowState,int,int,WindowManagerPolicy$WindowState,boolean,Rect,Rect,Rect,Rect)
void com.android.internal.policy.impl.PhoneWindowManager.setCurrentUserLw(int)
void com.android.internal.policy.impl.PhoneWindowManager.setHdmiPlugged(boolean)
void com.android.internal.policy.impl.PhoneWindowManager.setRotationLw(int)
void com.android.internal.policy.impl.PhoneWindowManager.setUserRotationMode(int,int)
void com.android.internal.policy.impl.keyguard.ClockView$AmPm.setIsMorning(boolean)
void com.android.internal.policy.impl.keyguard.ClockView$AmPm.setShowAmPm(boolean)
void com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher.launchActivityWithAnimation(Intent,boolean,Bundle,Handler,Runnable)
void com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher.launchWidgetPicker(int)
void com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable.setAlpha(int)
void com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable.setColorFilter(ColorFilter)
void com.android.internal.policy.impl.keyguard.KeyguardHostView$SavedState.writeToParcel(Parcel,int)
void com.android.internal.policy.impl.keyguard.KeyguardLinearLayout.setTopChild(View)
void com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper.setMessage(int,boolean)
void com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper.setMessage(int,boolean,Object[])
void com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper.setTimeout(int)
void com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar.setActive(boolean,boolean,Runnable)
void com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar.setPressed(boolean)
void com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper.setLockPatternUtils(LockPatternUtils)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setAllMetadata(int,Bundle,Bitmap)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setArtwork(int,Bitmap)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setCurrentClientId(int,PendingIntent,boolean)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setMetadata(int,Bundle)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setPlaybackState(int,int,long)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak.setTransportControlFlags(int,int)
void com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$SavedState.writeToParcel(Parcel,int)
void com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor.sendKeyguardVisibilityChanged(boolean)
void com.android.internal.policy.impl.keyguard.KeyguardViewMediator$2.setNeedsInput(boolean)
void com.android.internal.policy.impl.keyguard.KeyguardViewMediator.setCurrentUser(int)
void com.android.internal.policy.impl.keyguard.KeyguardViewMediator.setHidden(boolean)
void com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.addWidget(View,int)
void com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.sendAccessibilityEvent(int)
void com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.setCurrentPage(int)
void com.android.internal.policy.impl.keyguard.KeyguardWidgetPager.setPageHoveringOverDeleteDropTarget(int,boolean)
void com.android.internal.policy.impl.keyguard.PagedView$SavedState.writeToParcel(Parcel,int)
void com.android.internal.policy.impl.keyguard.PagedView.setCurrentPage(int)
void com.android.internal.policy.impl.keyguard.PagedView.setScaleX(float)
void com.android.internal.policy.impl.keyguard.PagedView.snapToPage(int,int,int,boolean)
void com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1.setValue(Object,float)
void com.android.internal.policy.impl.keyguard.SlidingChallengeLayout.setHandleAlpha(float)
void com.android.internal.preference.YesNoPreference$SavedState.writeToParcel(Parcel,int)
void com.android.internal.statusbar.IStatusBar$Stub$Proxy.setSystemUiVisibility(int,int)
void com.android.internal.statusbar.IStatusBarService$Stub$Proxy.registerStatusBar(IStatusBar,StatusBarIconList,List,List,int[],List)
void com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setCurrentUser(int)
void com.android.internal.statusbar.IStatusBarService$Stub$Proxy.setSystemUiVisibility(int,int)
void com.android.internal.telephony.ApnContext.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.ApnContext.setRetryCount(int)
void com.android.internal.telephony.ApnContext.setState(DctConstants$State)
void com.android.internal.telephony.CallManager$1.handleMessage(Message)
void com.android.internal.telephony.CallManager.setAudioMode()
void com.android.internal.telephony.CallManager.setEchoSuppressionEnabled(boolean)
void com.android.internal.telephony.CallManager.setMute(boolean)
void com.android.internal.telephony.CallTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler.onQueryComplete(int,Object,Cursor)
void com.android.internal.telephony.CallerInfoAsyncQuery.addQueryListener(int,CallerInfoAsyncQuery$OnQueryCompleteListener,Object)
void com.android.internal.telephony.DataConnection.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.DataConnection.setRetryCount(int)
void com.android.internal.telephony.DataConnectionTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.DataConnectionTracker.putRecoveryAction(int)
void com.android.internal.telephony.DebugService.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.DefaultPhoneNotifier.notifyCellInfo(Phone,List)
void com.android.internal.telephony.IPhoneStateListener$Stub$Proxy.onCellInfoChanged(List)
void com.android.internal.telephony.ISms$Stub$Proxy.sendMultipartText(String,String,List,List,List)
void com.android.internal.telephony.ISms$Stub$Proxy.setPremiumSmsPermission(String,int)
void com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCellInfo(List)
void com.android.internal.telephony.IccCardProxy.setIccFdnEnabled(boolean,String,Message)
void com.android.internal.telephony.IccCardProxy.setIccLockEnabled(boolean,String,Message)
void com.android.internal.telephony.IccCardProxy.setVoiceRadioTech(int)
void com.android.internal.telephony.IccSmsInterfaceManager.sendMultipartText(String,String,List,List,List)
void com.android.internal.telephony.IccSmsInterfaceManager.setPremiumSmsPermission(String,int)
void com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendMultipartText(String,String,List,List,List)
void com.android.internal.telephony.IccSmsInterfaceManagerProxy.setPremiumSmsPermission(String,int)
void com.android.internal.telephony.MccTable.setSystemLocale(Context,String,String)
void com.android.internal.telephony.MccTable.updateMccMncConfiguration(Context,String)
void com.android.internal.telephony.PhoneBase.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.PhoneBase.notifyCellInfo(List)
void com.android.internal.telephony.PhoneBase.notifyDataConnection(String,String,PhoneConstants$DataState)
void com.android.internal.telephony.RIL.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.RIL.getIMSIForApp(String,Message)
void com.android.internal.telephony.RIL.iccIOForApp(int,int,String,int,int,int,String,String,String,Message)
void com.android.internal.telephony.SMSDispatcher.dispatch(Intent,String,BroadcastReceiver)
void com.android.internal.telephony.SMSDispatcher.dispatchBroadcastMessage(SmsCbMessage)
void com.android.internal.telephony.SMSDispatcher.sendMultipartText(String,String,ArrayList,ArrayList,ArrayList)
void com.android.internal.telephony.SMSDispatcher.sendRawPdu(byte[],byte[],PendingIntent,PendingIntent,String)
void com.android.internal.telephony.SMSDispatcher.setPremiumSmsPermission(String,int)
void com.android.internal.telephony.ServiceStateTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.SmsUsageMonitor.setPremiumSmsPermission(String,int)
void com.android.internal.telephony.UiccCard.update(Context,CommandsInterface,IccCardStatus)
void com.android.internal.telephony.UiccCardApplication.changeIccFdnPassword(String,String,Message)
void com.android.internal.telephony.UiccCardApplication.changeIccLockPassword(String,String,Message)
void com.android.internal.telephony.UiccCardApplication.registerForLocked(Handler,int,Object)
void com.android.internal.telephony.UiccCardApplication.registerForNetworkLocked(Handler,int,Object)
void com.android.internal.telephony.UiccCardApplication.registerForReady(Handler,int,Object)
void com.android.internal.telephony.UiccCardApplication.setIccFdnEnabled(boolean,String,Message)
void com.android.internal.telephony.UiccCardApplication.setIccLockEnabled(boolean,String,Message)
void com.android.internal.telephony.UiccCardApplication.supplyNetworkDepersonalization(String,Message)
void com.android.internal.telephony.UiccCardApplication.supplyPin(String,Message)
void com.android.internal.telephony.UiccCardApplication.supplyPin2(String,Message)
void com.android.internal.telephony.UiccCardApplication.supplyPuk(String,String,Message)
void com.android.internal.telephony.UiccCardApplication.supplyPuk2(String,String,Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.CDMALTEPhone.enableEnhancedVoicePrivacy(boolean,Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.getEnhancedVoicePrivacy(Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.getPreferredNetworkType(Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.getSmscAddress(Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.notifyDataConnection(String,String)
void com.android.internal.telephony.cdma.CDMALTEPhone.sendDtmf(char)
void com.android.internal.telephony.cdma.CDMALTEPhone.setBandMode(int,Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.setCdmaSubscription(int,Message)
void com.android.internal.telephony.cdma.CDMALTEPhone.setSmscAddress(String,Message)
void com.android.internal.telephony.cdma.CDMAPhone.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.CDMAPhone.getPreferredNetworkType(Message)
void com.android.internal.telephony.cdma.CDMAPhone.getSmscAddress(Message)
void com.android.internal.telephony.cdma.CDMAPhone.notifyDataConnection(String,String)
void com.android.internal.telephony.cdma.CDMAPhone.restoreSavedNetworkSelection(Message)
void com.android.internal.telephony.cdma.CDMAPhone.setCdmaSubscription(int,Message)
void com.android.internal.telephony.cdma.CDMAPhone.setSmscAddress(String,Message)
void com.android.internal.telephony.cdma.CdmaCallTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.CdmaDataConnection.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.CdmaDataConnectionTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.CdmaDataConnectionTracker.setDataOnRoamingEnabled(boolean)
void com.android.internal.telephony.cdma.CdmaLteServiceStateTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.CdmaLteServiceStateTracker.fixTimeZone(String)
void com.android.internal.telephony.cdma.CdmaSMSDispatcher.dispatch(Intent,String)
void com.android.internal.telephony.cdma.CdmaSMSDispatcher.dispatch(Intent,String,BroadcastReceiver)
void com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendSms(SMSDispatcher$SmsTracker)
void com.android.internal.telephony.cdma.CdmaSMSDispatcher.sendSubmitPdu(SmsMessage$SubmitPdu,PendingIntent,PendingIntent,String)
void com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.cdma.RuimRecords.setMsisdnNumber(String,String,Message)
void com.android.internal.telephony.cdma.RuimSmsInterfaceManager.sendData(String,String,int,byte[],PendingIntent,PendingIntent)
void com.android.internal.telephony.gsm.GSMPhone.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.gsm.GSMPhone.getPreferredNetworkType(Message)
void com.android.internal.telephony.gsm.GSMPhone.getSmscAddress(Message)
void com.android.internal.telephony.gsm.GSMPhone.notifyDataConnection(String,String)
void com.android.internal.telephony.gsm.GSMPhone.notifySuppServiceFailed(Phone$SuppService)
void com.android.internal.telephony.gsm.GSMPhone.setCdmaSubscription(int,Message)
void com.android.internal.telephony.gsm.GSMPhone.setSmscAddress(String,Message)
void com.android.internal.telephony.gsm.GsmCallTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.gsm.GsmDataConnection.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.gsm.GsmDataConnection.onConnect(DataConnection$ConnectionParams)
void com.android.internal.telephony.gsm.GsmDataConnectionTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.gsm.GsmDataConnectionTracker.setDataOnRoamingEnabled(boolean)
void com.android.internal.telephony.gsm.GsmDataConnectionTracker.setState(DctConstants$State)
void com.android.internal.telephony.gsm.GsmSMSDispatcher.dispatch(Intent,String)
void com.android.internal.telephony.gsm.GsmSMSDispatcher.dispatch(Intent,String,BroadcastReceiver)
void com.android.internal.telephony.gsm.GsmSMSDispatcher.sendSms(SMSDispatcher$SmsTracker)
void com.android.internal.telephony.gsm.GsmServiceStateTracker.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.telephony.gsm.SimSmsInterfaceManager.sendData(String,String,int,byte[],PendingIntent,PendingIntent)
void com.android.internal.telephony.ims.IsimUiccRecords.setVoiceMailNumber(String,String,Message)
void com.android.internal.telephony.ims.IsimUiccRecords.setVoiceMessageWaiting(int,int)
void com.android.internal.telephony.sip.SipConnectionBase.setState(Call$State)
void com.android.internal.telephony.sip.SipPhone.getPreferredNetworkType(Message)
void com.android.internal.telephony.sip.SipPhone.getSmscAddress(Message)
void com.android.internal.telephony.sip.SipPhone.notifyDataConnection(String,String)
void com.android.internal.telephony.sip.SipPhone.saveClirSetting(int)
void com.android.internal.telephony.sip.SipPhone.sendUssdResponse(String)
void com.android.internal.telephony.sip.SipPhone.setCallForwardingOption(int,int,String,int,Message)
void com.android.internal.telephony.sip.SipPhone.setCdmaSubscription(int,Message)
void com.android.internal.telephony.sip.SipPhone.setCellBroadcastSmsConfig(int[],Message)
void com.android.internal.telephony.sip.SipPhone.setDataRoamingEnabled(boolean)
void com.android.internal.telephony.sip.SipPhone.setLine1Number(String,String,Message)
void com.android.internal.telephony.sip.SipPhone.setNetworkSelectionModeAutomatic(Message)
void com.android.internal.telephony.sip.SipPhone.setOnPostDialCharacter(Handler,int,Object)
void com.android.internal.telephony.sip.SipPhone.setRadioPower(boolean)
void com.android.internal.telephony.sip.SipPhone.setSmscAddress(String,Message)
void com.android.internal.telephony.sip.SipPhone.setVoiceMailNumber(String,String,Message)
void com.android.internal.telephony.sip.SipPhoneBase.getPreferredNetworkType(Message)
void com.android.internal.telephony.sip.SipPhoneBase.getSmscAddress(Message)
void com.android.internal.telephony.sip.SipPhoneBase.notifyDataConnection(String,String)
void com.android.internal.telephony.sip.SipPhoneBase.notifySuppServiceFailed(Phone$SuppService)
void com.android.internal.telephony.sip.SipPhoneBase.restoreSavedNetworkSelection(Message)
void com.android.internal.telephony.sip.SipPhoneBase.setBandMode(int,Message)
void com.android.internal.telephony.sip.SipPhoneBase.setCdmaSubscription(int,Message)
void com.android.internal.telephony.sip.SipPhoneBase.setSmscAddress(String,Message)
void com.android.internal.telephony.test.ModelInterpreter.print(String)
void com.android.internal.telephony.test.ModelInterpreter.println(String)
void com.android.internal.telephony.test.ModelInterpreter.sendUnsolicited(String)
void com.android.internal.telephony.test.ModelInterpreter.setAutoProgressConnectingCall(boolean)
void com.android.internal.telephony.test.ModelInterpreter.setNextCallFailCause(int)
void com.android.internal.telephony.test.ModelInterpreter.setNextDialFailImmediately(boolean)
void com.android.internal.telephony.test.SimulatedCommands.sendBurstDtmf(String,int,int,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendCDMAFeatureCode(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendCdmaSms(byte[],Message)
void com.android.internal.telephony.test.SimulatedCommands.sendDtmf(char,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendEnvelope(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendEnvelopeWithStatus(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendSMS(String,String,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendTerminalResponse(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.sendUSSD(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.setAutoProgressConnectingCall(boolean)
void com.android.internal.telephony.test.SimulatedCommands.setBandMode(int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setCLIR(int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setCallForward(int,int,int,String,int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setCallWaiting(boolean,int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setCdmaBroadcastActivation(boolean,Message)
void com.android.internal.telephony.test.SimulatedCommands.setCdmaBroadcastConfig(int[],Message)
void com.android.internal.telephony.test.SimulatedCommands.setCdmaRoamingPreference(int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setCdmaSubscriptionSource(int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setFacilityLock(String,boolean,String,int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setGsmBroadcastActivation(boolean,Message)
void com.android.internal.telephony.test.SimulatedCommands.setGsmBroadcastConfig(SmsBroadcastConfigInfo[],Message)
void com.android.internal.telephony.test.SimulatedCommands.setLocationUpdates(boolean,Message)
void com.android.internal.telephony.test.SimulatedCommands.setMute(boolean,Message)
void com.android.internal.telephony.test.SimulatedCommands.setNetworkSelectionModeAutomatic(Message)
void com.android.internal.telephony.test.SimulatedCommands.setNetworkSelectionModeManual(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.setNextDialFailImmediately(boolean)
void com.android.internal.telephony.test.SimulatedCommands.setPhoneType(int)
void com.android.internal.telephony.test.SimulatedCommands.setPreferredVoicePrivacy(boolean,Message)
void com.android.internal.telephony.test.SimulatedCommands.setRadioPower(boolean,Message)
void com.android.internal.telephony.test.SimulatedCommands.setSmscAddress(String,Message)
void com.android.internal.telephony.test.SimulatedCommands.setTTYMode(int,Message)
void com.android.internal.telephony.test.SimulatedCommands.setupDataCall(String,String,String,String,String,String,String,Message)
void com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy.onGetSentenceSuggestionsMultiple(TextInfo[],int)
void com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy.onGetSentenceSuggestions(SentenceSuggestionsInfo[])
void com.android.internal.util.FileRotator$1.write(OutputStream)
void com.android.internal.util.IndentingPrintWriter.write(char[],int,int)
void com.android.internal.util.StateMachine.dump(FileDescriptor,PrintWriter,String[])
void com.android.internal.util.StateMachine.setLogRecSize(int)
void com.android.internal.view.IInputMethodSession$Stub$Proxy.dispatchGenericMotionEvent(int,MotionEvent,IInputMethodCallback)
void com.android.internal.view.RotationPolicy.setRotationLock(Context,boolean)
void com.android.internal.view.RotationPolicy.setRotationLockForAccessibility(Context,boolean)
void com.android.internal.widget.ActionBarContainer.setVisibility(int)
void com.android.internal.widget.ActionBarOverlayLayout.setShowingForActionMode(boolean)
void com.android.internal.widget.ActionBarView.setMenu(Menu,MenuPresenter$Callback)
void com.android.internal.widget.ILockSettings$Stub$Proxy.removeUser(int)
void com.android.internal.widget.ILockSettings$Stub$Proxy.setBoolean(String,boolean,int)
void com.android.internal.widget.ILockSettings$Stub$Proxy.setLockPassword(byte[],int)
void com.android.internal.widget.ILockSettings$Stub$Proxy.setLockPattern(byte[],int)
void com.android.internal.widget.ILockSettings$Stub$Proxy.setLong(String,long,int)
void com.android.internal.widget.ILockSettings$Stub$Proxy.setString(String,String,int)
void com.android.internal.widget.LockPatternUtils.saveLockPassword(String,int)
void com.android.internal.widget.LockPatternUtils.saveLockPassword(String,int,boolean)
void com.android.internal.widget.LockPatternUtils.saveLockPassword(String,int,boolean,int)
void com.android.internal.widget.LockPatternUtils.setBiometricWeakLivelinessEnabled(boolean)
void com.android.internal.widget.LockPatternUtils.setCurrentUser(int)
void com.android.internal.widget.LockPatternUtils.setLockPatternEnabled(boolean)
void com.android.internal.widget.LockPatternUtils.setLockScreenDisabled(boolean)
void com.android.internal.widget.LockPatternUtils.setPermanentlyLocked(boolean)
void com.android.internal.widget.LockPatternUtils.setPowerButtonInstantlyLocks(boolean)
void com.android.internal.widget.LockPatternUtils.setVisiblePatternEnabled(boolean)
void com.android.internal.widget.LockPatternUtils.updateEmergencyCallButtonState(Button,int,boolean)
void com.android.internal.widget.LockPatternUtils.writeFallbackAppWidgetId(int)
void com.android.internal.widget.LockPatternView$SavedState.writeToParcel(Parcel,int)
void com.android.internal.widget.LockPatternView.setPattern(LockPatternView$DisplayMode,List)
void com.android.internal.widget.LockSettingsService.access$000(LockSettingsService,SQLiteDatabase,String,String,int)
void com.android.internal.widget.LockSettingsService.setBoolean(String,boolean,int)
void com.android.internal.widget.LockSettingsService.setLockPassword(byte[],int)
void com.android.internal.widget.LockSettingsService.setLockPattern(byte[],int)
void com.android.internal.widget.LockSettingsService.setLong(String,long,int)
void com.android.internal.widget.LockSettingsService.setString(String,String,int)
void com.android.internal.widget.PasswordEntryKeyboardHelper.sendDownUpKeyEvents(int)
void com.android.internal.widget.PasswordEntryKeyboardHelper.setVibratePattern(int)
void com.android.internal.widget.RotarySelector.setLeftHandleResource(int)
void com.android.internal.widget.RotarySelector.setRightHandleResource(int)
void com.android.internal.widget.SlidingTab$Slider.setBarBackgroundResource(int)
void com.android.internal.widget.SlidingTab$Slider.setHintText(int)
void com.android.internal.widget.SlidingTab$Slider.setIcon(int)
void com.android.internal.widget.SlidingTab$Slider.setTabBackgroundResource(int)
void com.android.internal.widget.SlidingTab$Slider.setTarget(int)
void com.android.internal.widget.SlidingTab$Slider.startAnimation(Animation,Animation)
void com.android.internal.widget.SlidingTab.setLeftHintText(int)
void com.android.internal.widget.SlidingTab.setLeftTabResources(int,int,int,int)
void com.android.internal.widget.SlidingTab.setRightHintText(int)
void com.android.internal.widget.SlidingTab.setRightTabResources(int,int,int,int)
void com.android.internal.widget.SlidingTab.setVisibility(int)
void com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setAllMetadata(int,Bundle,Bitmap)
void com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setArtwork(int,Bitmap)
void com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setCurrentClientId(int,PendingIntent,boolean)
void com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setMetadata(int,Bundle)
void com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setPlaybackState(int,int,long)
void com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak.setTransportControlFlags(int,int)
void com.android.internal.widget.TransportControlView$SavedState.writeToParcel(Parcel,int)
void com.android.internal.widget.multiwaveview.GlowPadView.setEnableTarget(int,boolean)
void com.android.internal.widget.multiwaveview.GlowPadView.setVibrateEnabled(boolean)
void com.android.internal.widget.multiwaveview.MultiWaveView.setEnableTarget(int,boolean)
void com.android.internal.widget.multiwaveview.MultiWaveView.setVibrateEnabled(boolean)
void com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setAlpha(int)
void com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha.setColorFilter(ColorFilter)
void com.android.internal.widget.multiwaveview.TargetDrawable.setDrawable(Resources,int)
void com.android.internal.widget.multiwaveview.TargetDrawable.setState(int[])
void com.android.launcher2.Alarm.setAlarm(long)
void com.android.launcher2.ApplicationInfo.setActivity(ComponentName,int)
void com.android.launcher2.AppsCustomizePagedView.setContentType(AppsCustomizePagedView$ContentType)
void com.android.launcher2.AppsCustomizeTabHost.setContentTypeImmediate(AppsCustomizePagedView$ContentType)
void com.android.launcher2.AppsCustomizeTabHost.setCurrentTabFromContent(AppsCustomizePagedView$ContentType)
void com.android.launcher2.BubbleTextView.setTag(Object)
void com.android.launcher2.CellLayout$ItemConfiguration.add(View,CellLayout$CellAndSpan)
void com.android.launcher2.CellLayout$LayoutParams.setup(int,int,int,int)
void com.android.launcher2.CellLayout.setChildrenDrawingCacheEnabled(boolean)
void com.android.launcher2.CellLayout.setChildrenDrawnWithCacheEnabled(boolean)
void com.android.launcher2.CellLayout.setFolderLeaveBehindCell(int,int)
void com.android.launcher2.CellLayout.setShortcutAndWidgetAlpha(float)
void com.android.launcher2.CellLayout.setTagToCellInfoForPoint(int,int)
void com.android.launcher2.DragController.startDrag(View,Bitmap,DragSource,Object,int,Rect,float)
void com.android.launcher2.DragView.setAlpha(float)
void com.android.launcher2.DragView.setColor(int)
void com.android.launcher2.FastBitmapDrawable.setColorFilter(ColorFilter)
void com.android.launcher2.FastBitmapDrawable.setFilterBitmap(boolean)
void com.android.launcher2.FolderIcon.setTextVisible(boolean)
void com.android.launcher2.HideFromAccessibilityHelper.onChildViewRemoved(View,View)
void com.android.launcher2.HideFromAccessibilityHelper.restoreImportantForAccessibility(View)
void com.android.launcher2.ItemInfo.updateValuesWithCoordinates(ContentValues,int,int)
void com.android.launcher2.Launcher.addAppWidgetFromDrop(PendingAddWidgetInfo,long,int,int[],int[],int[])
void com.android.launcher2.Launcher.addAppWidgetImpl(int,ItemInfo,AppWidgetHostView,AppWidgetProviderInfo)
void com.android.launcher2.Launcher.addWidgetToAutoAdvanceIfNeeded(View,AppWidgetProviderInfo)
void com.android.launcher2.Launcher.bindAppsUpdated(ArrayList)
void com.android.launcher2.Launcher.bindFolders(HashMap)
void com.android.launcher2.Launcher.dump(String,FileDescriptor,PrintWriter,String[])
void com.android.launcher2.Launcher.openFolder(FolderIcon)
void com.android.launcher2.Launcher.processShortcut(Intent)
void com.android.launcher2.Launcher.startActivityForResult(Intent,int)
void com.android.launcher2.Launcher.startGlobalSearch(String,boolean,Bundle,Rect)
void com.android.launcher2.Launcher.startSearch(String,boolean,Bundle,boolean)
void com.android.launcher2.LauncherAppWidgetHostView.updateAppWidget(RemoteViews)
void com.android.launcher2.LauncherAppWidgetInfo.notifyWidgetSizeChanged(Launcher)
void com.android.launcher2.LauncherModel.addItemToDatabase(Context,ItemInfo,long,int,int,int,boolean)
void com.android.launcher2.LauncherModel.modifyItemInDatabase(Context,ItemInfo,long,int,int,int,int,int)
void com.android.launcher2.LauncherModel.moveItemInDatabase(Context,ItemInfo,long,int,int,int)
void com.android.launcher2.LauncherProvider$DatabaseHelper.onUpgrade(SQLiteDatabase,int,int)
void com.android.launcher2.LauncherProvider.loadDefaultFavoritesIfNecessary(int)
void com.android.launcher2.LauncherViewPropertyAnimator.setTarget(Object)
void com.android.launcher2.PagedViewCellLayout$LayoutParams.setup(int,int,int,int,int,int)
void com.android.launcher2.PagedViewCellLayout.setChildrenDrawingCacheEnabled(boolean)
void com.android.launcher2.PagedViewCellLayoutChildren.setChildrenDrawingCacheEnabled(boolean)
void com.android.launcher2.SearchDropTargetBar.setup(Launcher,DragController)
void com.android.launcher2.ShortcutAndWidgetContainer.setChildrenDrawingCacheEnabled(boolean)
void com.android.launcher2.ShortcutAndWidgetContainer.setChildrenDrawnWithCacheEnabled(boolean)
void com.android.launcher2.ShortcutAndWidgetContainer.setupLp(CellLayout$LayoutParams)
void com.android.launcher2.ShortcutInfo.onAddToDatabase(ContentValues)
void com.android.launcher2.ShortcutInfo.setActivity(ComponentName,int)
void com.android.launcher2.SmoothPagedView$OvershootInterpolator.setDistance(int)
void com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable.setAlpha(int)
void com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable.setColorFilter(ColorFilter)
void com.android.launcher2.WeakReferenceThreadLocal.set(Object)
void com.android.launcher2.Workspace$WallpaperOffsetInterpolator.setFinalX(float)
void com.android.launcher2.Workspace.beginDragShared(View,DragSource)
void com.android.launcher2.Workspace.onDrop(DropTarget$DragObject)
void com.android.launcher2.Workspace.setFinalScrollForPageChange(int)
void com.android.launcher2.Workspace.setFinalTransitionTransform(CellLayout)
void com.android.mms.data.Conversation.setDraftState(boolean)
void com.android.mms.data.Conversation.startDelete(Conversation$ConversationQueryHandler,int,boolean,Collection)
void com.android.mms.data.Conversation.startDeleteAll(Conversation$ConversationQueryHandler,int,boolean)
void com.android.mms.data.Conversation.startQuery(AsyncQueryHandler,int,String)
void com.android.mms.data.RecipientIdCache.updateNumbers(long,ContactList)
void com.android.mms.data.WorkingMessage.send(String)
void com.android.mms.data.WorkingMessage.setHasEmail(boolean,boolean)
void com.android.mms.data.WorkingMessage.setHasMultipleRecipients(boolean,boolean)
void com.android.mms.data.WorkingMessage.setLengthRequiresMms(boolean,boolean)
void com.android.mms.dom.AttrImpl.setNodeValue(String)
void com.android.mms.dom.DocumentImpl.setDocumentURI(String)
void com.android.mms.dom.DocumentImpl.setStrictErrorChecking(boolean)
void com.android.mms.dom.DocumentImpl.setXmlStandalone(boolean)
void com.android.mms.dom.DocumentImpl.setXmlVersion(String)
void com.android.mms.dom.ElementImpl.setAttribute(String,String)
void com.android.mms.dom.ElementImpl.setAttributeNS(String,String,String)
void com.android.mms.dom.ElementImpl.setIdAttribute(String,boolean)
void com.android.mms.dom.ElementImpl.setIdAttributeNS(String,String,boolean)
void com.android.mms.dom.NodeImpl.setNodeValue(String)
void com.android.mms.dom.NodeImpl.setPrefix(String)
void com.android.mms.dom.NodeImpl.setTextContent(String)
void com.android.mms.dom.smil.ElementParallelTimeContainerImpl.setEndSync(String)
void com.android.mms.dom.smil.ElementTimeImpl.setDur(float)
void com.android.mms.dom.smil.SmilDocumentImpl.setDur(float)
void com.android.mms.dom.smil.SmilElementImpl.setId(String)
void com.android.mms.dom.smil.SmilMediaElementImpl.setDur(float)
void com.android.mms.dom.smil.SmilMediaElementImpl.setSrc(String)
void com.android.mms.dom.smil.SmilParElementImpl.setDur(float)
void com.android.mms.dom.smil.SmilRegionElementImpl.setBackgroundColor(String)
void com.android.mms.dom.smil.SmilRegionElementImpl.setFit(String)
void com.android.mms.dom.smil.SmilRegionElementImpl.setHeight(int)
void com.android.mms.dom.smil.SmilRegionElementImpl.setId(String)
void com.android.mms.dom.smil.SmilRegionElementImpl.setLeft(int)
void com.android.mms.dom.smil.SmilRegionElementImpl.setTop(int)
void com.android.mms.dom.smil.SmilRegionElementImpl.setWidth(int)
void com.android.mms.dom.smil.SmilRootLayoutElementImpl.setBackgroundColor(String)
void com.android.mms.dom.smil.SmilRootLayoutElementImpl.setHeight(int)
void com.android.mms.dom.smil.SmilRootLayoutElementImpl.setWidth(int)
void com.android.mms.transaction.MessageStatusReceiver.onReceive(Context,Intent)
void com.android.mms.transaction.MessagingNotification.blockingUpdateAllNotifications(Context,long)
void com.android.mms.transaction.MessagingNotification.notifyDownloadFailed(Context,long)
void com.android.mms.transaction.MessagingNotification.notifySendFailed(Context)
void com.android.mms.transaction.MessagingNotification.notifySendFailed(Context,boolean)
void com.android.mms.transaction.MmsMessageSender.sendReadRec(Context,String,String,int)
void com.android.mms.transaction.RetryScheduler.setRetryAlarm(Context)
void com.android.mms.transaction.TransactionService.update(Observable)
void com.android.mms.ui.AudioAttachmentView.setImage(String,Bitmap)
void com.android.mms.ui.AudioAttachmentView.setImageRegionFit(String)
void com.android.mms.ui.AudioAttachmentView.setImageVisibility(boolean)
void com.android.mms.ui.AudioAttachmentView.setText(String,String)
void com.android.mms.ui.AudioAttachmentView.setTextVisibility(boolean)
void com.android.mms.ui.AudioAttachmentView.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.AudioAttachmentView.setVideoVisibility(boolean)
void com.android.mms.ui.BasicSlideEditorView.setAudio(Uri,String,Map)
void com.android.mms.ui.BasicSlideEditorView.setImage(String,Bitmap)
void com.android.mms.ui.BasicSlideEditorView.setImageRegionFit(String)
void com.android.mms.ui.BasicSlideEditorView.setImageVisibility(boolean)
void com.android.mms.ui.BasicSlideEditorView.setText(String,String)
void com.android.mms.ui.BasicSlideEditorView.setTextVisibility(boolean)
void com.android.mms.ui.BasicSlideEditorView.setVideo(String,Uri)
void com.android.mms.ui.BasicSlideEditorView.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.BasicSlideEditorView.setVideoVisibility(boolean)
void com.android.mms.ui.ComposeMessageActivity.onSaveInstanceState(Bundle)
void com.android.mms.ui.ComposeMessageActivity.startActivityForResult(Intent,int)
void com.android.mms.ui.ConversationListAdapter.bindView(View,Context,Cursor)
void com.android.mms.ui.ConversationListItem.setChecked(boolean)
void com.android.mms.ui.MessageListAdapter.bindView(View,Context,Cursor)
void com.android.mms.ui.MessageListItem.setAudio(Uri,String,Map)
void com.android.mms.ui.MessageListItem.setImage(String,Bitmap)
void com.android.mms.ui.MessageListItem.setImageRegionFit(String)
void com.android.mms.ui.MessageListItem.setImageVisibility(boolean)
void com.android.mms.ui.MessageListItem.setText(String,String)
void com.android.mms.ui.MessageListItem.setTextVisibility(boolean)
void com.android.mms.ui.MessageListItem.setVideo(String,Uri)
void com.android.mms.ui.MessageListItem.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.MessageListItem.setVideoVisibility(boolean)
void com.android.mms.ui.MessageUtils.recordSound(Activity,int,long)
void com.android.mms.ui.MessageUtils.selectAudio(Activity,int)
void com.android.mms.ui.MessagingPreferenceActivity.enableNotifications(boolean,Context)
void com.android.mms.ui.NoConfirmationSendService.onHandleIntent(Intent)
void com.android.mms.ui.SlideListItemView.setAudio(Uri,String,Map)
void com.android.mms.ui.SlideListItemView.setImage(String,Bitmap)
void com.android.mms.ui.SlideListItemView.setImageRegionFit(String)
void com.android.mms.ui.SlideListItemView.setImageVisibility(boolean)
void com.android.mms.ui.SlideListItemView.setText(String,String)
void com.android.mms.ui.SlideListItemView.setTextVisibility(boolean)
void com.android.mms.ui.SlideListItemView.setVideo(String,Uri)
void com.android.mms.ui.SlideListItemView.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.SlideListItemView.setVideoVisibility(boolean)
void com.android.mms.ui.SlideView.enableMMSConformanceMode(int,int,int,int)
void com.android.mms.ui.SlideView.setAudio(Uri,String,Map)
void com.android.mms.ui.SlideView.setImage(String,Bitmap)
void com.android.mms.ui.SlideView.setImageRegion(int,int,int,int)
void com.android.mms.ui.SlideView.setImageRegionFit(String)
void com.android.mms.ui.SlideView.setImageVisibility(boolean)
void com.android.mms.ui.SlideView.setText(String,String)
void com.android.mms.ui.SlideView.setTextRegion(int,int,int,int)
void com.android.mms.ui.SlideView.setTextVisibility(boolean)
void com.android.mms.ui.SlideView.setVideo(String,Uri)
void com.android.mms.ui.SlideView.setVideoRegion(int,int,int,int)
void com.android.mms.ui.SlideView.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.SlideView.setVideoVisibility(boolean)
void com.android.mms.ui.SlideshowAttachmentView.setImage(String,Bitmap)
void com.android.mms.ui.SlideshowAttachmentView.setImageRegionFit(String)
void com.android.mms.ui.SlideshowAttachmentView.setImageVisibility(boolean)
void com.android.mms.ui.SlideshowAttachmentView.setText(String,String)
void com.android.mms.ui.SlideshowAttachmentView.setTextVisibility(boolean)
void com.android.mms.ui.SlideshowAttachmentView.setVideo(String,Uri)
void com.android.mms.ui.SlideshowAttachmentView.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.SlideshowAttachmentView.setVideoVisibility(boolean)
void com.android.mms.ui.VideoAttachmentView.setImage(String,Bitmap)
void com.android.mms.ui.VideoAttachmentView.setImageRegionFit(String)
void com.android.mms.ui.VideoAttachmentView.setImageVisibility(boolean)
void com.android.mms.ui.VideoAttachmentView.setText(String,String)
void com.android.mms.ui.VideoAttachmentView.setTextVisibility(boolean)
void com.android.mms.ui.VideoAttachmentView.setVideo(String,Uri)
void com.android.mms.ui.VideoAttachmentView.setVideoThumbnail(String,Bitmap)
void com.android.mms.ui.VideoAttachmentView.setVideoVisibility(boolean)
void com.android.mms.util.DownloadManager.markState(Uri,int)
void com.android.mms.util.ImageCacheService.putImageData(String,int,byte[])
void com.android.mms.util.NullItemLoadedFuture.setIsDone(boolean)
void com.android.mms.util.Recycler$MmsRecycler.setMessageLimit(Context,int)
void com.android.mms.util.Recycler$SmsRecycler.setMessageLimit(Context,int)
void com.android.mms.util.SendingProgressTokenManager.put(Object,long)
void com.android.musicfx.Compatibility$Receiver.onReceive(Context,Intent)
void com.android.musicfx.ControlPanelEffect.initEffectsPreferences(Context,String,int)
void com.android.musicfx.ControlPanelEffect.openSession(Context,String,int)
void com.android.musicfx.ControlPanelEffect.setParameterBoolean(Context,String,int,ControlPanelEffect$Key,boolean)
void com.android.musicfx.ControlPanelEffect.setParameterInt(Context,String,int,ControlPanelEffect$Key,int)
void com.android.musicfx.ControlPanelEffect.setParameterInt(Context,String,int,ControlPanelEffect$Key,int,int)
void com.android.musicfx.seekbar.AbsSeekBar.setMax(int)
void com.android.musicfx.seekbar.ProgressBar$SavedState.writeToParcel(Parcel,int)
void com.android.musicfx.seekbar.ProgressBar.setInterpolator(Context,int)
void com.android.musicfx.seekbar.ProgressBar.setProgress(int)
void com.android.musicfx.seekbar.ProgressBar.setVisibility(int)
void com.android.nfc.NfcDispatcher.dump(FileDescriptor,PrintWriter,String[])
void com.android.nfc.NfcService$NfcAdapterExtrasService.setCardEmulationRoute(String,int)
void com.android.nfc.NfcService$NfcAdapterService.dispatch(Tag)
void com.android.nfc.NfcService$NfcAdapterService.dump(FileDescriptor,PrintWriter,String[])
void com.android.nfc.NfcService$NfcAdapterService.setForegroundDispatch(PendingIntent,IntentFilter[],TechListParcel)
void com.android.nfc.NfcService$NfcAdapterService.setNdefPushCallback(INdefPushCallback)
void com.android.nfc.NfcService$NfcAdapterService.setP2pModes(int,int)
void com.android.nfc.NfcService$NfcServiceHandler.handleMessage(Message)
void com.android.nfc.NfcService.dump(FileDescriptor,PrintWriter,String[])
void com.android.nfc.NfcService.onCardEmulationAidSelected(byte[])
void com.android.nfc.NfcService.onSeApduReceived(byte[])
void com.android.nfc.NfcService.onSeMifareAccess(byte[])
void com.android.nfc.NfcService.saveNfcOnSetting(boolean)
void com.android.nfc.NfcService.sendMockNdefTag(NdefMessage)
void com.android.nfc.NfceeAccessControl.dump(FileDescriptor,PrintWriter,String[])
void com.android.nfc.P2pLinkManager.dump(FileDescriptor,PrintWriter,String[])
void com.android.nfc.P2pLinkManager.onReceiveComplete(NdefMessage)
void com.android.nfc.P2pLinkManager.onSendComplete(NdefMessage,long)
void com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket.send(int,byte[])
void com.android.nfc.dhimpl.NativeLlcpSocket.send(byte[])
void com.android.nfc.dhimpl.NativeNfcManager.setP2pInitiatorModes(int)
void com.android.nfc.dhimpl.NativeNfcManager.setP2pTargetModes(int)
void com.android.nfc.dhimpl.NativeNfcTag.addNdefTechnology(NdefMessage,int,int,int,int,int)
void com.android.nfc.handover.HandoverManager.whitelistOppDevice(BluetoothDevice)
void com.android.nfc.handover.HandoverService$1.onReceive(Context,Intent)
void com.android.nfc.handover.HandoverService.createHandoverTransfer(PendingHandoverTransfer)
void com.android.nfc.handover.HandoverService.onTransferComplete(HandoverTransfer,boolean)
void com.android.nfc.handover.HandoverTransfer.onScanCompleted(String,Uri)
void com.android.nfc.handover.HandoverTransfer.whitelistOppDevice(BluetoothDevice)
void com.android.nfc.snep.SnepMessenger.sendMessage(SnepMessage)
void com.android.org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream.write(int)
void com.android.org.bouncycastle.asn1.ASN1OutputStream.write(byte[])
void com.android.org.bouncycastle.asn1.ASN1OutputStream.write(byte[],int,int)
void com.android.org.bouncycastle.asn1.ASN1OutputStream.write(int)
void com.android.org.bouncycastle.asn1.ASN1OutputStream.writeEncoded(int,byte[])
void com.android.org.bouncycastle.asn1.ASN1OutputStream.writeEncoded(int,int,byte[])
void com.android.org.bouncycastle.asn1.ASN1OutputStream.writeLength(int)
void com.android.org.bouncycastle.asn1.ASN1OutputStream.writeTag(int,int)
void com.android.org.bouncycastle.asn1.LimitedInputStream.setParentEofDetect(boolean)
void com.android.org.bouncycastle.util.Strings.toUTF8ByteArray(char[],OutputStream)
void com.android.org.bouncycastle.util.io.Streams.pipeAll(InputStream,OutputStream)
void com.android.phone.CallCard.onQueryComplete(int,Object,CallerInfo)
void com.android.phone.CallCard.setSecondaryCallClickable(boolean)
void com.android.phone.CallFeaturesSetting.onActivityResult(int,int,Intent)
void com.android.phone.CallFeaturesSetting.startActivityForResult(Intent,int)
void com.android.phone.CallNotifier.onQueryComplete(int,Object,CallerInfo)
void com.android.phone.CallNotifier.sendMwiChangedDelayed(long)
void com.android.phone.DTMFTwelveKeyDialer.setDialpadContext(String)
void com.android.phone.DTMFTwelveKeyDialer.startLocalToneIfNeeded(char)
void com.android.phone.DTMFTwelveKeyDialer.startTone(char,boolean)
void com.android.phone.EditPhoneNumberPreference.setValueFromString(String)
void com.android.phone.InCallUiState.setProviderInfo(Intent)
void com.android.phone.ManageConferenceUtils.setPanelVisible(boolean)
void com.android.phone.ManageConferenceUtils.updateManageConferenceRow(int,Connection,boolean)
void com.android.phone.NotificationMgr$QueryHandler.onQueryComplete(int,Object,Cursor)
void com.android.phone.NotificationMgr.notifyMissedCall(String,String,String,Drawable,Bitmap,long)
void com.android.phone.OtaUtils.setupOtaspCall(Intent)
void com.android.phone.PhoneGlobals$PhoneAppBroadcastReceiver.onReceive(Context,Intent)
void com.android.phone.PhoneUtils$ConnectionHandler.handleMessage(Message)
void com.android.phone.PhoneUtils.setMute(boolean)
void com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener.onItemClick(AdapterView,View,int,long)
void com.android.phone.TelephonyDebugService.dump(FileDescriptor,PrintWriter,String[])
void com.android.phone.sip.SipEditor$PreferenceKey.setValue(String)
void com.android.phone.sip.SipProfileDb.saveProfile(SipProfile)
void com.android.phone.sip.SipSharedPreferences.setPrimaryAccount(String)
void com.android.phone.sip.SipSharedPreferences.setProfilesCount(int)
void com.android.phone.sip.SipSharedPreferences.setReceivingCallsEnabled(boolean)
void com.android.phone.sip.SipSharedPreferences.setSipCallOption(String)
void com.android.providers.calendar.CalendarAlarmManager.scheduleNextAlarm(boolean)
void com.android.providers.calendar.CalendarAlarmManager.set(int,long,PendingIntent)
void com.android.providers.calendar.CalendarCache.writeData(String,String)
void com.android.providers.calendar.CalendarCache.writeDataLocked(SQLiteDatabase,String,String)
void com.android.providers.calendar.CalendarCache.writeTimezoneDatabaseVersion(String)
void com.android.providers.calendar.CalendarCache.writeTimezoneInstances(String)
void com.android.providers.calendar.CalendarCache.writeTimezoneInstancesPrevious(String)
void com.android.providers.calendar.CalendarCache.writeTimezoneType(String)
void com.android.providers.calendar.CalendarDatabaseHelper.scheduleSync(Account,boolean,String)
void com.android.providers.calendar.CalendarInstancesHelper$EventInstancesMap.add(String,ContentValues)
void com.android.providers.calendar.CalendarInstancesHelper.expandInstanceRangeLocked(long,long,String)
void com.android.providers.calendar.CalendarInstancesHelper.performInstanceExpansion(long,long,String,Cursor)
void com.android.providers.calendar.CalendarInstancesHelper.updateInstancesLocked(ContentValues,long,boolean,SQLiteDatabase)
void com.android.providers.calendar.CalendarProvider2.acquireInstanceRangeLocked(long,long,boolean,boolean,String,boolean)
void com.android.providers.calendar.CalendarProvider2.doProcessEventRawTimes(String,String)
void com.android.providers.calendar.CalendarProvider2.notifyChange(boolean)
void com.android.providers.calendar.CalendarProviderBroadcastReceiver.onReceive(Context,Intent)
void com.android.providers.calendar.MetaData.writeLocked(String,long,long)
void com.android.providers.contacts.ContactDirectoryManager.onPackageChanged(String)
void com.android.providers.contacts.ContactLocaleUtils.setLocale(Locale)
void com.android.providers.contacts.ContactsDatabaseHelper.copyLongValue(ContentValues,String,ContentValues,String)
void com.android.providers.contacts.ContactsDatabaseHelper.copyStringValue(ContentValues,String,ContentValues,String)
void com.android.providers.contacts.ContactsDatabaseHelper.insertNameLookup(long,long,int,String)
void com.android.providers.contacts.ContactsDatabaseHelper.insertStatusUpdate(Long,String,String,Integer,Integer)
void com.android.providers.contacts.ContactsDatabaseHelper.onCreate(SQLiteDatabase)
void com.android.providers.contacts.ContactsDatabaseHelper.onUpgrade(SQLiteDatabase,int,int)
void com.android.providers.contacts.ContactsDatabaseHelper.replaceStatusUpdate(Long,long,String,String,Integer,Integer)
void com.android.providers.contacts.ContactsDatabaseHelper.setIsPrimary(long,long,long)
void com.android.providers.contacts.ContactsDatabaseHelper.setIsSuperPrimary(long,long,long)
void com.android.providers.contacts.ContactsDatabaseHelper.setLocale(ContactsProvider2,Locale)
void com.android.providers.contacts.ContactsDatabaseHelper.setProperty(String,String)
void com.android.providers.contacts.ContactsDatabaseHelper.updateContactVisible(TransactionContext,long)
void com.android.providers.contacts.ContactsDatabaseHelper.updateRawContactDisplayName(SQLiteDatabase,long)
void com.android.providers.contacts.ContactsProvider2.dump(FileDescriptor,PrintWriter,String[])
void com.android.providers.contacts.ContactsProvider2.notifyChange(boolean)
void com.android.providers.contacts.ContactsTransaction.startTransactionForDb(SQLiteDatabase,String,SQLiteTransactionListener)
void com.android.providers.contacts.DefaultCallLogInsertionHelper.addComputedValues(ContentValues)
void com.android.providers.contacts.NameSplitter$Name.toValues(ContentValues)
void com.android.providers.contacts.ProfileAwareUriMatcher.addURI(String,String,int)
void com.android.providers.contacts.TransactionContext.rawContactInserted(long,long)
void com.android.providers.contacts.TransactionContext.syncStateUpdated(long,Object)
void com.android.providers.contacts.VoicemailContentProvider.checkAndAddSourcePackageIntoValues(VoicemailContentProvider$UriData,ContentValues)
void com.android.providers.contacts.aggregation.ContactAggregator$MatchCandidateList.add(String,int)
void com.android.providers.contacts.aggregation.ContactAggregator.markForAggregation(long,int,boolean)
void com.android.providers.contacts.aggregation.ContactAggregator.markNewForAggregation(long,int)
void com.android.providers.contacts.aggregation.ContactAggregator.setContactId(long,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updateAggregateData(TransactionContext,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updateDisplayNameForContact(SQLiteDatabase,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updateDisplayNameForRawContact(SQLiteDatabase,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updateHasPhoneNumber(SQLiteDatabase,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updateLookupKeyForRawContact(SQLiteDatabase,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updatePhotoId(SQLiteDatabase,long)
void com.android.providers.contacts.aggregation.ContactAggregator.updateStarred(long)
void com.android.providers.contacts.aggregation.ProfileAggregator.aggregateContact(TransactionContext,SQLiteDatabase,long)
void com.android.providers.contacts.aggregation.util.ContactMatcher.matchName(long,int,String,int,String,int)
void com.android.providers.contacts.aggregation.util.ContactMatcher.updateScoreWithEmailMatch(long)
void com.android.providers.contacts.aggregation.util.ContactMatcher.updateScoreWithNicknameMatch(long)
void com.android.providers.contacts.aggregation.util.ContactMatcher.updateScoreWithPhoneNumberMatch(long)
void com.android.providers.downloads.DownloadHandler.setCurrentSpeed(long,long)
void com.android.providers.downloads.DownloadInfo.notifyPauseDueToSize(boolean)
void com.android.providers.downloads.DownloadReceiver.onReceive(Context,Intent)
void com.android.providers.downloads.DownloadService.dump(FileDescriptor,PrintWriter,String[])
void com.android.providers.downloads.RealSystemFacade.sendBroadcast(Intent)
void com.android.providers.media.IMtpService$Stub$Proxy.sendObjectAdded(int)
void com.android.providers.media.IMtpService$Stub$Proxy.sendObjectRemoved(int)
void com.android.providers.media.MediaProvider.dump(FileDescriptor,PrintWriter,String[])
void com.android.providers.media.MediaScannerService$1.requestScanFile(String,String,IMediaScannerListener)
void com.android.providers.media.MtpService$3.sendObjectAdded(int)
void com.android.providers.media.MtpService$3.sendObjectRemoved(int)
void com.android.providers.settings.SettingsBackupAgent$WifiNetworkSettings.write(Writer)
void com.android.providers.settings.SettingsBackupAgent.onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
void com.android.providers.settings.SettingsBackupAgent.onRestore(BackupDataInput,int,ParcelFileDescriptor)
void com.android.providers.settings.SettingsBackupAgent.onRestoreFile(ParcelFileDescriptor,long,int,String,String,long,long)
void com.android.providers.settings.SettingsHelper.setLocaleData(byte[],int)
void com.android.providers.userdictionary.DictionaryBackupAgent.onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
void com.android.providers.userdictionary.DictionaryBackupAgent.onRestore(BackupDataInput,int,ParcelFileDescriptor)
void com.android.server.AlarmManagerService$Alarm.dump(PrintWriter,String,long)
void com.android.server.AlarmManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.AlarmManagerService.set(int,long,PendingIntent)
void com.android.server.AlarmManagerService.setInexactRepeating(int,long,long,PendingIntent)
void com.android.server.AlarmManagerService.setTime(long)
void com.android.server.AlarmManagerService.setTimeZone(String)
void com.android.server.AlarmManagerService.setWakelockWorkSource(PendingIntent)
void com.android.server.AppWidgetService.bindAppWidgetId(int,ComponentName,Bundle)
void com.android.server.AppWidgetService.bindRemoteViewsService(int,Intent,IBinder,int)
void com.android.server.AppWidgetService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.AppWidgetService.notifyAppWidgetViewDataChanged(int[],int)
void com.android.server.AppWidgetService.setBindAppWidgetPermission(String,boolean)
void com.android.server.AppWidgetService.updateAppWidgetIds(int[],RemoteViews)
void com.android.server.AppWidgetService.updateAppWidgetOptions(int,Bundle)
void com.android.server.AppWidgetService.updateAppWidgetProvider(ComponentName,RemoteViews)
void com.android.server.AppWidgetServiceImpl.bindAppWidgetId(int,ComponentName,Bundle)
void com.android.server.AppWidgetServiceImpl.bindRemoteViewsService(int,Intent,IBinder)
void com.android.server.AppWidgetServiceImpl.deleteAppWidgetLocked(AppWidgetServiceImpl$AppWidgetId)
void com.android.server.AppWidgetServiceImpl.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.AppWidgetServiceImpl.notifyAppWidgetViewDataChanged(int[],int)
void com.android.server.AppWidgetServiceImpl.notifyAppWidgetViewDataChangedInstanceLocked(AppWidgetServiceImpl$AppWidgetId,int)
void com.android.server.AppWidgetServiceImpl.partiallyUpdateAppWidgetIds(int[],RemoteViews)
void com.android.server.AppWidgetServiceImpl.registerForBroadcastsLocked(AppWidgetServiceImpl$Provider,int[])
void com.android.server.AppWidgetServiceImpl.sendEnableIntentLocked(AppWidgetServiceImpl$Provider)
void com.android.server.AppWidgetServiceImpl.sendUpdateIntentLocked(AppWidgetServiceImpl$Provider,int[])
void com.android.server.AppWidgetServiceImpl.setBindAppWidgetPermission(String,boolean)
void com.android.server.AppWidgetServiceImpl.updateAppWidgetIds(int[],RemoteViews)
void com.android.server.AppWidgetServiceImpl.updateAppWidgetProvider(ComponentName,RemoteViews)
void com.android.server.AttributeCache.updateConfiguration(Configuration)
void com.android.server.BackupManagerService$PerformFullBackupTask.access$900(BackupManagerService$PerformFullBackupTask,PackageInfo,File,boolean)
void com.android.server.BackupManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.BackupManagerService.fullBackup(ParcelFileDescriptor,boolean,boolean,boolean,boolean,String[])
void com.android.server.BackupManagerService.fullRestore(ParcelFileDescriptor)
void com.android.server.BackupManagerService.handleTimeout(int,Object)
void com.android.server.BackupManagerService.logBackupComplete(String)
void com.android.server.BackupManagerService.opComplete(int)
void com.android.server.BackupManagerService.prepareOperationTimeout(int,long,BackupManagerService$BackupRestoreTask)
void com.android.server.BackupManagerService.restoreAtInstall(String,int)
void com.android.server.BackupManagerService.setBackupProvisioned(boolean)
void com.android.server.BatteryService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.ClipboardService.setPrimaryClip(ClipData)
void com.android.server.CommonTimeManagementService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.ConnectivityService$2.onUidRulesChanged(int,int)
void com.android.server.ConnectivityService$NetworkStateTrackerHandler.handleMessage(Message)
void com.android.server.ConnectivityService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.ConnectivityService.sendConnectedBroadcast(NetworkInfo)
void com.android.server.ConnectivityService.setDataDependency(int,boolean)
void com.android.server.ConnectivityService.setGlobalProxy(ProxyProperties)
void com.android.server.ConnectivityService.setMobileDataEnabled(boolean)
void com.android.server.ConnectivityService.setNetworkPreference(int)
void com.android.server.ConnectivityService.setPolicyDataEnable(int,boolean)
void com.android.server.ConnectivityService.startLegacyVpn(VpnProfile)
void com.android.server.CountryDetectorService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.CountryDetectorService.notifyReceivers(Country)
void com.android.server.DevicePolicyManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.DevicePolicyManagerService.getRemoveWarning(ComponentName,RemoteCallback,int)
void com.android.server.DevicePolicyManagerService.reportFailedPasswordAttempt(int)
void com.android.server.DevicePolicyManagerService.reportSuccessfulPasswordAttempt(int)
void com.android.server.DevicePolicyManagerService.sendAdminCommandLocked(DevicePolicyManagerService$ActiveAdmin,String)
void com.android.server.DevicePolicyManagerService.sendAdminCommandLocked(DevicePolicyManagerService$ActiveAdmin,String,BroadcastReceiver)
void com.android.server.DevicePolicyManagerService.sendAdminCommandLocked(String,int,int)
void com.android.server.DevicePolicyManagerService.setActiveAdmin(ComponentName,boolean,int)
void com.android.server.DevicePolicyManagerService.setActivePasswordState(int,int,int,int,int,int,int,int,int)
void com.android.server.DevicePolicyManagerService.setCameraDisabled(ComponentName,boolean,int)
void com.android.server.DevicePolicyManagerService.setExpirationAlarmCheckLocked(Context,DevicePolicyManagerService$DevicePolicyData)
void com.android.server.DevicePolicyManagerService.setKeyguardDisabledFeatures(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setMaximumFailedPasswordsForWipe(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setMaximumTimeToLock(ComponentName,long,int)
void com.android.server.DevicePolicyManagerService.setPasswordExpirationTimeout(ComponentName,long,int)
void com.android.server.DevicePolicyManagerService.setPasswordHistoryLength(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumLength(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumLetters(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumLowerCase(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumNonLetter(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumNumeric(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumSymbols(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordMinimumUpperCase(ComponentName,int,int)
void com.android.server.DevicePolicyManagerService.setPasswordQuality(ComponentName,int,int)
void com.android.server.DeviceStorageMonitorService$CacheFileDeletedObserver.onEvent(int,String)
void com.android.server.DeviceStorageMonitorService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.DiskStatsService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.DropBoxManagerService.add(DropBoxManager$Entry)
void com.android.server.DropBoxManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.EventLogTags.writeBackupDataChanged(String)
void com.android.server.EventLogTags.writeBackupReset(String)
void com.android.server.EventLogTags.writeBackupStart(String)
void com.android.server.EventLogTags.writeBackupTransportFailure(String)
void com.android.server.EventLogTags.writeBootProgressPmsDataScanStart(long)
void com.android.server.EventLogTags.writeBootProgressPmsReady(long)
void com.android.server.EventLogTags.writeBootProgressPmsScanEnd(long)
void com.android.server.EventLogTags.writeBootProgressPmsStart(long)
void com.android.server.EventLogTags.writeBootProgressPmsSystemScanStart(long)
void com.android.server.EventLogTags.writeBootProgressSystemRun(long)
void com.android.server.EventLogTags.writeCacheFileDeleted(String)
void com.android.server.EventLogTags.writeConfigInstallFailed(String)
void com.android.server.EventLogTags.writeFreeStorageChanged(long)
void com.android.server.EventLogTags.writeLockdownVpnConnected(int)
void com.android.server.EventLogTags.writeLockdownVpnConnecting(int)
void com.android.server.EventLogTags.writeLockdownVpnError(int)
void com.android.server.EventLogTags.writeLowStorage(long)
void com.android.server.EventLogTags.writePowerScreenBroadcastSend(int)
void com.android.server.EventLogTags.writePowerSleepRequested(int)
void com.android.server.EventLogTags.writeUnknownSourcesEnabled(int)
void com.android.server.EventLogTags.writeWatchdog(String)
void com.android.server.InputMethodManagerService$InputMethodFileManager.<init>(HashMap,int)
void com.android.server.InputMethodManagerService$InputMethodFileManager.addInputMethodSubtypes(InputMethodInfo,InputMethodSubtype[])
void com.android.server.InputMethodManagerService$InputMethodSettings.addSubtypeToHistory(String,String)
void com.android.server.InputMethodManagerService$InputMethodSettings.appendAndPutEnabledInputMethodLocked(String,boolean)
void com.android.server.InputMethodManagerService$InputMethodSettings.putSelectedInputMethod(String)
void com.android.server.InputMethodManagerService$InputMethodSettings.putSelectedSubtype(int)
void com.android.server.InputMethodManagerService.addClient(IInputMethodClient,IInputContext,int,int)
void com.android.server.InputMethodManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.InputMethodManagerService.registerSuggestionSpansForNotification(SuggestionSpan[])
void com.android.server.InputMethodManagerService.setAdditionalInputMethodSubtypes(String,InputMethodSubtype[])
void com.android.server.InputMethodManagerService.setInputMethod(IBinder,String)
void com.android.server.InputMethodManagerService.setInputMethodAndSubtype(IBinder,String,InputMethodSubtype)
void com.android.server.InputMethodManagerService.setInputMethodLocked(String,int)
void com.android.server.IntentResolver.dumpFilter(PrintWriter,String,IntentFilter)
void com.android.server.IntentResolverOld.dumpFilter(PrintWriter,String,IntentFilter)
void com.android.server.LightsService$Light.pulse(int,int)
void com.android.server.LightsService$Light.setBrightness(int)
void com.android.server.LightsService$Light.setBrightness(int,int)
void com.android.server.LightsService$Light.setColor(int)
void com.android.server.LightsService$Light.setFlashing(int,int,int,int)
void com.android.server.LocationManagerService.addTestProvider(String,ProviderProperties)
void com.android.server.LocationManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.LocationManagerService.removeTestProvider(String)
void com.android.server.LocationManagerService.setTestProviderEnabled(String,boolean)
void com.android.server.LocationManagerService.setTestProviderLocation(String,Location)
void com.android.server.LocationManagerService.setTestProviderStatus(String,int,Bundle,long)
void com.android.server.MountService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.MountService.setUsbMassStorageEnabled(boolean)
void com.android.server.NativeDaemonConnector$ResponseQueue.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.NativeDaemonConnector.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.NetworkManagementService.addIdleTimer(String,int,String)
void com.android.server.NetworkManagementService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.NetworkManagementService.enableIpv6(String)
void com.android.server.NetworkManagementService.enableNat(String,String)
void com.android.server.NetworkManagementService.setAccessPoint(WifiConfiguration,String)
void com.android.server.NetworkManagementService.setDefaultInterfaceForDns(String)
void com.android.server.NetworkManagementService.setDnsForwarders(String[])
void com.android.server.NetworkManagementService.setDnsServersForInterface(String,String[])
void com.android.server.NetworkManagementService.setFirewallEgressDestRule(String,int,boolean)
void com.android.server.NetworkManagementService.setFirewallEgressSourceRule(String,boolean)
void com.android.server.NetworkManagementService.setFirewallInterfaceRule(String,boolean)
void com.android.server.NetworkManagementService.setFirewallUidRule(int,boolean)
void com.android.server.NetworkManagementService.setGlobalAlert(long)
void com.android.server.NetworkManagementService.setInterfaceAlert(String,long)
void com.android.server.NetworkManagementService.setInterfaceConfig(String,InterfaceConfiguration)
void com.android.server.NetworkManagementService.setInterfaceDown(String)
void com.android.server.NetworkManagementService.setInterfaceIpv6PrivacyExtensions(String,boolean)
void com.android.server.NetworkManagementService.setInterfaceQuota(String,long)
void com.android.server.NetworkManagementService.setInterfaceThrottle(String,int,int)
void com.android.server.NetworkManagementService.setInterfaceUp(String)
void com.android.server.NetworkManagementService.setIpForwardingEnabled(boolean)
void com.android.server.NetworkManagementService.setUidNetworkRules(int,boolean)
void com.android.server.NetworkManagementService.startReverseTethering(String)
void com.android.server.NotificationManagerService$NotificationRecord.dump(PrintWriter,String,Context)
void com.android.server.NotificationManagerService$ToastRecord.dump(PrintWriter,String)
void com.android.server.NotificationManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.NotificationManagerService.enqueueNotificationInternal(String,int,int,String,int,Notification,int[],int)
void com.android.server.NotificationManagerService.enqueueToast(String,ITransientNotification,int)
void com.android.server.NotificationManagerService.setNotificationsEnabledForPackage(String,boolean)
void com.android.server.NsdService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.NsdService.setEnabled(boolean)
void com.android.server.PackageManagerBackupAgent.onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
void com.android.server.PackageManagerBackupAgent.onRestore(BackupDataInput,int,ParcelFileDescriptor)
void com.android.server.PreferredComponent.dump(PrintWriter,String,Object)
void com.android.server.RecognitionManagerService.setCurRecognizer(ComponentName,int)
void com.android.server.SamplingProfilerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.StatusBarManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.StatusBarManagerService.setHardKeyboardEnabled(boolean)
void com.android.server.StatusBarManagerService.setIcon(String,String,int,int,String)
void com.android.server.StatusBarManagerService.setIconVisibility(String,boolean)
void com.android.server.StatusBarManagerService.setSystemUiVisibility(int,int)
void com.android.server.StatusBarManagerService.updateNotification(IBinder,StatusBarNotification)
void com.android.server.TelephonyRegistry.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.TelephonyRegistry.notifyCallForwardingChanged(boolean)
void com.android.server.TelephonyRegistry.notifyCallState(int,String)
void com.android.server.TelephonyRegistry.notifyCellLocation(Bundle)
void com.android.server.TelephonyRegistry.notifyDataActivity(int)
void com.android.server.TelephonyRegistry.notifyDataConnection(int,boolean,String,String,String,LinkProperties,LinkCapabilities,int,boolean)
void com.android.server.TelephonyRegistry.notifyDataConnectionFailed(String,String)
void com.android.server.TelephonyRegistry.notifyMessageWaitingChanged(boolean)
void com.android.server.TelephonyRegistry.notifyOtaspChanged(int)
void com.android.server.TelephonyRegistry.notifyServiceState(ServiceState)
void com.android.server.TelephonyRegistry.notifySignalStrength(SignalStrength)
void com.android.server.TextServicesManagerService$TextServicesSettings.putSelectedSpellChecker(String)
void com.android.server.TextServicesManagerService$TextServicesSettings.putSelectedSpellCheckerSubtype(int)
void com.android.server.TextServicesManagerService$TextServicesSettings.setSpellCheckerEnabled(boolean)
void com.android.server.TextServicesManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.TextServicesManagerService.getSpellCheckerService(String,String,ITextServicesSessionListener,ISpellCheckerSessionListener,Bundle)
void com.android.server.TextServicesManagerService.setCurrentSpellChecker(String,String)
void com.android.server.TextServicesManagerService.setCurrentSpellCheckerSubtype(String,int)
void com.android.server.TextServicesManagerService.setSpellCheckerEnabled(boolean)
void com.android.server.ThrottleService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.UiModeManagerService.disableCarMode(int)
void com.android.server.UiModeManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.UiModeManagerService.enableCarMode(int)
void com.android.server.UiModeManagerService.setNightMode(int)
void com.android.server.UpdateLockService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.UpdateLockService.sendLockChangedBroadcast(boolean)
void com.android.server.WallpaperManagerService$MyPackageMonitor.onPackageUpdateFinished(String,int)
void com.android.server.WallpaperManagerService$MyPackageMonitor.onPackageUpdateStarted(String,int)
void com.android.server.WallpaperManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.WallpaperManagerService.setDimensionHints(int,int)
void com.android.server.WallpaperManagerService.setWallpaperComponent(ComponentName)
void com.android.server.WallpaperManagerService.settingsRestored()
void com.android.server.WallpaperManagerService.switchUser(int,IRemoteCallback)
void com.android.server.WifiService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.WifiService.setCountryCode(String,boolean)
void com.android.server.WifiService.setFrequencyBand(int,boolean)
void com.android.server.WifiService.setWifiApConfiguration(WifiConfiguration)
void com.android.server.WifiService.setWifiApEnabled(WifiConfiguration,boolean)
void com.android.server.WifiService.startScan(boolean)
void com.android.server.WiredAccessoryManager.notifyWiredAccessoryChanged(long,int,int)
void com.android.server.accessibility.AccessibilityManagerService$MainHandler.handleMessage(Message)
void com.android.server.accessibility.AccessibilityManagerService$Service.<init>(AccessibilityManagerService,int,ComponentName,AccessibilityServiceInfo,boolean)
void com.android.server.accessibility.AccessibilityManagerService$Service.notifyAccessibilityEvent(AccessibilityEvent)
void com.android.server.accessibility.AccessibilityManagerService$Service.notifyGesture(int)
void com.android.server.accessibility.AccessibilityManagerService$Service.setDynamicallyConfigurableProperties(AccessibilityServiceInfo)
void com.android.server.accessibility.AccessibilityManagerService$Service.setServiceInfo(AccessibilityServiceInfo)
void com.android.server.accessibility.ScreenMagnifier$MagnificationController.setAccessibilityTransformation(ScreenMagnifier$MagnificationController$MagnificationSpec)
void com.android.server.accessibility.ScreenMagnifier$MagnificationController.setMagnifiedRegionCenter(float,float,boolean)
void com.android.server.accessibility.ScreenMagnifier$MagnificationController.setScale(float,float,float,boolean)
void com.android.server.accessibility.ScreenMagnifier$MagnificationController.setScaleAndMagnifiedRegionCenter(float,float,float,boolean)
void com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow.setBounds(Rect)
void com.android.server.accessibility.ScreenMagnifier$Viewport.setFrameShown(boolean,boolean)
void com.android.server.am.ActiveServices$ServiceMap.putServiceByIntent(Intent$FilterComparison,int,ServiceRecord)
void com.android.server.am.ActiveServices.setServiceForegroundLocked(ComponentName,IBinder,int,Notification,boolean)
void com.android.server.am.ActivityManagerService$2.handleMessage(Message)
void com.android.server.am.ActivityManagerService$CpuBinder.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService$DbBinder.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService$GraphicsBinder.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService$MemBinder.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService.addErrorToDropBox(String,ProcessRecord,String,ActivityRecord,ActivityRecord,String,String,File,ApplicationErrorReport$CrashInfo)
void com.android.server.am.ActivityManagerService.appNotResponding(ProcessRecord,ActivityRecord,ActivityRecord,boolean,String)
void com.android.server.am.ActivityManagerService.closeSystemDialogsLocked(String)
void com.android.server.am.ActivityManagerService.dispatchUserSwitch(UserStartedState,int,int)
void com.android.server.am.ActivityManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService.dumpApplicationMemoryUsage(FileDescriptor,PrintWriter,String,String[],boolean,PrintWriter,StringBuilder,StringBuilder)
void com.android.server.am.ActivityManagerService.dumpDbInfo(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService.dumpGraphicsHardwareUsage(FileDescriptor,PrintWriter,String[])
void com.android.server.am.ActivityManagerService.dumpMemItems(PrintWriter,String,ArrayList,boolean)
void com.android.server.am.ActivityManagerService.ensurePackageDexOpt(String)
void com.android.server.am.ActivityManagerService.finishUserSwitch(UserStartedState)
void com.android.server.am.ActivityManagerService.grantUriPermissionUncheckedLocked(int,String,Uri,int,UriPermissionOwner)
void com.android.server.am.ActivityManagerService.publishContentProviders(IApplicationThread,List)
void com.android.server.am.ActivityManagerService.sendUserSwitchBroadcastsLocked(int,int)
void com.android.server.am.ActivityManagerService.setAlwaysFinish(boolean)
void com.android.server.am.ActivityManagerService.setDebugApp(String,boolean,boolean)
void com.android.server.am.ActivityManagerService.setFrontActivityScreenCompatMode(int)
void com.android.server.am.ActivityManagerService.setPackageAskScreenCompat(String,boolean)
void com.android.server.am.ActivityManagerService.setPackageScreenCompatMode(String,int)
void com.android.server.am.ActivityManagerService.setProcessForeground(IBinder,int,boolean)
void com.android.server.am.ActivityManagerService.setRequestedOrientation(IBinder,int)
void com.android.server.am.ActivityManagerService.setServiceForeground(ComponentName,IBinder,int,Notification,boolean)
void com.android.server.am.ActivityManagerService.signalPersistentProcesses(int)
void com.android.server.am.ActivityManagerService.updateConfiguration(Configuration)
void com.android.server.am.ActivityManagerService.updatePersistentConfiguration(Configuration)
void com.android.server.am.ActivityRecord.dump(PrintWriter,String)
void com.android.server.am.ActivityRecord.startFreezingScreenLocked(ProcessRecord,int)
void com.android.server.am.ActivityStack.ensureActivitiesVisibleLocked(ActivityRecord,ActivityRecord,String,int)
void com.android.server.am.ActivityStack.sendActivityResultLocked(int,ActivityRecord,String,int,int,Intent)
void com.android.server.am.AppBindRecord.dump(PrintWriter,String)
void com.android.server.am.AppBindRecord.dumpInIntentBind(PrintWriter,String)
void com.android.server.am.AppErrorDialog.<init>(Context,ActivityManagerService,AppErrorResult,ProcessRecord)
void com.android.server.am.BatteryStatsService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.BatteryStatsService.setBatteryState(int,int,int,int,int,int)
void com.android.server.am.BroadcastFilter.dump(PrintWriter,String)
void com.android.server.am.BroadcastFilter.dumpBrief(PrintWriter,String)
void com.android.server.am.BroadcastFilter.dumpInReceiverList(PrintWriter,Printer,String)
void com.android.server.am.BroadcastQueue.setBroadcastTimeoutLocked(long)
void com.android.server.am.BroadcastRecord.dump(PrintWriter,String)
void com.android.server.am.CompatModePackages.setFrontActivityAskCompatModeLocked(boolean)
void com.android.server.am.CompatModePackages.setFrontActivityScreenCompatModeLocked(int)
void com.android.server.am.CompatModePackages.setPackageAskCompatModeLocked(String,boolean)
void com.android.server.am.CompatModePackages.setPackageScreenCompatModeLocked(String,int)
void com.android.server.am.ConnectionRecord.dump(PrintWriter,String)
void com.android.server.am.ContentProviderRecord.addExternalProcessHandleLocked(IBinder)
void com.android.server.am.EventLogTags.writeAmDropProcess(int)
void com.android.server.am.EventLogTags.writeAmLowMemory(int)
void com.android.server.am.EventLogTags.writeAmSwitchUser(int)
void com.android.server.am.EventLogTags.writeBootProgressAmsReady(long)
void com.android.server.am.EventLogTags.writeBootProgressEnableScreen(long)
void com.android.server.am.EventLogTags.writeConfigurationChanged(int)
void com.android.server.am.IntentBindRecord.dump(PrintWriter,String)
void com.android.server.am.IntentBindRecord.dumpInService(PrintWriter,String)
void com.android.server.am.ProcessRecord.dump(PrintWriter,String)
void com.android.server.am.ReceiverList.dump(PrintWriter,String)
void com.android.server.am.ServiceRecord.dump(PrintWriter,String)
void com.android.server.am.ServiceRecord.dumpStartList(PrintWriter,String,List,long)
void com.android.server.am.UsageStatsService$PkgUsageStatsExtended.addLaunchCount(String)
void com.android.server.am.UsageStatsService$PkgUsageStatsExtended.addLaunchTime(String,int)
void com.android.server.am.UsageStatsService$PkgUsageStatsExtended.writeToParcel(Parcel)
void com.android.server.am.UsageStatsService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.am.UsageStatsService.noteResumeComponent(ComponentName)
void com.android.server.connectivity.Tethering$TetherInterfaceSM.setLastErrorAndTransitionToInitialState(int)
void com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState.notify(int)
void com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState.notifyTetheredOfNewUpstreamIface(String)
void com.android.server.connectivity.Tethering.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.connectivity.Tethering.interfaceAdded(String)
void com.android.server.connectivity.Tethering.interfaceStatusChanged(String,boolean)
void com.android.server.display.DisplayAdapter.dumpLocked(PrintWriter)
void com.android.server.display.DisplayDevice.dumpLocked(PrintWriter)
void com.android.server.display.DisplayDeviceInfo.setAssumedDensityForExternalDisplay(int,int)
void com.android.server.display.DisplayManagerService$CallbackRecord.notifyDisplayEventAsync(int,int)
void com.android.server.display.DisplayManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.display.DisplayManagerService.setDisplayHasContent(int,boolean,boolean)
void com.android.server.display.DisplayManagerService.setDisplayInfoOverrideFromWindowManager(int,DisplayInfo)
void com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice.dumpLocked(PrintWriter)
void com.android.server.display.LogicalDisplay.dumpLocked(PrintWriter)
void com.android.server.display.LogicalDisplay.setDisplayInfoOverrideFromWindowManagerLocked(DisplayInfo)
void com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle.dumpLocked(PrintWriter)
void com.android.server.display.OverlayDisplayAdapter.dumpLocked(PrintWriter)
void com.android.server.display.OverlayDisplayWindow.dump(PrintWriter)
void com.android.server.display.WifiDisplayAdapter.dumpLocked(PrintWriter)
void com.android.server.display.WifiDisplayController.dump(PrintWriter)
void com.android.server.dreams.DreamController.dump(PrintWriter)
void com.android.server.dreams.DreamController.startDream(Binder,ComponentName,boolean,int)
void com.android.server.dreams.DreamManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.dreams.DreamManagerService.setDreamComponents(ComponentName[])
void com.android.server.dreams.DreamManagerService.testDream(ComponentName)
void com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord.notifyInputDevicesChanged(int[])
void com.android.server.input.InputManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.input.InputManagerService.setCurrentKeyboardLayoutForInputDevice(String,String)
void com.android.server.input.InputManagerService.setDisplayViewports(DisplayViewport,DisplayViewport)
void com.android.server.input.InputManagerService.setFocusedApplication(InputApplicationHandle)
void com.android.server.input.InputManagerService.setInputDispatchMode(boolean,boolean)
void com.android.server.input.InputManagerService.setInputWindows(InputWindowHandle[])
void com.android.server.input.InputManagerService.setSystemUiVisibility(int)
void com.android.server.input.InputManagerService.vibrate(int,long[],int,IBinder)
void com.android.server.location.GeofenceManager.dump(PrintWriter)
void com.android.server.location.GpsLocationProvider.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.location.GpsLocationProvider.setRequest(ProviderRequest,WorkSource)
void com.android.server.location.GpsLocationProvider.updateNetworkState(int,NetworkInfo)
void com.android.server.location.LocationFudger.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.location.LocationProviderProxy.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.location.MockProvider.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.location.MockProvider.dump(PrintWriter,String)
void com.android.server.location.MockProvider.setLocation(Location)
void com.android.server.location.MockProvider.setRequest(ProviderRequest,WorkSource)
void com.android.server.location.MockProvider.setStatus(int,Bundle,long)
void com.android.server.location.PassiveProvider.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.location.PassiveProvider.setRequest(ProviderRequest,WorkSource)
void com.android.server.net.NetworkIdentitySet.writeToStream(DataOutputStream)
void com.android.server.net.NetworkPolicyManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.net.NetworkPolicyManagerService.setNetworkPolicies(NetworkPolicy[])
void com.android.server.net.NetworkPolicyManagerService.setUidPolicy(int,int)
void com.android.server.net.NetworkPolicyManagerService.snoozeLimit(NetworkTemplate)
void com.android.server.net.NetworkStatsCollection.write(DataOutputStream)
void com.android.server.net.NetworkStatsRecorder$CombiningRewriter.write(OutputStream)
void com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter.write(OutputStream)
void com.android.server.net.NetworkStatsRecorder.setPersistThreshold(long)
void com.android.server.net.NetworkStatsService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.net.NetworkStatsService.setUidForeground(int,boolean)
void com.android.server.pm.GrantedPermissions.setFlags(int)
void com.android.server.pm.PackageManagerService$ActivityIntentResolver.addActivity(PackageParser$Activity,String)
void com.android.server.pm.PackageManagerService$ActivityIntentResolver.dumpFilter(PrintWriter,String,IntentFilter)
void com.android.server.pm.PackageManagerService$ActivityIntentResolver.dumpFilter(PrintWriter,String,PackageParser$ActivityIntentInfo)
void com.android.server.pm.PackageManagerService$AppDirObserver.onEvent(int,String)
void com.android.server.pm.PackageManagerService$DumpState.setDump(int)
void com.android.server.pm.PackageManagerService$DumpState.setOptionEnabled(int)
void com.android.server.pm.PackageManagerService$PackageRemovedInfo.sendBroadcast(boolean,boolean,boolean)
void com.android.server.pm.PackageManagerService$ServiceIntentResolver.addService(PackageParser$Service)
void com.android.server.pm.PackageManagerService$ServiceIntentResolver.dumpFilter(PrintWriter,String,IntentFilter)
void com.android.server.pm.PackageManagerService$ServiceIntentResolver.dumpFilter(PrintWriter,String,PackageParser$ServiceIntentInfo)
void com.android.server.pm.PackageManagerService.addPreferredActivity(IntentFilter,int,ComponentName[],ComponentName,int)
void com.android.server.pm.PackageManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.pm.PackageManagerService.extendVerificationTimeout(int,int,long)
void com.android.server.pm.PackageManagerService.grantPermission(String,String)
void com.android.server.pm.PackageManagerService.movePackage(String,IPackageMoveObserver,int)
void com.android.server.pm.PackageManagerService.readPermission(XmlPullParser,String)
void com.android.server.pm.PackageManagerService.reportSettingsProblem(int,String)
void com.android.server.pm.PackageManagerService.sendPackageBroadcast(String,String,Bundle,String,IIntentReceiver,int[])
void com.android.server.pm.PackageManagerService.setApplicationEnabledSetting(String,int,int,int)
void com.android.server.pm.PackageManagerService.setComponentEnabledSetting(ComponentName,int,int,int)
void com.android.server.pm.PackageManagerService.setInstallerPackageName(String,String)
void com.android.server.pm.PackageManagerService.setPackageStoppedState(String,boolean,int)
void com.android.server.pm.PackageManagerService.setPermissionEnforced(String,boolean)
void com.android.server.pm.PackageSettingBase.copyFrom(PackageSettingBase)
void com.android.server.pm.PackageSettingBase.setDisabledComponentsCopy(HashSet,int)
void com.android.server.pm.PackageSettingBase.setEnabledComponentsCopy(HashSet,int)
void com.android.server.pm.PackageVerificationState.addSufficientVerifier(int)
void com.android.server.pm.PreferredIntentResolver.dumpFilter(PrintWriter,String,IntentFilter)
void com.android.server.pm.PreferredIntentResolver.dumpFilter(PrintWriter,String,PreferredActivity)
void com.android.server.pm.Settings.createNewUserLILPw(Installer,int,File)
void com.android.server.pm.Settings.setInstallStatus(String,int)
void com.android.server.pm.Settings.setInstallerPackageName(String,String)
void com.android.server.pm.UserManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.pm.UserManagerService.finishRemoveUser(int)
void com.android.server.pm.UserManagerService.makeInitialized(int)
void com.android.server.pm.UserManagerService.setUserIcon(int,Bitmap)
void com.android.server.pm.UserManagerService.setUserName(int,String)
void com.android.server.pm.UserManagerService.userForeground(int)
void com.android.server.power.DisplayPowerController.dump(PrintWriter)
void com.android.server.power.DisplayPowerState$1.setValue(DisplayPowerState,float)
void com.android.server.power.DisplayPowerState$1.setValue(Object,float)
void com.android.server.power.DisplayPowerState$2.setValue(DisplayPowerState,int)
void com.android.server.power.DisplayPowerState$2.setValue(Object,int)
void com.android.server.power.DisplayPowerState$PhotonicModulator.dump(PrintWriter)
void com.android.server.power.DisplayPowerState.dump(PrintWriter)
void com.android.server.power.ElectronBeam.dump(PrintWriter)
void com.android.server.power.PowerManagerService$WakeLock.updateProperties(int,String,WorkSource,int,int)
void com.android.server.power.PowerManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.power.PowerManagerService.setAttentionLight(boolean,int)
void com.android.server.power.PowerManagerService.setButtonBrightnessOverrideFromWindowManager(int)
void com.android.server.power.PowerManagerService.setMaximumScreenOffTimeoutFromDeviceAdmin(int)
void com.android.server.power.PowerManagerService.setScreenBrightnessOverrideFromWindowManager(int)
void com.android.server.power.PowerManagerService.setStayOnSetting(int)
void com.android.server.power.PowerManagerService.setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)
void com.android.server.power.PowerManagerService.setTemporaryScreenBrightnessSettingOverride(int)
void com.android.server.power.PowerManagerService.setUserActivityTimeoutOverrideFromWindowManager(long)
void com.android.server.power.WirelessChargerDetector.dump(PrintWriter)
void com.android.server.sip.SipHelper.sendBye(Dialog)
void com.android.server.sip.SipHelper.sendInviteAck(ResponseEvent,Dialog)
void com.android.server.sip.SipHelper.sendReferNotify(Dialog,String)
void com.android.server.sip.SipService$AutoRegistrationProcess.setListener(ISipSessionListener)
void com.android.server.sip.SipService$SipSessionGroupExt.setListener(ISipSessionListener)
void com.android.server.sip.SipService$SipSessionGroupExt.setWakeupTimer(SipWakeupTimer)
void com.android.server.sip.SipService.open(SipProfile)
void com.android.server.sip.SipService.open3(SipProfile,PendingIntent,ISipSessionListener)
void com.android.server.sip.SipSessionGroup$SipSessionImpl.setListener(ISipSessionListener)
void com.android.server.sip.SipSessionGroup$SipSessionImpl.startKeepAliveProcess(int,SipProfile,SipSessionGroup$KeepAliveProcessCallback)
void com.android.server.sip.SipSessionGroup$SipSessionImpl.startKeepAliveProcess(int,SipSessionGroup$KeepAliveProcessCallback)
void com.android.server.sip.SipWakeupTimer.set(int,Runnable)
void com.android.server.usb.UsbDebuggingManager.access$700(UsbDebuggingManager,String)
void com.android.server.usb.UsbDebuggingManager.dump(FileDescriptor,PrintWriter)
void com.android.server.usb.UsbDebuggingManager.setAdbEnabled(boolean)
void com.android.server.usb.UsbDeviceManager$UsbHandler.dump(FileDescriptor,PrintWriter)
void com.android.server.usb.UsbDeviceManager$UsbHandler.sendMessage(int,Object)
void com.android.server.usb.UsbDeviceManager$UsbHandler.sendMessage(int,Object,boolean)
void com.android.server.usb.UsbDeviceManager$UsbHandler.sendMessage(int,boolean)
void com.android.server.usb.UsbDeviceManager.dump(FileDescriptor,PrintWriter)
void com.android.server.usb.UsbDeviceManager.setCurrentFunctions(String,boolean)
void com.android.server.usb.UsbDeviceManager.setMassStorageBackingFile(String)
void com.android.server.usb.UsbHostManager.dump(FileDescriptor,PrintWriter)
void com.android.server.usb.UsbHostManager.getDeviceList(Bundle)
void com.android.server.usb.UsbService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.usb.UsbService.setAccessoryPackage(UsbAccessory,String,int)
void com.android.server.usb.UsbService.setCurrentFunction(String,boolean)
void com.android.server.usb.UsbService.setDevicePackage(UsbDevice,String,int)
void com.android.server.usb.UsbService.setMassStorageBackingFile(String)
void com.android.server.usb.UsbSettingsManager.accessoryAttached(UsbAccessory)
void com.android.server.usb.UsbSettingsManager.accessoryDetached(UsbAccessory)
void com.android.server.usb.UsbSettingsManager.deviceAttached(UsbDevice)
void com.android.server.usb.UsbSettingsManager.deviceDetached(UsbDevice)
void com.android.server.usb.UsbSettingsManager.dump(FileDescriptor,PrintWriter)
void com.android.server.usb.UsbSettingsManager.grantAccessoryPermission(UsbAccessory,int)
void com.android.server.usb.UsbSettingsManager.grantDevicePermission(UsbDevice,int)
void com.android.server.usb.UsbSettingsManager.requestPermission(UsbAccessory,String,PendingIntent)
void com.android.server.usb.UsbSettingsManager.requestPermission(UsbDevice,String,PendingIntent)
void com.android.server.usb.UsbSettingsManager.setAccessoryPackage(UsbAccessory,String)
void com.android.server.usb.UsbSettingsManager.setDevicePackage(UsbDevice,String)
void com.android.server.wm.AppWindowToken.dump(PrintWriter,String)
void com.android.server.wm.BlackFrame$BlackSurface.setMatrix(Matrix)
void com.android.server.wm.BlackFrame.setMatrix(Matrix)
void com.android.server.wm.DimAnimator$Parameters.printTo(String,PrintWriter)
void com.android.server.wm.DimAnimator.printTo(String,PrintWriter)
void com.android.server.wm.DimSurface.printTo(String,PrintWriter)
void com.android.server.wm.DisplayContent.dump(String,PrintWriter)
void com.android.server.wm.DragState.sendDragStartedIfNeededLw(WindowState)
void com.android.server.wm.InputMonitor.notifyLidSwitchChanged(long,boolean)
void com.android.server.wm.InputMonitor.setFocusedAppLw(AppWindowToken)
void com.android.server.wm.InputMonitor.setUpdateInputWindowsNeededLw()
void com.android.server.wm.InputMonitor.updateInputWindowsLw(boolean)
void com.android.server.wm.ScreenRotationAnimation.printTo(String,PrintWriter)
void com.android.server.wm.Session.setInsets(IWindow,int,Rect,Rect,Region)
void com.android.server.wm.Session.setTransparentRegion(IWindow,Region)
void com.android.server.wm.Session.setUniverseTransform(IBinder,float,float,float,float,float,float,float)
void com.android.server.wm.Session.setWallpaperPosition(IBinder,float,float,float,float)
void com.android.server.wm.StrictModeFlash.setVisibility(boolean)
void com.android.server.wm.WindowAnimator.dumpLocked(PrintWriter,String,boolean)
void com.android.server.wm.WindowAnimator.setAppLayoutChanges(AppWindowAnimator,int,String)
void com.android.server.wm.WindowAnimator.setPendingLayoutChanges(int,int)
void com.android.server.wm.WindowAnimator.setScreenRotationAnimationLocked(int,ScreenRotationAnimation)
void com.android.server.wm.WindowManagerService.addAppToken(int,int,IApplicationToken,int,int,boolean,boolean)
void com.android.server.wm.WindowManagerService.addDisplayContentChangeListener(int,IDisplayContentChangeListener)
void com.android.server.wm.WindowManagerService.addWindowToken(IBinder,int)
void com.android.server.wm.WindowManagerService.createDisplayContentLocked(Display)
void com.android.server.wm.WindowManagerService.dump(FileDescriptor,PrintWriter,String[])
void com.android.server.wm.WindowManagerService.dumpAnimatorLocked(PrintWriter,String[],boolean)
void com.android.server.wm.WindowManagerService.dumpPolicyLocked(PrintWriter,String[],boolean)
void com.android.server.wm.WindowManagerService.dumpSessionsLocked(PrintWriter,boolean)
void com.android.server.wm.WindowManagerService.dumpTokensLocked(PrintWriter,boolean)
void com.android.server.wm.WindowManagerService.dumpWindowsLocked(PrintWriter,boolean,ArrayList)
void com.android.server.wm.WindowManagerService.dumpWindowsNoHeaderLocked(PrintWriter,boolean,ArrayList)
void com.android.server.wm.WindowManagerService.getVisibleWindowsForDisplay(int,List)
void com.android.server.wm.WindowManagerService.saveANRStateLocked(AppWindowToken,WindowState)
void com.android.server.wm.WindowManagerService.setAnimDimParams(int,DimAnimator$Parameters)
void com.android.server.wm.WindowManagerService.setAnimationScale(int,float)
void com.android.server.wm.WindowManagerService.setAnimationScales(float[])
void com.android.server.wm.WindowManagerService.setAppStartingWindow(IBinder,String,int,CompatibilityInfo,CharSequence,int,int,int,IBinder,boolean)
void com.android.server.wm.WindowManagerService.setFocusedApp(IBinder,boolean)
void com.android.server.wm.WindowManagerService.setForcedDisplayDensity(int,int)
void com.android.server.wm.WindowManagerService.setForcedDisplaySize(int,int,int)
void com.android.server.wm.WindowManagerService.setInputFilter(IInputFilter)
void com.android.server.wm.WindowManagerService.setNewConfiguration(Configuration)
void com.android.server.wm.WindowManagerService.setStrictModeVisualIndicatorPreference(String)
void com.android.server.wm.WindowManagerService.setTransparentRegionHint(WindowStateAnimator,Region)
void com.android.server.wm.WindowManagerService.setTransparentRegionWindow(Session,IWindow,Region)
void com.android.server.wm.WindowManagerService.setUniverseTransformLocked(WindowState,float,float,float,float,float,float,float)
void com.android.server.wm.WindowManagerService.setWindowWallpaperPositionLocked(WindowState,float,float,float,float)
void com.android.server.wm.WindowManagerService.startAppFreezingScreenLocked(AppWindowToken,int)
void com.android.server.wm.WindowManagerService.startFreezingScreen(int,int)
void com.android.server.wm.WindowManagerService.updateRotation(boolean,boolean)
void com.android.server.wm.WindowManagerService.updateRotationUnchecked(boolean,boolean)
void com.android.server.wm.WindowManagerService.updateStatusBarVisibilityLocked(int)
void com.android.server.wm.WindowManagerService.updateWallpaperOffsetLocked(WindowState,boolean)
void com.android.server.wm.WindowState.dump(PrintWriter,String,boolean)
void com.android.server.wm.WindowStateAnimator$SurfaceTrace.setPosition(float,float)
void com.android.server.wm.WindowStateAnimator$SurfaceTrace.setSize(int,int)
void com.android.server.wm.WindowStateAnimator$SurfaceTrace.setWindowCrop(Rect)
void com.android.server.wm.WindowStateAnimator.dump(PrintWriter,String,boolean)
void com.android.server.wm.WindowStateAnimator.setSurfaceBoundariesLocked(boolean)
void com.android.server.wm.WindowStateAnimator.setTransparentRegionHint(Region)
void com.android.server.wm.WindowStateAnimator.setWallpaperOffset(int,int)
void com.android.soundrecorder.RemainingTimeCalculator.setBitRate(int)
void com.android.soundrecorder.RemainingTimeCalculator.setFileSizeLimit(File,long)
void com.android.soundrecorder.SoundRecorder.onCreate(Bundle)
void com.android.systemui.ExpandHelper$ViewScaler.setHeight(float)
void com.android.systemui.ExpandHelper.setGlow(float)
void com.android.systemui.SearchPanelView.setStatusBarView(View)
void com.android.systemui.SystemUI.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.SystemUIService.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.media.NotificationPlayer.setUsesWakeLock(Context)
void com.android.systemui.media.RingtonePlayer.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.power.PowerUI.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.recent.RecentsHorizontalScrollView.setLayoutTransition(LayoutTransition)
void com.android.systemui.recent.RecentsHorizontalScrollView.setMinSwipeAlpha(float)
void com.android.systemui.recent.RecentsPanelView.setMinSwipeAlpha(float)
void com.android.systemui.recent.RecentsVerticalScrollView.setLayoutTransition(LayoutTransition)
void com.android.systemui.recent.RecentsVerticalScrollView.setMinSwipeAlpha(float)
void com.android.systemui.screenshot.GlobalScreenshot.notifyScreenshotError(Context,NotificationManager)
void com.android.systemui.screenshot.SaveImageInBackgroundTask.onPostExecute(SaveImageInBackgroundData)
void com.android.systemui.statusbar.AnimatedImageView.setImageDrawable(Drawable)
void com.android.systemui.statusbar.AnimatedImageView.setImageResource(int)
void com.android.systemui.statusbar.CommandQueue$H.handleMessage(Message)
void com.android.systemui.statusbar.CommandQueue.setHardKeyboardStatus(boolean,boolean)
void com.android.systemui.statusbar.CommandQueue.setIcon(int,StatusBarIcon)
void com.android.systemui.statusbar.CommandQueue.setNavigationIconHints(int)
void com.android.systemui.statusbar.CommandQueue.setSystemUiVisibility(int,int)
void com.android.systemui.statusbar.DelegateViewHelper.setInitialTouchRegion(View[])
void com.android.systemui.statusbar.phone.NavigationBarView.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.statusbar.phone.NavigationBarView.notifyScreenOn(boolean)
void com.android.systemui.statusbar.phone.NavigationBarView.setBar(BaseStatusBar)
void com.android.systemui.statusbar.phone.NavigationBarView.setDelegateView(View)
void com.android.systemui.statusbar.phone.NavigationBarView.setDisabledFlags(int)
void com.android.systemui.statusbar.phone.NavigationBarView.setLowProfile(boolean)
void com.android.systemui.statusbar.phone.NavigationBarView.setMenuVisibility(boolean)
void com.android.systemui.statusbar.phone.NavigationBarView.setNavigationIconHints(int)
void com.android.systemui.statusbar.phone.NavigationBarView.setSlippery(boolean)
void com.android.systemui.statusbar.phone.PanelBar.setPanelHolder(PanelHolder)
void com.android.systemui.statusbar.phone.PanelHolder.setSelectedPanel(PanelView)
void com.android.systemui.statusbar.phone.PanelView.setExpandedFraction(float)
void com.android.systemui.statusbar.phone.PanelView.setExpandedHeight(float)
void com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setAlpha(int)
void com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setBounds(Rect)
void com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setBounds(int,int,int,int)
void com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable.setColorFilter(ColorFilter)
void com.android.systemui.statusbar.phone.PhoneStatusBar.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.statusbar.phone.PhoneStatusBar.setHardKeyboardStatus(boolean,boolean)
void com.android.systemui.statusbar.phone.PhoneStatusBar.setLightsOn(boolean)
void com.android.systemui.statusbar.phone.PhoneStatusBar.setSystemUiVisibility(int,int)
void com.android.systemui.statusbar.phone.PhoneStatusBar.startActivityDismissingKeyguard(Intent,boolean)
void com.android.systemui.statusbar.phone.PhoneStatusBarView.startOpeningPanel(PanelView)
void com.android.systemui.statusbar.phone.QuickSettings.setImeWindowStatus(boolean)
void com.android.systemui.statusbar.phone.QuickSettingsTileView.setContent(int,LayoutInflater)
void com.android.systemui.statusbar.phone.SettingsPanelView.setBar(PanelBar)
void com.android.systemui.statusbar.policy.NetworkController.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.statusbar.policy.NotificationRowLayout.setLayoutTransitionsEnabled(boolean)
void com.android.systemui.statusbar.policy.ToggleSlider.setChecked(boolean)
void com.android.systemui.statusbar.policy.ToggleSlider.setMax(int)
void com.android.systemui.statusbar.policy.ToggleSlider.setValue(int)
void com.android.systemui.statusbar.tablet.InputMethodButton.setIconImage(int)
void com.android.systemui.statusbar.tablet.NotificationPanel.setSettingsEnabled(boolean)
void com.android.systemui.statusbar.tablet.NotificationPanelTitle.setPressed(boolean)
void com.android.systemui.statusbar.tablet.TabletStatusBar.dump(FileDescriptor,PrintWriter,String[])
void com.android.systemui.statusbar.tablet.TabletStatusBar.setHardKeyboardStatus(boolean,boolean)
void com.android.systemui.statusbar.tablet.TabletStatusBar.setLightsOn(boolean)
void com.android.systemui.statusbar.tablet.TabletStatusBar.setSystemUiVisibility(int,int)
void com.android.systemui.statusbar.tablet.TabletStatusBarView.setBar(BaseStatusBar)
void com.android.systemui.statusbar.tablet.TabletStatusBarView.setDelegateView(View)
void com.android.systemui.statusbar.tablet.TabletStatusBarView.setIgnoreChildren(int,View,View)
void com.android.systemui.usb.UsbResolverActivity.onIntentSelected(ResolveInfo,Intent,boolean)
void com.android.uiautomator.core.Tracer.setOutputFilename(String)
void com.android.uiautomator.core.UiDevice.dumpWindowHierarchy(String)
void com.android.uiautomator.core.UiDevice.registerWatcher(String,UiWatcher)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$2.uncaughtException(Thread,Throwable)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher.instrumentationFinished(ComponentName,int,Bundle)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher.instrumentationStatus(ComponentName,int,Bundle)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.addError(Test,Throwable)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.addFailure(Test,AssertionFailedError)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.print(TestResult,long,Bundle)
void com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter.startTest(Test)
void com.android.vcard.VCardProperty.addParameter(String,String)
void com.android.vcard.VCardProperty.setValues(String[])
void com.android.videoeditor.KenBurnsActivity.onCreate(Bundle)
void com.android.videoeditor.LoadPreviewBitmapTask.onPostExecute(Bitmap)
void com.android.videoeditor.OverlayTitleTemplatePicker.onListItemClick(ListView,View,int,long)
void com.android.videoeditor.TransitionsActivity.onListItemClick(ListView,View,int,long)
void com.android.videoeditor.VideoEditorActivity.setAspectRatio(int)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onAudioTrackBoundariesSet(String,String,long,long,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onEffectAdded(String,MovieEffect,String,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onEffectRemoved(String,String,String,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onMediaItemBoundariesSet(String,String,long,long,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onMediaItemDurationSet(String,String,long,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onOverlayUserAttributesSet(String,String,String,Bundle,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onTransitionDurationSet(String,String,long,Exception)
void com.android.videoeditor.VideoEditorBaseActivity$ServiceListener.onVideoEditorLoaded(String,VideoEditorProject,List,List,Exception)
void com.android.videoeditor.service.ApiService$8.onProgress(int)
void com.android.videoeditor.service.ApiService$9.onProgress(int)
void com.android.videoeditor.service.ApiService$ServiceMediaProcessingProgressListener.onProgress(Object,int,int)
void com.android.videoeditor.service.ApiService.addAudioTrack(Context,String,String,Uri,boolean)
void com.android.videoeditor.service.ApiService.addEffectColor(Context,String,String,String,long,long,int,int)
void com.android.videoeditor.service.ApiService.addEffectKenBurns(Context,String,String,String,long,long,Rect,Rect)
void com.android.videoeditor.service.ApiService.addMediaItemImageUri(Context,String,String,String,Uri,int,long,String)
void com.android.videoeditor.service.ApiService.addMediaItemVideoUri(Context,String,String,String,Uri,int,String)
void com.android.videoeditor.service.ApiService.addOverlay(Context,String,String,String,Bundle,long,long)
void com.android.videoeditor.service.ApiService.applyTheme(Context,String,String)
void com.android.videoeditor.service.ApiService.cancelExportVideoEditor(Context,String,String)
void com.android.videoeditor.service.ApiService.createVideoEditor(Context,String,String,String[],String[],String)
void com.android.videoeditor.service.ApiService.deleteProject(Context,String)
void com.android.videoeditor.service.ApiService.exportVideoEditor(Context,String,String,int,int)
void com.android.videoeditor.service.ApiService.extractAudioTrackAudioWaveform(Context,String,String)
void com.android.videoeditor.service.ApiService.extractMediaItemAudioWaveform(Context,String,String)
void com.android.videoeditor.service.ApiService.getMediaItemThumbnails(Context,String,String,int,int,long,long,int,int,int[])
void com.android.videoeditor.service.ApiService.getTransitionThumbnails(Context,String,String,int)
void com.android.videoeditor.service.ApiService.insertAlphaTransition(Context,String,String,String,long,int,int,int,boolean)
void com.android.videoeditor.service.ApiService.insertCrossfadeTransition(Context,String,String,String,long,int)
void com.android.videoeditor.service.ApiService.insertFadeBlackTransition(Context,String,String,String,long,int)
void com.android.videoeditor.service.ApiService.insertSlidingTransition(Context,String,String,String,long,int,int)
void com.android.videoeditor.service.ApiService.loadMediaItem(Context,String,Uri,String)
void com.android.videoeditor.service.ApiService.loadVideoEditor(Context,String)
void com.android.videoeditor.service.ApiService.moveMediaItem(Context,String,String,String,String)
void com.android.videoeditor.service.ApiService.onIntentProcessed(Intent,VideoEditor,Object,Object,Exception,boolean)
void com.android.videoeditor.service.ApiService.releaseVideoEditor(Context,String)
void com.android.videoeditor.service.ApiService.removeAudioTrack(Context,String,String)
void com.android.videoeditor.service.ApiService.removeEffect(Context,String,String,String)
void com.android.videoeditor.service.ApiService.removeMediaItem(Context,String,String,String)
void com.android.videoeditor.service.ApiService.removeOverlay(Context,String,String,String)
void com.android.videoeditor.service.ApiService.removeTransition(Context,String,String)
void com.android.videoeditor.service.ApiService.saveVideoEditor(Context,String)
void com.android.videoeditor.service.ApiService.setAspectRatio(Context,String,int)
void com.android.videoeditor.service.ApiService.setAudioTrackBoundaries(Context,String,String,long,long)
void com.android.videoeditor.service.ApiService.setAudioTrackDuck(Context,String,String,boolean)
void com.android.videoeditor.service.ApiService.setAudioTrackLoop(Context,String,String,boolean)
void com.android.videoeditor.service.ApiService.setAudioTrackMute(Context,String,String,boolean)
void com.android.videoeditor.service.ApiService.setAudioTrackVolume(Context,String,String,int)
void com.android.videoeditor.service.ApiService.setMediaItemBoundaries(Context,String,String,long,long)
void com.android.videoeditor.service.ApiService.setMediaItemDuration(Context,String,String,long)
void com.android.videoeditor.service.ApiService.setMediaItemMute(Context,String,String,boolean)
void com.android.videoeditor.service.ApiService.setMediaItemRenderingMode(Context,String,String,int)
void com.android.videoeditor.service.ApiService.setMediaItemVolume(Context,String,String,int)
void com.android.videoeditor.service.ApiService.setOverlayDuration(Context,String,String,String,long)
void com.android.videoeditor.service.ApiService.setOverlayStartTime(Context,String,String,String,long)
void com.android.videoeditor.service.ApiService.setOverlayUserAttributes(Context,String,String,String,Bundle)
void com.android.videoeditor.service.ApiService.setTransitionDuration(Context,String,String,long)
void com.android.videoeditor.widgets.AudioTrackLinearLayout.setSelected(boolean)
void com.android.videoeditor.widgets.AudioTrackLinearLayout.setWaveformExtractionComplete(String)
void com.android.videoeditor.widgets.AudioTrackLinearLayout.setWaveformExtractionProgress(String,int)
void com.android.videoeditor.widgets.HorizontalScrollView.draw(Canvas)
void com.android.videoeditor.widgets.HorizontalScrollView.setOverScrollMode(int)
void com.android.videoeditor.widgets.ImageViewTouchBase.setImageBitmapResetBase(Bitmap,boolean)
void com.android.videoeditor.widgets.MediaLinearLayout.setSelected(boolean)
void com.android.videoeditor.widgets.MediaLinearLayout.setSelectedView(int)
void com.android.videoeditor.widgets.OverlayLinearLayout.setSelected(boolean)
void com.android.videoeditor.widgets.OverlayView.setSelected(boolean)
void com.android.videoeditor.widgets.TimelineHorizontalScrollView.setScaleListener(ScaleGestureDetector$SimpleOnScaleGestureListener)
void com.android.videoeditor.widgets.TimelineRelativeLayout.setSelected(boolean)
void com.android.wallpaper.RenderScriptScene.setOffset(float,float,int,int)
void com.android.wallpaper.fall.ScriptC_fall.bind_g_Constants(ScriptField_Constants)
void com.android.wallpaper.galaxy.GalaxyRS.setOffset(float,float,int,int)
void com.android.wallpaper.galaxy.ScriptC_galaxy.bind_Particles(ScriptField_Particle)
void com.android.wallpaper.galaxy.ScriptC_galaxy.bind_vpConstants(ScriptField_VpConsts)
void com.android.wallpaper.galaxy.ScriptField_VpConsts.set(ScriptField_VpConsts$Item,int,boolean)
void com.android.wallpaper.grass.GrassRS.setOffset(float,float,int,int)
void com.android.wallpaper.grass.ScriptC_grass.bind_Blades(ScriptField_Blade)
void com.android.wallpaper.grass.ScriptC_grass.bind_Verticies(ScriptField_Vertex)
void com.android.wallpaper.grass.ScriptField_Blade.set(ScriptField_Blade$Item,int,boolean)
void com.coremedia.iso.IsoTypeWriter.writeIso639(ByteBuffer,String)
void com.coremedia.iso.IsoTypeWriter.writeUInt16(ByteBuffer,int)
void com.coremedia.iso.IsoTypeWriter.writeUInt16BE(ByteBuffer,int)
void com.coremedia.iso.IsoTypeWriter.writeUInt24(ByteBuffer,int)
void com.coremedia.iso.IsoTypeWriter.writeUInt32(ByteBuffer,long)
void com.coremedia.iso.IsoTypeWriter.writeUInt32BE(ByteBuffer,long)
void com.coremedia.iso.IsoTypeWriter.writeUInt64(ByteBuffer,long)
void com.coremedia.iso.IsoTypeWriter.writeUtf8String(ByteBuffer,String)
void com.coremedia.iso.boxes.TrackHeaderBox.getContent(ByteBuffer)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.enableShutterSound(boolean)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setDisplayOrientation(int)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setParameters(Camera$Parameters)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewCallback(Camera$PreviewCallback)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewCallbackWithBuffer(Camera$PreviewCallback)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewDisplay(SurfaceHolder)
void com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl.setPreviewTexture(SurfaceTexture)
void com.google.android.apps.lightcycle.camera.CameraPreview$Util.setPictureWidth(CameraUtility,Camera$Parameters,int)
void com.google.android.apps.lightcycle.camera.CameraUtility.setFrameRate(Camera$Parameters)
void com.google.android.apps.lightcycle.camera.CameraUtility.setPictureWidth(Camera$Parameters,int)
void com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.setFastShutter(boolean)
void com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.setMainView(LightCycleView)
void com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview.setPictureWidth(Camera$Parameters,int)
void com.google.android.apps.lightcycle.camera.TextureCameraPreview.setFastShutter(boolean)
void com.google.android.apps.lightcycle.camera.TextureCameraPreview.setMainView(LightCycleView)
void com.google.android.apps.lightcycle.camera.TextureCameraPreview.setPictureWidth(Camera$Parameters,int)
void com.google.android.apps.lightcycle.math.Matrix3x3d.set(Matrix3x3d)
void com.google.android.apps.lightcycle.math.Matrix3x3d.set(double,double,double,double,double,double,double,double,double)
void com.google.android.apps.lightcycle.math.Matrix3x3d.set(int,int,double)
void com.google.android.apps.lightcycle.math.Matrix3x3d.setColumn(int,Vector3d)
void com.google.android.apps.lightcycle.math.Matrix3x3d.setSameDiagonal(double)
void com.google.android.apps.lightcycle.math.Quaternion.set(Quaternion)
void com.google.android.apps.lightcycle.math.Vector3d.set(Vector3d)
void com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite.setPositions(PointF,PointF,int,int)
void com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite.setPositionsCentered(float,float,int,int)
void com.google.android.apps.lightcycle.opengl.Shader.setTexCoords(FloatBuffer)
void com.google.android.apps.lightcycle.opengl.Shader.setTransform(float[])
void com.google.android.apps.lightcycle.opengl.Shader.setVertices(FloatBuffer)
void com.google.android.apps.lightcycle.opengl.SingleColorShader.setColor(float[])
void com.google.android.apps.lightcycle.opengl.Sprite.setTexture(GLTexture)
void com.google.android.apps.lightcycle.panorama.Button.setPosition(PointF)
void com.google.android.apps.lightcycle.panorama.IncrementalAligner.addImage(String,float[],int)
void com.google.android.apps.lightcycle.panorama.LightCycleNative$NativeUpdatePhotoRenderingCallback.updateTransforms(float[])
void com.google.android.apps.lightcycle.panorama.LightCycleNative.setProgressCallback(int,LightCycleView$ProgressCallback)
void com.google.android.apps.lightcycle.panorama.LightCycleView.requestPhoto(float[],int,int)
void com.google.android.apps.lightcycle.panorama.LightCycleView.setFrameDimensions(int,int)
void com.google.android.apps.lightcycle.panorama.LightCycleView.setLiveImageDisplay(boolean)
void com.google.android.apps.lightcycle.panorama.LightCycleView.setLocationProviderEnabled(boolean)
void com.google.android.apps.lightcycle.panorama.MessageSender.notifyAll(int,float,String)
void com.google.android.apps.lightcycle.panorama.Pano2dPreviewOverlay.setTextureId(int)
void com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay.setTextureId(int)
void com.google.android.apps.lightcycle.panorama.RenderedGui.setDoneButtonVisible(boolean)
void com.google.android.apps.lightcycle.panorama.RenderedGui.setUndoButtonVisible(boolean)
void com.google.android.apps.lightcycle.sensor.OrientationEKF.setHeadingDegrees(double)
void com.google.android.apps.lightcycle.sensor.SensorReader.setGyroBias(float[])
void com.google.android.apps.lightcycle.sensor.SensorReader.setHeadingDegrees(double)
void com.google.android.apps.lightcycle.shaders.GroundPlaneShader.setColor(float[])
void com.google.android.apps.lightcycle.shaders.ScaledTransparencyShader.setAlpha(float)
void com.google.android.apps.lightcycle.shaders.TargetShader.setAlpha(float)
void com.google.android.apps.lightcycle.shaders.TargetShader.setContrastFactor(float)
void com.google.android.apps.lightcycle.shaders.TransparencyShader.setAlpha(float)
void com.google.android.apps.lightcycle.util.FileUtil.storeFile(InputStream,File)
void com.google.android.apps.lightcycle.util.MetadataUtils.writeMetadataIntoJpegFile(String,String,String,boolean)
void com.google.android.apps.lightcycle.util.Size.set(Size)
void com.google.android.gms.common.internal.IGmsCallbacks$Stub$Proxy.onPostInitComplete(int,IBinder,Bundle)
void com.google.android.gms.common.internal.IGmsServiceBroker$Stub$Proxy.getPanoramaService(IGmsCallbacks,int,String,Bundle)
void com.google.android.gms.common.internal.IGmsServiceBroker$Stub$Proxy.getPlusService(IGmsCallbacks,int,String,String,String[],String,Bundle)
void com.google.android.gms.panorama.internal.IPanoramaCallbacks$Stub$Proxy.onPanoramaInfoLoaded(int,Bundle,int,Intent)
void com.google.android.mms.pdu.AcknowledgeInd.setReportAllowed(int)
void com.google.android.mms.pdu.AcknowledgeInd.setTransactionId(byte[])
void com.google.android.mms.pdu.DeliveryInd.setDate(long)
void com.google.android.mms.pdu.DeliveryInd.setMessageId(byte[])
void com.google.android.mms.pdu.DeliveryInd.setStatus(int)
void com.google.android.mms.pdu.DeliveryInd.setTo(EncodedStringValue[])
void com.google.android.mms.pdu.EncodedStringValue.appendTextString(byte[])
void com.google.android.mms.pdu.EncodedStringValue.setTextString(byte[])
void com.google.android.mms.pdu.GenericPdu.setFrom(EncodedStringValue)
void com.google.android.mms.pdu.GenericPdu.setMessageType(int)
void com.google.android.mms.pdu.GenericPdu.setMmsVersion(int)
void com.google.android.mms.pdu.MultimediaMessagePdu.setDate(long)
void com.google.android.mms.pdu.MultimediaMessagePdu.setPriority(int)
void com.google.android.mms.pdu.MultimediaMessagePdu.setSubject(EncodedStringValue)
void com.google.android.mms.pdu.NotificationInd.setContentClass(int)
void com.google.android.mms.pdu.NotificationInd.setContentLocation(byte[])
void com.google.android.mms.pdu.NotificationInd.setDeliveryReport(int)
void com.google.android.mms.pdu.NotificationInd.setExpiry(long)
void com.google.android.mms.pdu.NotificationInd.setFrom(EncodedStringValue)
void com.google.android.mms.pdu.NotificationInd.setMessageClass(byte[])
void com.google.android.mms.pdu.NotificationInd.setMessageSize(long)
void com.google.android.mms.pdu.NotificationInd.setSubject(EncodedStringValue)
void com.google.android.mms.pdu.NotificationInd.setTransactionId(byte[])
void com.google.android.mms.pdu.NotifyRespInd.setReportAllowed(int)
void com.google.android.mms.pdu.NotifyRespInd.setStatus(int)
void com.google.android.mms.pdu.NotifyRespInd.setTransactionId(byte[])
void com.google.android.mms.pdu.PduBody.addPart(int,PduPart)
void com.google.android.mms.pdu.PduComposer.append(int)
void com.google.android.mms.pdu.PduComposer.arraycopy(byte[],int,int)
void com.google.android.mms.pdu.PduHeaders.appendEncodedStringValue(EncodedStringValue,int)
void com.google.android.mms.pdu.PduHeaders.setEncodedStringValue(EncodedStringValue,int)
void com.google.android.mms.pdu.PduHeaders.setEncodedStringValues(EncodedStringValue[],int)
void com.google.android.mms.pdu.PduHeaders.setLongInteger(long,int)
void com.google.android.mms.pdu.PduHeaders.setOctet(int,int)
void com.google.android.mms.pdu.PduHeaders.setTextString(byte[],int)
void com.google.android.mms.pdu.PduParser.parseContentTypeParams(ByteArrayInputStream,HashMap,Integer)
void com.google.android.mms.pdu.PduPart.setCharset(int)
void com.google.android.mms.pdu.PduPart.setContentDisposition(byte[])
void com.google.android.mms.pdu.PduPart.setContentId(byte[])
void com.google.android.mms.pdu.PduPart.setContentLocation(byte[])
void com.google.android.mms.pdu.PduPart.setContentTransferEncoding(byte[])
void com.google.android.mms.pdu.PduPart.setContentType(byte[])
void com.google.android.mms.pdu.PduPart.setData(byte[])
void com.google.android.mms.pdu.PduPart.setFilename(byte[])
void com.google.android.mms.pdu.PduPart.setName(byte[])
void com.google.android.mms.pdu.PduPersister.updateHeaders(Uri,SendReq)
void com.google.android.mms.pdu.PduPersister.updateParts(Uri,PduBody,HashMap)
void com.google.android.mms.pdu.ReadOrigInd.setDate(long)
void com.google.android.mms.pdu.ReadOrigInd.setFrom(EncodedStringValue)
void com.google.android.mms.pdu.ReadOrigInd.setMessageId(byte[])
void com.google.android.mms.pdu.ReadOrigInd.setReadStatus(int)
void com.google.android.mms.pdu.ReadOrigInd.setTo(EncodedStringValue[])
void com.google.android.mms.pdu.ReadRecInd.setDate(long)
void com.google.android.mms.pdu.ReadRecInd.setMessageId(byte[])
void com.google.android.mms.pdu.ReadRecInd.setReadStatus(int)
void com.google.android.mms.pdu.ReadRecInd.setTo(EncodedStringValue[])
void com.google.android.mms.pdu.RetrieveConf.setContentType(byte[])
void com.google.android.mms.pdu.RetrieveConf.setDeliveryReport(int)
void com.google.android.mms.pdu.RetrieveConf.setFrom(EncodedStringValue)
void com.google.android.mms.pdu.RetrieveConf.setMessageClass(byte[])
void com.google.android.mms.pdu.RetrieveConf.setMessageId(byte[])
void com.google.android.mms.pdu.RetrieveConf.setReadReport(int)
void com.google.android.mms.pdu.RetrieveConf.setRetrieveStatus(int)
void com.google.android.mms.pdu.RetrieveConf.setRetrieveText(EncodedStringValue)
void com.google.android.mms.pdu.RetrieveConf.setTransactionId(byte[])
void com.google.android.mms.pdu.SendConf.setMessageId(byte[])
void com.google.android.mms.pdu.SendConf.setResponseStatus(int)
void com.google.android.mms.pdu.SendConf.setTransactionId(byte[])
void com.google.android.mms.pdu.SendReq.setBcc(EncodedStringValue[])
void com.google.android.mms.pdu.SendReq.setCc(EncodedStringValue[])
void com.google.android.mms.pdu.SendReq.setContentType(byte[])
void com.google.android.mms.pdu.SendReq.setDeliveryReport(int)
void com.google.android.mms.pdu.SendReq.setExpiry(long)
void com.google.android.mms.pdu.SendReq.setMessageClass(byte[])
void com.google.android.mms.pdu.SendReq.setMessageSize(long)
void com.google.android.mms.pdu.SendReq.setReadReport(int)
void com.google.android.mms.pdu.SendReq.setTo(EncodedStringValue[])
void com.google.android.mms.pdu.SendReq.setTransactionId(byte[])
void com.google.android.picasastore.PicasaStoreFacade.broadcastOperationReport(String,long,long,int,long,long)
void com.google.android.picasastore.VersionInfo.setVersion(String,int)
void com.google.android.picasasync.AlbumCollectorJson.addThumbnailUrl(JsonReader,ContentValues,String)
void com.google.android.picasasync.MetadataSync$MetadataSyncTask.performSync(SyncResult)
void com.google.android.picasasync.PhotoPrefetch$PrefetchAlbumCover.performSync(SyncResult)
void com.google.android.picasasync.PhotoPrefetch$PrefetchFullImage.performSync(SyncResult)
void com.google.android.picasasync.PhotoPrefetch$PrefetchScreenNail.performSync(SyncResult)
void com.google.android.picasasync.PicasaApi.setAuthToken(String)
void com.google.android.picasasync.PicasaSyncManager.performSync(PicasaSyncManager$SyncSession)
void com.google.android.picasasync.PicasaSyncManager.updateTasks(long)
void com.google.android.picasasync.PrefetchHelper.setAlbumCachingFlag(long,int)
void com.google.android.picasasync.R.init(Class)
void com.google.android.picasasync.UploadTaskEntry.setFingerprint(Fingerprint)
void com.google.android.picasasync.UploadsManager$UploadTask.performSync(SyncResult)
void com.google.common.base.CharMatcher$LookupTable.set(char)
void com.google.common.base.CharMatcher$Or.setBits(CharMatcher$LookupTable)
void com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator.set(Object)
void com.google.common.collect.Lists$ReverseList$1.set(Object)
void com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry.setExpirationTime(long)
void com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)
void com.google.common.collect.MapMakerInternalMap$NullEntry.setExpirationTime(long)
void com.google.common.collect.MapMakerInternalMap$SoftEntry.setExpirationTime(long)
void com.google.common.collect.MapMakerInternalMap$StrongEntry.setExpirationTime(long)
void com.google.common.collect.MapMakerInternalMap$WeakEntry.setExpirationTime(long)
void com.google.common.collect.Serialization$FieldSetter.set(Object,Object)
void com.google.common.collect.Serialization$FieldSetter.set(Object,int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.write(byte[])
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.write(byte[],int,int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.write(int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeBoolean(boolean)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeByte(int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeBytes(String)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeChar(int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeChars(String)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeDouble(double)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeFloat(float)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeInt(int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeLong(long)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeShort(int)
void com.google.common.io.ByteStreams$ByteArrayDataOutputStream.writeUTF(String)
void com.google.common.io.ByteStreams.write(byte[],OutputSupplier)
void com.google.common.io.Files.write(byte[],File)
void com.googlecode.mp4parser.AbstractContainerBox.getContent(ByteBuffer)
void com.googlecode.mp4parser.FullContainerBox.getContent(ByteBuffer)
void dalvik.system.profiler.HprofData.addStackTrace(HprofData$StackTrace,int[])
void gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask.<init>(UDPMessageChannel,String,int)
void java.lang.StringBuilder.setCharAt(int,char)
void java.lang.StringBuilder.setLength(int)
void java.security.KeyStore.setEntry(String,KeyStore$Entry,KeyStore$ProtectionParameter)
void java.security.cert.PKIXParameters.setDate(Date)
void java.text.AttributedString.addAttribute(AttributedCharacterIterator$Attribute,Object)
void java.text.AttributedString.addAttribute(AttributedCharacterIterator$Attribute,Object,int,int)
void java.util.AbstractList$FullListIterator.set(Object)
void java.util.AbstractList$SubAbstractList$SubAbstractListIterator.set(Object)
void java.util.HugeEnumSet.setRange(Enum,Enum)
void java.util.MiniEnumSet.setRange(Enum,Enum)
void java.util.concurrent.ConcurrentHashMap$HashEntry.setNext(ConcurrentHashMap$HashEntry)
void java.util.concurrent.ConcurrentHashMap.setEntryAt(ConcurrentHashMap$HashEntry[],int,ConcurrentHashMap$HashEntry)
void java.util.concurrent.ConcurrentLinkedQueue$Node.lazySetNext(ConcurrentLinkedQueue$Node)
void java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.put(Object)
void java.util.concurrent.atomic.AtomicReferenceArray.lazySet(int,Object)
void java.util.concurrent.atomic.AtomicReferenceArray.set(int,Object)
void java.util.zip.Adler32.update(byte[])
void java.util.zip.Adler32.update(byte[],int,int)
void java.util.zip.Adler32.update(int)
void javax.obex.ClientOperation.sendHeaders(HeaderSet)
void javax.obex.ClientSession.setConnectionID(long)
void javax.obex.HeaderSet.setHeader(int,Object)
void javax.obex.PrivateOutputStream.write(byte[])
void javax.obex.PrivateOutputStream.write(byte[],int,int)
void javax.obex.PrivateOutputStream.write(int)
void javax.obex.ServerOperation.sendHeaders(HeaderSet)
void javax.obex.ServerSession.sendResponse(int,byte[])
void javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware(boolean)
void javax.xml.validation.Validator.setFeature(String,boolean)
void javax.xml.validation.Validator.setProperty(String,Object)
void javax.xml.validation.ValidatorHandler.setFeature(String,boolean)
void javax.xml.validation.ValidatorHandler.setProperty(String,Object)
void libcore.icu.NativeConverter.setCallbackDecode(long,CharsetDecoder)
void libcore.icu.NativeConverter.setCallbackEncode(long,CharsetEncoder)
void libcore.icu.NativeDecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols)
void libcore.icu.NativeDecimalFormat.setDecimalFormatSymbols(LocaleData)
void libcore.io.DropBox$DefaultReporter.addData(String,byte[],int)
void libcore.io.DropBox$DefaultReporter.addText(String,String)
void libcore.net.http.HttpConnection.setRecycled()
void org.apache.harmony.xnet.provider.jsse.ClientSessionContext.setSessionTimeout(int)
void org.apache.harmony.xnet.provider.jsse.PinFailureLogger.log(String,boolean,boolean,List)
void org.apache.harmony.xnet.provider.jsse.ServerSessionContext.setSessionTimeout(int)
void org.apache.harmony.xnet.provider.jsse.TrustedCertificateIndex.index(TrustAnchor)
void org.apache.http.auth.AuthSchemeRegistry.register(String,AuthSchemeFactory)
void org.apache.http.auth.AuthSchemeRegistry.setItems(Map)
void org.apache.http.conn.BasicManagedEntity.writeTo(OutputStream)
void org.apache.http.conn.scheme.SchemeRegistry.setItems(Map)
void org.apache.http.cookie.CookieSpecRegistry.register(String,CookieSpecFactory)
void org.apache.http.cookie.CookieSpecRegistry.setItems(Map)
void org.apache.http.entity.AbstractHttpEntity.setContentEncoding(String)
void org.apache.http.entity.AbstractHttpEntity.setContentType(String)
void org.apache.http.entity.BufferedHttpEntity.writeTo(OutputStream)
void org.apache.http.impl.AbstractHttpClientConnection.sendRequestHeader(HttpRequest)
void org.apache.http.impl.HttpConnectionMetricsImpl.setMetric(String,Object)
void org.apache.http.impl.auth.DigestScheme.overrideParamter(String,String)
void org.apache.http.impl.client.BasicCredentialsProvider.setCredentials(AuthScope,Credentials)
void org.apache.http.impl.conn.AbstractPooledConnAdapter.setState(Object)
void org.apache.http.impl.conn.LoggingSessionOutputBuffer.writeLine(CharArrayBuffer)
void org.apache.http.impl.conn.LoggingSessionOutputBuffer.writeLine(String)
void org.apache.http.impl.cookie.AbstractCookieSpec.registerAttribHandler(String,CookieAttributeHandler)
void org.apache.http.impl.cookie.BasicClientCookie.setAttribute(String,String)
void org.apache.http.impl.io.AbstractSessionOutputBuffer.write(byte[])
void org.apache.http.impl.io.AbstractSessionOutputBuffer.write(byte[],int,int)
void org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine(CharArrayBuffer)
void org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine(String)
void org.apache.http.message.AbstractHttpMessage.setHeader(Header)
void org.apache.http.message.AbstractHttpMessage.setHeader(String,String)
void org.apache.http.message.AbstractHttpMessage.setHeaders(Header[])
void org.apache.http.message.BasicHttpResponse.setStatusLine(ProtocolVersion,int)
void org.apache.http.message.BasicHttpResponse.setStatusLine(ProtocolVersion,int,String)
void org.apache.http.params.BasicHttpParams.setParameters(String[],Object)
void org.apache.http.protocol.BasicHttpContext.setAttribute(String,Object)
void org.apache.http.protocol.DefaultedHttpContext.setAttribute(String,Object)
void org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)
